<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>liuhui | 刘辉</title>
  <subtitle>不忘初心</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hui-liu.github.io/"/>
  <updated>2017-10-28T06:32:23.447Z</updated>
  <id>https://hui-liu.github.io/</id>
  
  <author>
    <name>Hui Liu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>kaks计算</title>
    <link href="https://hui-liu.github.io/blog/kaks%E8%AE%A1%E7%AE%97/"/>
    <id>https://hui-liu.github.io/blog/kaks计算/</id>
    <published>2017-10-28T06:01:11.000Z</published>
    <updated>2017-10-28T06:32:23.447Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Ka，Ks-的概念和意义"><a href="#Ka，Ks-的概念和意义" class="headerlink" title="Ka，Ks 的概念和意义"></a>Ka，Ks 的概念和意义</h3><p>Ks（synonymous substitutions）：同义替换，即一个密码子中碱基的突变不改变该密码子编码的氨基酸。</p>
<p>Ka（nonsynonymous substitutions）：非同义替换，即一个密码子中碱基的突变改变该密码子编码的氨基酸。</p>
<p>dN/dS 相当于 Ka/Ks，其意义如下（<a href="https://www.biostars.org/p/5817/）：" target="_blank" rel="external">https://www.biostars.org/p/5817/）：</a></p>
<blockquote>
<p><strong>Neutral Evolution (drift):</strong> dN/dS ratio = 1 implies there has been equal numbers of synonymous (dna substitutions that do not affect the protein sequence) and non-synonymous changes (dna substitutions that do affect the protein sequence) during the time between ancestral to the modern versions of the protein.</p>
<p><strong>Positive Selection (adaptive evolution):</strong> dN/dS ratio &gt; 1 implies there has been more non-synonymous changes than synonymous changes. There has been evolutionary pressure to escape from the ancestral state - i.e. positive selection pressure. This can occur for example in paralogues that are required to serve a novel function, or in proteins of parasites that need to escape host immune recognition (e.g. changes to avoid MHC-1 binding to evade T-cell attack).</p>
<p><strong>Negative Selection (conservation):</strong> dN/dS ratio &lt; 1 implies there has been more synonymous changes than non-synonymous changes. There has been evolutionary pressure to conserve the ancestral state - i.e. negative selection pressure. This can occur for example in orthologues that are required to maintain (conserve) some function encoded in the protein sequence, since changes from this state would lead to disruption of function.</p>
</blockquote>
<h3 id="计算Ka，Ks"><a href="#计算Ka，Ks" class="headerlink" title="计算Ka，Ks"></a>计算Ka，Ks</h3><p>使用软件 <strong>KaKs_Calculator</strong> 进行计算，该软件的输入文件是核酸水平的 <strong>AXT</strong>格式文件。下文讲解 axt 文件的准备和该软件的使用示例。</p>
<p>假如有如下一对同源基因的蛋白质序列以及其对应的 cds 序列</p>
<p>蛋白质序列（example_pep.fas）</p>
<figure class="highlight dns"><table><tr><td class="code"><pre><div class="line">&gt;ENSP<span class="number">00000004982</span></div><div class="line">MEIPVPVQPSWLRRASAPLPGLSAPGRLFDQRFGEGLLEAELAALCPTTLAPYYLRAPSVALPVAQVPTD</div><div class="line">PGHFSVLLDVKHFSPEEIAVKVVGEHVEVHARHEERPDEHGFVAREFHRRYRLPPGVDPAAVTSALSPEG</div><div class="line">VLSIQAAPASAQAPPPAAAK</div><div class="line">&gt;ENSMUSP<span class="number">00000039172</span></div><div class="line">MEIPVPVQPSWLRRASAPLPGFSAPGRLFDQRFGEGLLEAELASLCPAAIAPYYLRAPSVALPTAQVSTD</div><div class="line">SGYFSVLLDVKHFLPEEISVKVVDDHVEVHARHEERPDEHGFIAREFHRRYRLPPGVDPAAVTSALSPEG</div><div class="line">VLSIQATPASAQAQLPSPPAAK</div></pre></td></tr></table></figure>
<p>cds 序列（example_cds.fas）</p>
<figure class="highlight objectivec"><table><tr><td class="code"><pre><div class="line">&gt;ENSP00000004982</div><div class="line">ATGGAGATCCCTGTGCCTGTGCAGCCGTCTTGGCTGCGCCGCGCCTCGGCCCCGTTGCCCGGACTTTCGG</div><div class="line"><span class="built_in">CGCCCGGACGCCTCTTTGACCAGCGCTTCGGCGAGGGGCTGCTGGAGGCCGAGCTGGCTGCGCTCTGCCC</span></div><div class="line"><span class="built_in">CACCACGCTCGCCCCCTACTACCTGCGCGCACCCAGCGTGGCGCTGCCCGTCGCCCAGGTGCCGACGGAC</span></div><div class="line">CCCGGCCACTTTTCGGTGCTGCTAGACGTGAAGCACTTCTCGCCGGAGGAAATTGCTGTCAAGGTGGTGG</div><div class="line">GCGAACACGTGGAGGTGCACGCGCGCCACGAGGAGCGCCCGGATGAGCACGGATTCGTCGCGCGCGAGTT</div><div class="line">CCACCGTCGCTACCGCCTGCCGCCTGGCGTGGATCCGGCTGCCGTGACGTCCGCGCTGTCCCCCGAGGGC</div><div class="line">GTCCTGTCCATCCAGGCCGCACCAGCGTCGGCCCAGGCCCCACCGCCAGCCGCAGCCAAGTAG</div><div class="line">&gt;ENSMUSP00000039172</div><div class="line">ATGGAGATCCCCGTGCCTGTGCAGCCTTCTTGGCTGCGCCGTGCTTCAGCTCCTTTACCAGGTTTCTCTG</div><div class="line"><span class="built_in">CTCCGGGACGCCTCTTTGACCAGCGTTTCGGCGAAGGGCTGCTTGAGGCAGAGCTGGCTTCACTGTGCCC</span></div><div class="line">TGCTGCGATCGCCCCCTACTATCTGCGCGCCCCCAGTGTGGCGTTACCCACAGCCCAGGTGTCCACGGAC</div><div class="line">TCTGGGTATTTTTCCGTGCTGCTGGATGTGAAGCACTTCTTGCCAGAGGAAATCTCTGTCAAGGTGGTTG</div><div class="line">ACGACCATGTGGAGGTCCATGCTCGGCACGAGGAGCGCCCGGATGAACACGGATTCATTGCTCGAGAGTT</div><div class="line">CCACCGCCGATACCGCCTGCCTCCTGGTGTGGACCCTGCTGCTGTGACCTCAGCACTGTCTCCTGAGGGT</div><div class="line">GTCCTGTCCATCCAGGCCACACCAGCGTCGGCCCAGGCCCAACTTCCGTCACCACCTGCTGCCAAGTAG</div></pre></td></tr></table></figure>
<h4 id="step-1"><a href="#step-1" class="headerlink" title="step 1:"></a>step 1:</h4><p><strong>蛋白质序列联配（alignment）</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><div class="line"><span class="selector-tag">mafft</span> <span class="selector-tag">--auto</span> <span class="selector-tag">example_pep</span><span class="selector-class">.fas</span> &gt; <span class="selector-tag">example_pep_aln</span><span class="selector-class">.fas</span></div></pre></td></tr></table></figure>
<h4 id="Step-2"><a href="#Step-2" class="headerlink" title="Step 2:"></a>Step 2:</h4><p><strong>将蛋白质序列联配转换成核酸序列联配</strong></p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><div class="line">perl pal2nal<span class="selector-class">.pl</span> example_pep_aln<span class="selector-class">.fas</span> example_cds<span class="selector-class">.fas</span> -output fasta &gt; example_cds_aln.fas</div></pre></td></tr></table></figure>
<h4 id="Step-3"><a href="#Step-3" class="headerlink" title="Step 3:"></a>Step 3:</h4><p><strong>将核酸序列联配转为 AXT 格式</strong></p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><div class="line">python FastaIntoAXT<span class="selector-class">.py</span> example_cds_aln<span class="selector-class">.fas</span> &gt; example_cds_aln.axt</div></pre></td></tr></table></figure>
<p>其中，<code>FastaIntoAXT.py</code> 的内容如下：</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><div class="line">import sys</div><div class="line"></div><div class="line">def parseFasta(filename):</div><div class="line">    fas = &#123;&#125;</div><div class="line">    idlis = []</div><div class="line">    id = None</div><div class="line">    with <span class="keyword">open</span>(filename, <span class="string">'r'</span>) <span class="keyword">as</span> fh:</div><div class="line">        <span class="keyword">for</span> <span class="built_in">line</span> in fh:</div><div class="line">            <span class="keyword">if</span> <span class="built_in">line</span>[<span class="number">0</span>] == <span class="string">'&gt;'</span>:</div><div class="line">                header = <span class="built_in">line</span>[<span class="number">1</span>:].rstrip()</div><div class="line">                id = header.<span class="keyword">split</span>()[<span class="number">0</span>]</div><div class="line">                idlis.<span class="keyword">append</span>(id)</div><div class="line">                fas[id] = []</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                fas[id].<span class="keyword">append</span>(<span class="built_in">line</span>.rstrip())</div><div class="line">        <span class="keyword">for</span> id, seq in fas.iteritems():</div><div class="line">            fas[id] = <span class="string">''</span>.<span class="keyword">join</span>(seq)</div><div class="line">    <span class="keyword">return</span> fas, idlis</div><div class="line"></div><div class="line">ALN, IDlis = parseFasta(sys.<span class="built_in">argv</span>[<span class="number">1</span>])</div><div class="line"></div><div class="line">outid = <span class="string">"-"</span>.<span class="keyword">join</span>(IDlis)</div><div class="line">outseq = <span class="string">"\n"</span>.<span class="keyword">join</span>([ALN[IDlis[<span class="number">0</span>]],ALN[IDlis[<span class="number">1</span>]]])</div><div class="line"></div><div class="line"><span class="keyword">print</span> <span class="string">"&gt;"</span> + outid</div><div class="line"><span class="keyword">print</span> outseq</div></pre></td></tr></table></figure>
<h4 id="Step-4"><a href="#Step-4" class="headerlink" title="Step 4:"></a>Step 4:</h4><p>计算 Ka，Ks</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><div class="line">KaKs_Calculator -<span class="selector-tag">i</span> example_cds_aln<span class="selector-class">.axt</span> -o example<span class="selector-class">.kaks</span> -m YN</div></pre></td></tr></table></figure>
<p>其中输出文件是 example.kaks，其内容如下：</p>
<figure class="highlight oxygene"><table><tr><td class="code"><pre><div class="line"><span class="keyword">Sequence</span>        <span class="function"><span class="keyword">Method</span>  <span class="title">Ka</span>      <span class="title">Ks</span>      <span class="title">Ka</span>/<span class="title">Ks</span>   <span class="title">P</span>-<span class="title">Value</span><span class="params">(Fisher)</span> <span class="title">Length</span>  <span class="title">S</span>-<span class="title">Sites</span> <span class="title">N</span>-<span class="title">Sites</span> <span class="title">Fold</span>-<span class="title">Sites</span><span class="params">(0:2:4)</span>       <span class="title">Substitutions</span>   <span class="title">S</span>-<span class="title">Substitutions</span>   <span class="title">N</span>-<span class="title">Substitutions</span> <span class="title">Fold</span>-<span class="title">S</span>-<span class="title">Substitutions</span><span class="params">(0:2:4)</span>     <span class="title">Fold</span>-<span class="title">N</span>-<span class="title">Substitutions</span><span class="params">(0:2:4)</span>     <span class="title">Divergence</span>-<span class="title">Time</span> <span class="title">Substitution</span>-<span class="title">Rate</span>-<span class="title">Ratio</span><span class="params">(rTC:rAG:rTA:rCG:rTG:rCA/rCA)</span>      <span class="title">GC</span><span class="params">(1:2:3)</span>       <span class="title">ML</span>-<span class="title">Score</span>        <span class="title">AICc</span>    <span class="title">Akaike</span>-<span class="title">Weight</span>   <span class="title">Model</span></span></div><div class="line"><span class="title">ENSP00000004982</span>-<span class="title">ENSMUSP00000039172</span>      <span class="title">YN</span>      0.0571682       0.669484        0.0853913       6.30263<span class="title">e</span>-22     480     150.779 329.221 <span class="title">NA82</span>      64      18      <span class="title">NA</span>      <span class="title">NA</span>      0.249511        6.00228:<span class="number">6.00228</span>:<span class="number">1</span>:<span class="number">1</span>:<span class="number">1</span>:<span class="number">1</span> <span class="number">0.659465</span>(<span class="number">0.759259</span>:<span class="number">0.503086</span>:<span class="number">0.716049</span>)    NA      NA      NANA</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Ka，Ks-的概念和意义&quot;&gt;&lt;a href=&quot;#Ka，Ks-的概念和意义&quot; class=&quot;headerlink&quot; title=&quot;Ka，Ks 的概念和意义&quot;&gt;&lt;/a&gt;Ka，Ks 的概念和意义&lt;/h3&gt;&lt;p&gt;Ks（synonymous substitutions）：同
    
    </summary>
    
      <category term="生信" scheme="https://hui-liu.github.io/categories/%E7%94%9F%E4%BF%A1/"/>
    
    
      <category term="生信" scheme="https://hui-liu.github.io/tags/%E7%94%9F%E4%BF%A1/"/>
    
  </entry>
  
  <entry>
    <title>非root安装python模块</title>
    <link href="https://hui-liu.github.io/blog/%E9%9D%9Eroot%E5%AE%89%E8%A3%85python%E6%A8%A1%E5%9D%97/"/>
    <id>https://hui-liu.github.io/blog/非root安装python模块/</id>
    <published>2017-10-15T14:25:40.000Z</published>
    <updated>2017-10-15T14:28:14.367Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-创建以下目录"><a href="#1-创建以下目录" class="headerlink" title="1. 创建以下目录"></a>1. 创建以下目录</h3><figure class="highlight awk"><table><tr><td class="code"><pre><div class="line">mkdir -p ~<span class="regexp">/.local/</span>lib<span class="regexp">/python2.7/</span>site-packages<span class="regexp">/</span></div></pre></td></tr></table></figure>
<h3 id="2-将以下路径添加到-bash-profile"><a href="#2-将以下路径添加到-bash-profile" class="headerlink" title="2. 将以下路径添加到 .bash_profile"></a>2. 将以下路径添加到 <code>.bash_profile</code></h3><figure class="highlight crystal"><table><tr><td class="code"><pre><div class="line">PYTHONPATH=$HOME/.local/<span class="class"><span class="keyword">lib</span>/<span class="title">python2</span>.7/<span class="title">site</span>-<span class="title">packages</span></span></div><div class="line">export PATH=$HOME/.local/<span class="symbol">bin:</span>$PATH</div></pre></td></tr></table></figure>
<p>并刷新</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="built_in">source</span> .bashrc</div></pre></td></tr></table></figure>
<h3 id="3-安装"><a href="#3-安装" class="headerlink" title="3. 安装"></a>3. 安装</h3><figure class="highlight maxima"><table><tr><td class="code"><pre><div class="line">python setup.py install --<span class="built_in">prefix</span>=~/.<span class="built_in">local</span>/</div></pre></td></tr></table></figure>
<h3 id="4-一个例子"><a href="#4-一个例子" class="headerlink" title="4. 一个例子"></a>4. 一个例子</h3><figure class="highlight vim"><table><tr><td class="code"><pre><div class="line"># 安装 MySQLdb</div><div class="line">wget http://downloads.sourceforge.net/project/mysql-<span class="keyword">python</span>/mysql-<span class="keyword">python</span>-test/<span class="number">1.2</span>.<span class="number">3</span>c1/MySQL-<span class="keyword">python</span>-<span class="number">1.2</span>.<span class="number">3</span>c1.tar.gz?use_mirror=nchc</div><div class="line">#mv MySQL-<span class="keyword">python</span>-<span class="number">1.2</span>.<span class="number">3</span>c1.tar.gz\?use_mirror=nchc MySQL-<span class="keyword">python</span>-<span class="number">1.2</span>.<span class="number">3</span>c1.tar.gz</div><div class="line"></div><div class="line">tar -zxvf MySQL-<span class="keyword">python</span>-<span class="number">1.2</span>.<span class="number">3</span>c1.tar.gz</div><div class="line"><span class="keyword">cd</span> MySQL-<span class="keyword">python</span>-<span class="number">1.2</span>.<span class="number">3</span>c1/</div><div class="line"><span class="keyword">python</span> setup.<span class="keyword">py</span> build</div><div class="line"><span class="keyword">python</span> setup.<span class="keyword">py</span> install --prefix=~/.local/</div></pre></td></tr></table></figure>
<p>测试</p>
<p><img src="/blog/非root安装python模块/1.png" alt="1"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-创建以下目录&quot;&gt;&lt;a href=&quot;#1-创建以下目录&quot; class=&quot;headerlink&quot; title=&quot;1. 创建以下目录&quot;&gt;&lt;/a&gt;1. 创建以下目录&lt;/h3&gt;&lt;figure class=&quot;highlight awk&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl
    
    </summary>
    
      <category term="生信" scheme="https://hui-liu.github.io/categories/%E7%94%9F%E4%BF%A1/"/>
    
    
      <category term="linux" scheme="https://hui-liu.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>R笔记</title>
    <link href="https://hui-liu.github.io/blog/R%E7%AC%94%E8%AE%B0/"/>
    <id>https://hui-liu.github.io/blog/R笔记/</id>
    <published>2017-10-08T14:59:39.000Z</published>
    <updated>2017-10-08T15:17:20.062Z</updated>
    
    <content type="html"><![CDATA[<h1 id="R-语言数据操作基础"><a href="#R-语言数据操作基础" class="headerlink" title="R 语言数据操作基础"></a>R 语言数据操作基础</h1><h2 id="1-数据类型"><a href="#1-数据类型" class="headerlink" title="1. 数据类型"></a>1. 数据类型</h2><p>R 里的数据类型有数值型（numeric），复数型（complex），字符型（character）以及逻辑型（logical）。还有两种特殊的数据：数据的缺失（NA）和数据的未知状态（NULL）。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><div class="line">x &lt;- c(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="literal">NA</span>)</div><div class="line">x</div><div class="line">[<span class="number">1</span>]  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span> <span class="literal">NA</span></div><div class="line">mean(<span class="literal">NA</span>) <span class="comment"># 在计算时，NA 不会被直接剔除</span></div><div class="line">[<span class="number">1</span>] <span class="literal">NA</span></div><div class="line">length(x)</div><div class="line">[<span class="number">1</span>] <span class="number">5</span></div><div class="line">mean(x, na.rm = <span class="literal">T</span>) <span class="comment"># 去除 NA 的影响</span></div><div class="line">[<span class="number">1</span>] <span class="number">2.5</span></div><div class="line">mean(na.omit(x), na.rm = <span class="literal">T</span>) <span class="comment"># 另外一种方法</span></div><div class="line">[<span class="number">1</span>] <span class="number">2.5</span></div><div class="line"><span class="comment"># NULL 则跟 NA 不一样</span></div><div class="line">y &lt;- c(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="literal">NULL</span>)</div><div class="line">mean(y)</div><div class="line">[<span class="number">1</span>] <span class="number">2.5</span></div><div class="line">length(y)</div><div class="line">[<span class="number">1</span>] <span class="number">4</span></div><div class="line"><span class="comment">###</span></div><div class="line"><span class="comment"># is.na 判断数据中是否含有 NA</span></div><div class="line">is.na(x)</div><div class="line">[<span class="number">1</span>] <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span>  <span class="literal">TRUE</span></div><div class="line">is.na(y)</div><div class="line">[<span class="number">1</span>] <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span></div><div class="line"><span class="comment"># is.null 判断整个数据是否为 NULL</span></div><div class="line">is.null(x)</div><div class="line">[<span class="number">1</span>] <span class="literal">FALSE</span></div><div class="line">is.null(y)</div><div class="line">[<span class="number">1</span>] <span class="literal">FALSE</span></div></pre></td></tr></table></figure>
<h2 id="2-对象及其属性"><a href="#2-对象及其属性" class="headerlink" title="2. 对象及其属性"></a>2. 对象及其属性</h2><p>对象是 R 语言的基础性概念，R 语言内的数据变量、函数结果、产生的图像等，都是以对象的形似存在的。R 语言的对象类型有向量（vector）、数组（array）、矩阵（matrix）、列表（list）和数据框（data frame）等。列表和数据框可以包含不同的数据类型。</p>
<p><img src="/blog/R笔记/R语言对象类型.png" alt="R语言对象类型"></p>
<p>对象的长度可以是 0，可以通过对象的下标赋值。如果需要赋值的下标超过了原有对象的长度，中间会被 NA 填充。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><div class="line">a &lt;- numeric()</div><div class="line">a</div><div class="line">numeric(<span class="number">0</span>)</div><div class="line">a[<span class="number">1</span>] &lt;- <span class="number">2</span></div><div class="line">a[<span class="number">4</span>] &lt;- <span class="number">5</span></div><div class="line">a</div><div class="line">[<span class="number">1</span>]  <span class="number">2</span> <span class="literal">NA</span> <span class="literal">NA</span>  <span class="number">5</span></div></pre></td></tr></table></figure>
<h3 id="查看对象属性"><a href="#查看对象属性" class="headerlink" title="查看对象属性"></a>查看对象属性</h3><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">x &lt;- data.frame(name1 = c(<span class="number">11</span>:<span class="number">16</span>), name2 = c(<span class="number">17</span>:<span class="number">22</span>)) <span class="comment"># 创建一个数据框</span></div><div class="line">x</div><div class="line">  name1 name2</div><div class="line"><span class="number">1</span>    <span class="number">11</span>    <span class="number">17</span></div><div class="line"><span class="number">2</span>    <span class="number">12</span>    <span class="number">18</span></div><div class="line"><span class="number">3</span>    <span class="number">13</span>    <span class="number">19</span></div><div class="line"><span class="number">4</span>    <span class="number">14</span>    <span class="number">20</span></div><div class="line"><span class="number">5</span>    <span class="number">15</span>    <span class="number">21</span></div><div class="line"><span class="number">6</span>    <span class="number">16</span>    <span class="number">22</span></div><div class="line"></div><div class="line">attributes(x) <span class="comment"># 查看属性</span></div><div class="line">$names</div><div class="line">[<span class="number">1</span>] <span class="string">"name1"</span> <span class="string">"name2"</span></div><div class="line"></div><div class="line">$row.names</div><div class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span></div><div class="line"></div><div class="line">$class</div><div class="line">[<span class="number">1</span>] <span class="string">"data.frame"</span></div><div class="line"></div><div class="line"><span class="comment"># 单独来看</span></div><div class="line">names(x) <span class="comment"># 列名称属性</span></div><div class="line">[<span class="number">1</span>] <span class="string">"name1"</span> <span class="string">"name2"</span></div><div class="line">row.names(x)</div><div class="line">[<span class="number">1</span>] <span class="string">"1"</span> <span class="string">"2"</span> <span class="string">"3"</span> <span class="string">"4"</span> <span class="string">"5"</span> <span class="string">"6"</span></div><div class="line">class(x)</div><div class="line">[<span class="number">1</span>] <span class="string">"data.frame"</span></div><div class="line"><span class="comment">#</span></div><div class="line">attr(x, <span class="string">"name"</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"name1"</span> <span class="string">"name2"</span></div><div class="line">attr(x, <span class="string">"name"</span>)[<span class="number">1</span>]</div><div class="line">[<span class="number">1</span>] <span class="string">"name1"</span></div><div class="line">attr(x, <span class="string">"name"</span>)[<span class="number">2</span>]</div><div class="line">[<span class="number">1</span>] <span class="string">"name2"</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># </span></div><div class="line">nrow(x) <span class="comment"># 行数</span></div><div class="line">[<span class="number">1</span>] <span class="number">6</span></div><div class="line">ncol(x) <span class="comment"># 列数</span></div><div class="line">[<span class="number">1</span>] <span class="number">2</span></div></pre></td></tr></table></figure>
<h2 id="3-向量"><a href="#3-向量" class="headerlink" title="3. 向量"></a>3. 向量</h2><h3 id="3-1-向量索引"><a href="#3-1-向量索引" class="headerlink" title="3.1 向量索引"></a>3.1 向量索引</h3><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">a &lt;- c(<span class="number">11</span>:<span class="number">20</span>)</div><div class="line">a</div><div class="line"> [<span class="number">1</span>] <span class="number">11</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span> <span class="number">17</span> <span class="number">18</span> <span class="number">19</span> <span class="number">20</span></div><div class="line"><span class="comment"># (1) 下标索取</span></div><div class="line">a[<span class="number">1</span>]</div><div class="line">[<span class="number">1</span>] <span class="number">11</span></div><div class="line">a[c(<span class="number">1</span>:<span class="number">3</span>)]</div><div class="line">[<span class="number">1</span>] <span class="number">11</span> <span class="number">12</span> <span class="number">13</span></div><div class="line"><span class="comment"># (2) which 索取</span></div><div class="line">which(a == c(<span class="number">11</span>,<span class="number">16</span>))</div><div class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">6</span></div><div class="line">a[which(a == c(<span class="number">11</span>,<span class="number">16</span>))]</div><div class="line">[<span class="number">1</span>] <span class="number">11</span> <span class="number">16</span></div><div class="line">a[which(a <span class="number">12</span> &amp; a &lt; <span class="number">17</span>)]</div><div class="line">[<span class="number">1</span>] <span class="number">13</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span></div><div class="line"><span class="comment"># (3) subset 索取</span></div><div class="line">subset(a, a <span class="number">12</span> &amp; a &lt; <span class="number">17</span>)</div><div class="line">[<span class="number">1</span>] <span class="number">13</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span></div><div class="line"><span class="comment"># (4) match 索取</span></div><div class="line"><span class="comment"># match(x, table, nomatch = NA_integer_, incomparables = NULL)</span></div><div class="line"><span class="comment"># table 为匹配的数值，可以是向量形式；nomatch 为设置不匹配时返回的值，默认为 NA；</span></div><div class="line"><span class="comment"># incomparables 为设置 table 中的无效值，默认为 NULL</span></div><div class="line">a &lt;- c(<span class="number">20</span>:<span class="number">11</span>)</div><div class="line">match(c(<span class="number">11</span>:<span class="number">15</span>),a)</div><div class="line">[<span class="number">1</span>] <span class="number">10</span>  <span class="number">9</span>  <span class="number">8</span>  <span class="number">7</span>  <span class="number">6</span></div><div class="line"><span class="comment"># (5) %in% 索引</span></div><div class="line"><span class="comment"># 判定对象是否在包含某项数据</span></div><div class="line">c(<span class="number">11</span>,<span class="number">31</span>) %<span class="keyword">in</span>% a</div><div class="line">[<span class="number">1</span>]  <span class="literal">TRUE</span> <span class="literal">FALSE</span></div></pre></td></tr></table></figure>
<h3 id="3-2-向量编辑"><a href="#3-2-向量编辑" class="headerlink" title="3.2 向量编辑"></a>3.2 向量编辑</h3><figure class="highlight r"><table><tr><td class="code"><pre><div class="line"><span class="comment">#</span></div><div class="line">a[<span class="number">2</span>] &lt;- <span class="number">21</span></div><div class="line">a</div><div class="line"> [<span class="number">1</span>] <span class="number">11</span> <span class="number">21</span> <span class="number">13</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span> <span class="number">17</span> <span class="number">18</span> <span class="number">19</span> <span class="number">20</span></div><div class="line"><span class="comment">#</span></div><div class="line">a &lt;- c(a, c(<span class="number">31</span>:<span class="number">33</span>))</div><div class="line">a</div><div class="line"> [<span class="number">1</span>] <span class="number">11</span> <span class="number">21</span> <span class="number">13</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span> <span class="number">17</span> <span class="number">18</span> <span class="number">19</span> <span class="number">20</span> <span class="number">31</span> <span class="number">32</span> <span class="number">33</span></div><div class="line"><span class="comment">#</span></div><div class="line">a &lt;- a[-c(<span class="number">1</span>:<span class="number">3</span>)]</div><div class="line">a</div><div class="line"> [<span class="number">1</span>] <span class="number">14</span> <span class="number">15</span> <span class="number">16</span> <span class="number">17</span> <span class="number">18</span> <span class="number">19</span> <span class="number">20</span> <span class="number">31</span> <span class="number">32</span> <span class="number">33</span></div></pre></td></tr></table></figure>
<h3 id="3-3-向量排序"><a href="#3-3-向量排序" class="headerlink" title="3.3 向量排序"></a>3.3 向量排序</h3><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">x &lt;- c(<span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">3</span>)</div><div class="line">x</div><div class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">2</span> <span class="number">5</span> <span class="number">9</span> <span class="number">4</span> <span class="number">6</span> <span class="number">3</span></div><div class="line"><span class="comment"># 按下标倒序</span></div><div class="line">rev(x)</div><div class="line">[<span class="number">1</span>] <span class="number">3</span> <span class="number">6</span> <span class="number">4</span> <span class="number">9</span> <span class="number">5</span> <span class="number">2</span> <span class="number">1</span></div><div class="line"><span class="comment"># 按数值从小到大排序</span></div><div class="line">sort(x)</div><div class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">9</span></div><div class="line"><span class="comment"># 按数值从大到小排序</span></div><div class="line">sort(x, decreasing = <span class="literal">TRUE</span>)</div><div class="line">[<span class="number">1</span>] <span class="number">9</span> <span class="number">6</span> <span class="number">5</span> <span class="number">4</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span></div><div class="line">rev(sort(x))</div><div class="line">[<span class="number">1</span>] <span class="number">9</span> <span class="number">6</span> <span class="number">5</span> <span class="number">4</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span></div></pre></td></tr></table></figure>
<h3 id="3-4-向量去重"><a href="#3-4-向量去重" class="headerlink" title="3.4 向量去重"></a>3.4 向量去重</h3><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">x &lt;- c(<span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>)</div><div class="line">x</div><div class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">2</span> <span class="number">5</span> <span class="number">9</span> <span class="number">4</span> <span class="number">6</span> <span class="number">3</span> <span class="number">2</span> <span class="number">2</span></div><div class="line">unique(x)</div><div class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">2</span> <span class="number">5</span> <span class="number">9</span> <span class="number">4</span> <span class="number">6</span> <span class="number">3</span></div><div class="line"><span class="comment">#</span></div><div class="line">table(x)</div><div class="line">x</div><div class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">9</span> </div><div class="line"><span class="number">1</span> <span class="number">3</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> </div><div class="line">names(table(x))</div><div class="line">[<span class="number">1</span>] <span class="string">"1"</span> <span class="string">"2"</span> <span class="string">"3"</span> <span class="string">"4"</span> <span class="string">"5"</span> <span class="string">"6"</span> <span class="string">"9"</span></div><div class="line">as.numeric(names(table(x)))</div><div class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">9</span></div></pre></td></tr></table></figure>
<h3 id="3-5-缺失值"><a href="#3-5-缺失值" class="headerlink" title="3.5  缺失值"></a>3.5  缺失值</h3><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">b &lt;- c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="literal">NA</span>,<span class="number">5</span>)</div><div class="line">b</div><div class="line">[<span class="number">1</span>]  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span> <span class="literal">NA</span>  <span class="number">5</span></div><div class="line">b[!is.na(b)]</div><div class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">5</span></div><div class="line"></div><div class="line">d &lt;- data.frame(name1 = c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="literal">NA</span>,<span class="number">5</span>),name2 = (<span class="number">6</span>:<span class="number">10</span>))</div><div class="line">d</div><div class="line">  name1 name2</div><div class="line"><span class="number">1</span>     <span class="number">1</span>     <span class="number">6</span></div><div class="line"><span class="number">2</span>     <span class="number">2</span>     <span class="number">7</span></div><div class="line"><span class="number">3</span>     <span class="number">3</span>     <span class="number">8</span></div><div class="line"><span class="number">4</span>    <span class="literal">NA</span>     <span class="number">9</span></div><div class="line"><span class="number">5</span>     <span class="number">5</span>    <span class="number">10</span></div><div class="line">na.omit(d)</div><div class="line">  name1 name2</div><div class="line"><span class="number">1</span>     <span class="number">1</span>     <span class="number">6</span></div><div class="line"><span class="number">2</span>     <span class="number">2</span>     <span class="number">7</span></div><div class="line"><span class="number">3</span>     <span class="number">3</span>     <span class="number">8</span></div><div class="line"><span class="number">5</span>     <span class="number">5</span>    <span class="number">10</span></div></pre></td></tr></table></figure>
<h3 id="3-6-向量间操作"><a href="#3-6-向量间操作" class="headerlink" title="3.6 向量间操作"></a>3.6 向量间操作</h3><figure class="highlight r"><table><tr><td class="code"><pre><div class="line"><span class="comment"># 比较大小</span></div><div class="line">a &lt;- c(<span class="number">1</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">3</span>)</div><div class="line">b &lt;- c(<span class="number">2</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">7</span>)</div><div class="line">c &lt;- c(<span class="number">0</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">6</span>)</div><div class="line"><span class="comment"># (1) 取相同索引下最小值</span></div><div class="line">pmin(a,b,c)</div><div class="line">[<span class="number">1</span>] <span class="number">0</span> <span class="number">4</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span></div><div class="line"><span class="comment"># (2) 取相同索引大最小值</span></div><div class="line">pmax(a,b,c)</div><div class="line">[<span class="number">1</span>] <span class="number">2</span> <span class="number">6</span> <span class="number">5</span> <span class="number">8</span> <span class="number">7</span></div><div class="line"><span class="comment"># 交集、并集、补集</span></div><div class="line"><span class="comment">#  union(x, y)</span></div><div class="line"><span class="comment">#  intersect(x, y)</span></div><div class="line"><span class="comment">#  setdiff(x, y)</span></div><div class="line"><span class="comment">#  setequal(x, y)</span></div><div class="line">a &lt;- c(<span class="number">1</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">3</span>)</div><div class="line">b &lt;- c(<span class="number">2</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">7</span>)</div><div class="line"><span class="comment"># (1) 交集</span></div><div class="line">intersect(a,b)</div><div class="line">[<span class="number">1</span>] <span class="number">4</span> <span class="number">6</span></div><div class="line"><span class="comment"># (2) 并集</span></div><div class="line">union(a,b)</div><div class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">3</span> <span class="number">2</span> <span class="number">8</span> <span class="number">7</span></div><div class="line"><span class="comment"># (3) 补集</span></div><div class="line">setdiff(a,b)</div><div class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">5</span> <span class="number">3</span></div></pre></td></tr></table></figure>
<h2 id="4-矩阵"><a href="#4-矩阵" class="headerlink" title="4. 矩阵"></a>4. 矩阵</h2><h3 id="4-1-创建矩阵"><a href="#4-1-创建矩阵" class="headerlink" title="4.1 创建矩阵"></a>4.1 创建矩阵</h3><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">data &lt;- c(<span class="number">1</span>:<span class="number">10</span>)</div><div class="line">data</div><div class="line"> [<span class="number">1</span>]  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span></div><div class="line">a &lt;- matrix(data, ncol = <span class="number">2</span>, nrow = <span class="number">5</span>)</div><div class="line">a</div><div class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>]</div><div class="line">[<span class="number">1</span>,]    <span class="number">1</span>    <span class="number">6</span></div><div class="line">[<span class="number">2</span>,]    <span class="number">2</span>    <span class="number">7</span></div><div class="line">[<span class="number">3</span>,]    <span class="number">3</span>    <span class="number">8</span></div><div class="line">[<span class="number">4</span>,]    <span class="number">4</span>    <span class="number">9</span></div><div class="line">[<span class="number">5</span>,]    <span class="number">5</span>   <span class="number">10</span></div><div class="line">dim(a) <span class="comment"># 矩阵 a 的维数向量</span></div><div class="line">[<span class="number">1</span>] <span class="number">5</span> <span class="number">2</span></div><div class="line"></div><div class="line">a &lt;- matrix(data, ncol = <span class="number">2</span>, nrow = <span class="number">5</span>, byrow = <span class="literal">T</span>)</div><div class="line">a</div><div class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>]</div><div class="line">[<span class="number">1</span>,]    <span class="number">1</span>    <span class="number">2</span></div><div class="line">[<span class="number">2</span>,]    <span class="number">3</span>    <span class="number">4</span></div><div class="line">[<span class="number">3</span>,]    <span class="number">5</span>    <span class="number">6</span></div><div class="line">[<span class="number">4</span>,]    <span class="number">7</span>    <span class="number">8</span></div><div class="line">[<span class="number">5</span>,]    <span class="number">9</span>   <span class="number">10</span></div><div class="line"><span class="comment">##</span></div><div class="line">data</div><div class="line"> [<span class="number">1</span>]  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span></div><div class="line">a &lt;- matrix(data)</div><div class="line">a</div><div class="line">      [,<span class="number">1</span>]</div><div class="line"> [<span class="number">1</span>,]    <span class="number">1</span></div><div class="line"> [<span class="number">2</span>,]    <span class="number">2</span></div><div class="line"> [<span class="number">3</span>,]    <span class="number">3</span></div><div class="line"> [<span class="number">4</span>,]    <span class="number">4</span></div><div class="line"> [<span class="number">5</span>,]    <span class="number">5</span></div><div class="line"> [<span class="number">6</span>,]    <span class="number">6</span></div><div class="line"> [<span class="number">7</span>,]    <span class="number">7</span></div><div class="line"> [<span class="number">8</span>,]    <span class="number">8</span></div><div class="line"> [<span class="number">9</span>,]    <span class="number">9</span></div><div class="line">[<span class="number">10</span>,]   <span class="number">10</span></div><div class="line">dim(a) &lt;- c(<span class="number">2</span>, <span class="number">5</span>)</div><div class="line">a</div><div class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>] [,<span class="number">4</span>] [,<span class="number">5</span>]</div><div class="line">[<span class="number">1</span>,]    <span class="number">1</span>    <span class="number">3</span>    <span class="number">5</span>    <span class="number">7</span>    <span class="number">9</span></div><div class="line">[<span class="number">2</span>,]    <span class="number">2</span>    <span class="number">4</span>    <span class="number">6</span>    <span class="number">8</span>   <span class="number">10</span></div><div class="line"><span class="comment">#</span></div><div class="line">dimnames(a)</div><div class="line"><span class="literal">NULL</span></div><div class="line">a &lt;- matrix(data, ncol = <span class="number">2</span>, nrow = <span class="number">5</span>, dimnames = list(c(<span class="string">"r1"</span>, <span class="string">"r2"</span>, <span class="string">"r3"</span>, <span class="string">"r4"</span>, <span class="string">"r5"</span>), c(<span class="string">"c1"</span>, <span class="string">"c2"</span>)))</div><div class="line"><span class="comment"># list 中，行名称在前</span></div><div class="line">a</div><div class="line">   c1 c2</div><div class="line">r1  <span class="number">1</span>  <span class="number">6</span></div><div class="line">r2  <span class="number">2</span>  <span class="number">7</span></div><div class="line">r3  <span class="number">3</span>  <span class="number">8</span></div><div class="line">r4  <span class="number">4</span>  <span class="number">9</span></div><div class="line">r5  <span class="number">5</span> <span class="number">10</span></div><div class="line"><span class="comment"># 矩阵转为向量</span></div><div class="line">as.vector(a)</div><div class="line"> [<span class="number">1</span>]  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span></div></pre></td></tr></table></figure>
<h3 id="4-2-矩阵索引"><a href="#4-2-矩阵索引" class="headerlink" title="4.2 矩阵索引"></a>4.2 矩阵索引</h3><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">a</div><div class="line">   c1 c2</div><div class="line">r1  <span class="number">1</span>  <span class="number">6</span></div><div class="line">r2  <span class="number">2</span>  <span class="number">7</span></div><div class="line">r3  <span class="number">3</span>  <span class="number">8</span></div><div class="line">r4  <span class="number">4</span>  <span class="number">9</span></div><div class="line">r5  <span class="number">5</span> <span class="number">10</span></div><div class="line"><span class="comment"># (1) 行列下标索引</span></div><div class="line">a[<span class="number">3</span>, <span class="number">2</span>] <span class="comment"># 第三行，第二列</span></div><div class="line">[<span class="number">1</span>] <span class="number">8</span></div><div class="line">a[<span class="number">3</span>,] <span class="comment"># 第三行， 所有的列</span></div><div class="line">c1 c2 </div><div class="line"> <span class="number">3</span>  <span class="number">8</span> </div><div class="line"><span class="comment"># (2) 行和列的名称索引</span></div><div class="line">a[<span class="string">"r3"</span>, <span class="string">"c2"</span>]</div><div class="line">[<span class="number">1</span>] <span class="number">8</span></div><div class="line"><span class="comment"># (3) 一维下标索引</span></div><div class="line">a[[<span class="number">8</span>]] <span class="comment"># as.vector(a) 中的第八个，即第三行第二列，</span></div><div class="line">[<span class="number">1</span>] <span class="number">8</span></div><div class="line">a[, <span class="number">2</span>] <span class="comment"># 所有行的第二列</span></div><div class="line">r1 r2 r3 r4 r5 </div><div class="line"> <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span></div><div class="line">a[,<span class="string">"c2"</span>]</div><div class="line">r1 r2 r3 r4 r5 </div><div class="line"> <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> </div><div class="line">a[<span class="string">"r3"</span>,]</div><div class="line">c1 c2 </div><div class="line"> <span class="number">3</span>  <span class="number">8</span></div></pre></td></tr></table></figure>
<h3 id="4-3-矩阵编辑"><a href="#4-3-矩阵编辑" class="headerlink" title="4.3 矩阵编辑"></a>4.3 矩阵编辑</h3><h4 id="4-3-1-合并"><a href="#4-3-1-合并" class="headerlink" title="4.3.1 合并"></a>4.3.1 合并</h4><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">dat1 &lt;- c(<span class="number">1</span>:<span class="number">6</span>)</div><div class="line">a1 &lt;- matrix(dat1, <span class="number">3</span>, <span class="number">2</span>)</div><div class="line">a1</div><div class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>]</div><div class="line">[<span class="number">1</span>,]    <span class="number">1</span>    <span class="number">4</span></div><div class="line">[<span class="number">2</span>,]    <span class="number">2</span>    <span class="number">5</span></div><div class="line">[<span class="number">3</span>,]    <span class="number">3</span>    <span class="number">6</span></div><div class="line">rbind(a1, c(<span class="number">7</span>,<span class="number">8</span>))</div><div class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>]</div><div class="line">[<span class="number">1</span>,]    <span class="number">1</span>    <span class="number">4</span></div><div class="line">[<span class="number">2</span>,]    <span class="number">2</span>    <span class="number">5</span></div><div class="line">[<span class="number">3</span>,]    <span class="number">3</span>    <span class="number">6</span></div><div class="line">[<span class="number">4</span>,]    <span class="number">7</span>    <span class="number">8</span></div><div class="line">a2 &lt;- matrix(c(<span class="number">7</span>:<span class="number">10</span>), <span class="number">2</span>, <span class="number">2</span>)</div><div class="line">a2</div><div class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>]</div><div class="line">[<span class="number">1</span>,]    <span class="number">7</span>    <span class="number">9</span></div><div class="line">[<span class="number">2</span>,]    <span class="number">8</span>   <span class="number">10</span></div><div class="line">a2 &lt;- matrix(c(<span class="number">7</span>:<span class="number">10</span>), <span class="number">2</span>, <span class="number">2</span>)</div><div class="line">rbind(a1, a2)</div><div class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>]</div><div class="line">[<span class="number">1</span>,]    <span class="number">1</span>    <span class="number">4</span></div><div class="line">[<span class="number">2</span>,]    <span class="number">2</span>    <span class="number">5</span></div><div class="line">[<span class="number">3</span>,]    <span class="number">3</span>    <span class="number">6</span></div><div class="line">[<span class="number">4</span>,]    <span class="number">7</span>    <span class="number">9</span></div><div class="line">[<span class="number">5</span>,]    <span class="number">8</span>   <span class="number">10</span></div></pre></td></tr></table></figure>
<h4 id="4-3-2-删除"><a href="#4-3-2-删除" class="headerlink" title="4.3.2 删除"></a>4.3.2 删除</h4><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">a &lt;- matrix(data, <span class="number">2</span>, <span class="number">5</span>)</div><div class="line">a</div><div class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>] [,<span class="number">4</span>] [,<span class="number">5</span>]</div><div class="line">[<span class="number">1</span>,]    <span class="number">1</span>    <span class="number">3</span>    <span class="number">5</span>    <span class="number">7</span>    <span class="number">9</span></div><div class="line">[<span class="number">2</span>,]    <span class="number">2</span>    <span class="number">4</span>    <span class="number">6</span>    <span class="number">8</span>   <span class="number">10</span></div><div class="line">a[, -<span class="number">1</span>]</div><div class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>] [,<span class="number">4</span>]</div><div class="line">[<span class="number">1</span>,]    <span class="number">3</span>    <span class="number">5</span>    <span class="number">7</span>    <span class="number">9</span></div><div class="line">[<span class="number">2</span>,]    <span class="number">4</span>    <span class="number">6</span>    <span class="number">8</span>   <span class="number">10</span></div><div class="line">a[-<span class="number">1</span>,]</div><div class="line">[<span class="number">1</span>]  <span class="number">2</span>  <span class="number">4</span>  <span class="number">6</span>  <span class="number">8</span> <span class="number">10</span></div><div class="line">a[, -c(<span class="number">2</span>,<span class="number">4</span>)] <span class="comment"># 删除第二列和第四列</span></div><div class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>]</div><div class="line">[<span class="number">1</span>,]    <span class="number">1</span>    <span class="number">5</span>    <span class="number">9</span></div><div class="line">[<span class="number">2</span>,]    <span class="number">2</span>    <span class="number">6</span>   <span class="number">10</span></div></pre></td></tr></table></figure>
<h3 id="4-4-矩阵运算"><a href="#4-4-矩阵运算" class="headerlink" title="4.4 矩阵运算"></a>4.4 矩阵运算</h3><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">A &lt;- matrix(c(<span class="number">1</span>:<span class="number">12</span>), <span class="number">4</span>, <span class="number">3</span>)</div><div class="line">A</div><div class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>]</div><div class="line">[<span class="number">1</span>,]    <span class="number">1</span>    <span class="number">5</span>    <span class="number">9</span></div><div class="line">[<span class="number">2</span>,]    <span class="number">2</span>    <span class="number">6</span>   <span class="number">10</span></div><div class="line">[<span class="number">3</span>,]    <span class="number">3</span>    <span class="number">7</span>   <span class="number">11</span></div><div class="line">[<span class="number">4</span>,]    <span class="number">4</span>    <span class="number">8</span>   <span class="number">12</span></div><div class="line">B &lt;- matrix(c(<span class="number">4</span>:<span class="number">15</span>), <span class="number">4</span>, <span class="number">3</span>, byrow = <span class="literal">T</span>)</div><div class="line">B</div><div class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>]</div><div class="line">[<span class="number">1</span>,]    <span class="number">4</span>    <span class="number">5</span>    <span class="number">6</span></div><div class="line">[<span class="number">2</span>,]    <span class="number">7</span>    <span class="number">8</span>    <span class="number">9</span></div><div class="line">[<span class="number">3</span>,]   <span class="number">10</span>   <span class="number">11</span>   <span class="number">12</span></div><div class="line">[<span class="number">4</span>,]   <span class="number">13</span>   <span class="number">14</span>   <span class="number">15</span></div><div class="line">C &lt;- matrix(c(<span class="number">12</span>:<span class="number">1</span>), <span class="number">3</span>, <span class="number">4</span>)</div><div class="line">C</div><div class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>] [,<span class="number">4</span>]</div><div class="line">[<span class="number">1</span>,]   <span class="number">12</span>    <span class="number">9</span>    <span class="number">6</span>    <span class="number">3</span></div><div class="line">[<span class="number">2</span>,]   <span class="number">11</span>    <span class="number">8</span>    <span class="number">5</span>    <span class="number">2</span></div><div class="line">[<span class="number">3</span>,]   <span class="number">10</span>    <span class="number">7</span>    <span class="number">4</span>    <span class="number">1</span></div><div class="line">set.seed(<span class="number">2017</span>-<span class="number">03</span>-<span class="number">25</span>)</div><div class="line">D &lt;- matrix(rnorm(<span class="number">16</span>), <span class="number">4</span>, <span class="number">4</span>) <span class="comment"># 服从正态分布</span></div><div class="line">D</div><div class="line">          [,<span class="number">1</span>]       [,<span class="number">2</span>]       [,<span class="number">3</span>]       [,<span class="number">4</span>]</div><div class="line">[<span class="number">1</span>,]  <span class="number">1.102578</span> -<span class="number">0.6131956</span>  <span class="number">0.1425635</span> -<span class="number">0.2969721</span></div><div class="line">[<span class="number">2</span>,]  <span class="number">1.117896</span> -<span class="number">0.3462673</span> -<span class="number">0.6942374</span>  <span class="number">1.9589066</span></div><div class="line">[<span class="number">3</span>,] -<span class="number">1.818102</span>  <span class="number">0.2779588</span>  <span class="number">1.3619621</span> -<span class="number">2.4309599</span></div><div class="line">[<span class="number">4</span>,] -<span class="number">0.194414</span>  <span class="number">0.5345426</span>  <span class="number">1.2761510</span>  <span class="number">0.4797144</span></div><div class="line"><span class="comment">########</span></div><div class="line"><span class="comment"># 1. 一般运算</span></div><div class="line"><span class="comment"># 1.1 矩阵加法</span></div><div class="line">A + B</div><div class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>]</div><div class="line">[<span class="number">1</span>,]    <span class="number">5</span>   <span class="number">10</span>   <span class="number">15</span></div><div class="line">[<span class="number">2</span>,]    <span class="number">9</span>   <span class="number">14</span>   <span class="number">19</span></div><div class="line">[<span class="number">3</span>,]   <span class="number">13</span>   <span class="number">18</span>   <span class="number">23</span></div><div class="line">[<span class="number">4</span>,]   <span class="number">17</span>   <span class="number">22</span>   <span class="number">27</span></div><div class="line">A + <span class="number">1</span></div><div class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>]</div><div class="line">[<span class="number">1</span>,]    <span class="number">2</span>    <span class="number">6</span>   <span class="number">10</span></div><div class="line">[<span class="number">2</span>,]    <span class="number">3</span>    <span class="number">7</span>   <span class="number">11</span></div><div class="line">[<span class="number">3</span>,]    <span class="number">4</span>    <span class="number">8</span>   <span class="number">12</span></div><div class="line">[<span class="number">4</span>,]    <span class="number">5</span>    <span class="number">9</span>   <span class="number">13</span></div><div class="line"><span class="comment"># 1.2 矩阵减法</span></div><div class="line">A - B</div><div class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>]</div><div class="line">[<span class="number">1</span>,]   -<span class="number">3</span>    <span class="number">0</span>    <span class="number">3</span></div><div class="line">[<span class="number">2</span>,]   -<span class="number">5</span>   -<span class="number">2</span>    <span class="number">1</span></div><div class="line">[<span class="number">3</span>,]   -<span class="number">7</span>   -<span class="number">4</span>   -<span class="number">1</span></div><div class="line">[<span class="number">4</span>,]   -<span class="number">9</span>   -<span class="number">6</span>   -<span class="number">3</span></div><div class="line"><span class="comment"># 1.3 矩阵各个对应的元素相乘</span></div><div class="line">A * B <span class="comment"># 对应的元素相乘。这跟线性代数的不同</span></div><div class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>]</div><div class="line">[<span class="number">1</span>,]    <span class="number">4</span>   <span class="number">25</span>   <span class="number">54</span></div><div class="line">[<span class="number">2</span>,]   <span class="number">14</span>   <span class="number">48</span>   <span class="number">90</span></div><div class="line">[<span class="number">3</span>,]   <span class="number">30</span>   <span class="number">77</span>  <span class="number">132</span></div><div class="line">[<span class="number">4</span>,]   <span class="number">52</span>  <span class="number">112</span>  <span class="number">180</span></div><div class="line"><span class="comment"># 1.3 矩阵乘法</span></div><div class="line">A %*% C <span class="comment"># 真正的矩阵相乘</span></div><div class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>] [,<span class="number">4</span>]</div><div class="line">[<span class="number">1</span>,]  <span class="number">157</span>  <span class="number">112</span>   <span class="number">67</span>   <span class="number">22</span></div><div class="line">[<span class="number">2</span>,]  <span class="number">190</span>  <span class="number">136</span>   <span class="number">82</span>   <span class="number">28</span></div><div class="line">[<span class="number">3</span>,]  <span class="number">223</span>  <span class="number">160</span>   <span class="number">97</span>   <span class="number">34</span></div><div class="line">[<span class="number">4</span>,]  <span class="number">256</span>  <span class="number">184</span>  <span class="number">112</span>   <span class="number">40</span></div><div class="line"></div><div class="line"><span class="comment"># 2. 转置</span></div><div class="line">A</div><div class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>]</div><div class="line">[<span class="number">1</span>,]    <span class="number">1</span>    <span class="number">5</span>    <span class="number">9</span></div><div class="line">[<span class="number">2</span>,]    <span class="number">2</span>    <span class="number">6</span>   <span class="number">10</span></div><div class="line">[<span class="number">3</span>,]    <span class="number">3</span>    <span class="number">7</span>   <span class="number">11</span></div><div class="line">[<span class="number">4</span>,]    <span class="number">4</span>    <span class="number">8</span>   <span class="number">12</span></div><div class="line">t(A)</div><div class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>] [,<span class="number">4</span>]</div><div class="line">[<span class="number">1</span>,]    <span class="number">1</span>    <span class="number">2</span>    <span class="number">3</span>    <span class="number">4</span></div><div class="line">[<span class="number">2</span>,]    <span class="number">5</span>    <span class="number">6</span>    <span class="number">7</span>    <span class="number">8</span></div><div class="line">[<span class="number">3</span>,]    <span class="number">9</span>   <span class="number">10</span>   <span class="number">11</span>   <span class="number">12</span></div><div class="line"><span class="comment"># 3. 矩阵求解</span></div><div class="line">solve(D, A) <span class="comment"># 对 DX = A 求解</span></div><div class="line">          [,<span class="number">1</span>]       [,<span class="number">2</span>]      [,<span class="number">3</span>]</div><div class="line">[<span class="number">1</span>,] -<span class="number">3.773014</span>  -<span class="number">9.498001</span> -<span class="number">15.22299</span></div><div class="line">[<span class="number">2</span>,] -<span class="number">8.886507</span> -<span class="number">26.314422</span> -<span class="number">43.74234</span></div><div class="line">[<span class="number">3</span>,]  <span class="number">5.011581</span>  <span class="number">12.710546</span>  <span class="number">20.40951</span></div><div class="line">[<span class="number">4</span>,]  <span class="number">3.379416</span>   <span class="number">8.336332</span>  <span class="number">13.29325</span></div><div class="line"><span class="comment"># 4. 矩阵的特征值和特征向量</span></div><div class="line">eigen(D)</div><div class="line">$values</div><div class="line">[<span class="number">1</span>]  <span class="number">0.816276</span>+<span class="number">1.747713i</span>  <span class="number">0.816276</span>-<span class="number">1.747713i</span>  <span class="number">1.337370</span>+<span class="number">0.000000i</span></div><div class="line">[<span class="number">4</span>] -<span class="number">0.371935</span>+<span class="number">0.000000i</span></div><div class="line"></div><div class="line">$vectors</div><div class="line">                      [,<span class="number">1</span>]                  [,<span class="number">2</span>]           [,<span class="number">3</span>]</div><div class="line">[<span class="number">1</span>,] -<span class="number">0.0732813</span>+<span class="number">0.2308877i</span> -<span class="number">0.0732813</span>-<span class="number">0.2308877i</span>  <span class="number">0.76894475</span>+<span class="number">0i</span></div><div class="line">[<span class="number">2</span>,]  <span class="number">0.4790390</span>+<span class="number">0.1347590i</span>  <span class="number">0.4790390</span>-<span class="number">0.1347590i</span> -<span class="number">0.06847426</span>+<span class="number">0i</span></div><div class="line">[<span class="number">3</span>,] -<span class="number">0.7411992</span>+<span class="number">0.0000000i</span> -<span class="number">0.7411992</span>+<span class="number">0.0000000i</span> -<span class="number">0.24761647</span>+<span class="number">0i</span></div><div class="line">[<span class="number">4</span>,] -<span class="number">0.0567989</span>+<span class="number">0.3756063i</span> -<span class="number">0.0567989</span>-<span class="number">0.3756063i</span> -<span class="number">0.58542406</span>+<span class="number">0i</span></div><div class="line">              [,<span class="number">4</span>]</div><div class="line">[<span class="number">1</span>,] -<span class="number">0.3347318</span>+<span class="number">0i</span></div><div class="line">[<span class="number">2</span>,] -<span class="number">0.8938356</span>+<span class="number">0i</span></div><div class="line">[<span class="number">3</span>,]  <span class="number">0.1521302</span>+<span class="number">0i</span></div><div class="line">[<span class="number">4</span>,]  <span class="number">0.2566497</span>+<span class="number">0i</span></div></pre></td></tr></table></figure>
<h2 id="5-数组"><a href="#5-数组" class="headerlink" title="5. 数组"></a>5. 数组</h2><p>矩阵是一个特殊的数组，维度是 2。数组的维度可以大于 2。此外，数组可以为空，而矩阵不可以。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><div class="line">x = matrix(<span class="literal">NA</span>, c(<span class="number">0</span>, <span class="number">3</span>))</div><div class="line">Error <span class="keyword">in</span> matrix(<span class="literal">NA</span>, c(<span class="number">0</span>, <span class="number">3</span>)) : data is too long</div><div class="line">x = array(<span class="literal">NA</span>, c(<span class="number">0</span>, <span class="number">3</span>))</div><div class="line">x</div><div class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>]</div></pre></td></tr></table></figure>
<h4 id=""><a href="#" class="headerlink" title=" "></a> </h4><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">array(c(<span class="number">1</span>:<span class="number">30</span>), dim=c(<span class="number">6</span>,<span class="number">5</span>))</div><div class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>] [,<span class="number">4</span>] [,<span class="number">5</span>]</div><div class="line">[<span class="number">1</span>,]    <span class="number">1</span>    <span class="number">7</span>   <span class="number">13</span>   <span class="number">19</span>   <span class="number">25</span></div><div class="line">[<span class="number">2</span>,]    <span class="number">2</span>    <span class="number">8</span>   <span class="number">14</span>   <span class="number">20</span>   <span class="number">26</span></div><div class="line">[<span class="number">3</span>,]    <span class="number">3</span>    <span class="number">9</span>   <span class="number">15</span>   <span class="number">21</span>   <span class="number">27</span></div><div class="line">[<span class="number">4</span>,]    <span class="number">4</span>   <span class="number">10</span>   <span class="number">16</span>   <span class="number">22</span>   <span class="number">28</span></div><div class="line">[<span class="number">5</span>,]    <span class="number">5</span>   <span class="number">11</span>   <span class="number">17</span>   <span class="number">23</span>   <span class="number">29</span></div><div class="line">[<span class="number">6</span>,]    <span class="number">6</span>   <span class="number">12</span>   <span class="number">18</span>   <span class="number">24</span>   <span class="number">30</span></div><div class="line">a &lt;- array(c(<span class="number">1</span>:<span class="number">30</span>), dim=c(<span class="number">2</span>,<span class="number">5</span>,<span class="number">3</span>))</div><div class="line">a</div><div class="line">, , <span class="number">1</span></div><div class="line"></div><div class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>] [,<span class="number">4</span>] [,<span class="number">5</span>]</div><div class="line">[<span class="number">1</span>,]    <span class="number">1</span>    <span class="number">3</span>    <span class="number">5</span>    <span class="number">7</span>    <span class="number">9</span></div><div class="line">[<span class="number">2</span>,]    <span class="number">2</span>    <span class="number">4</span>    <span class="number">6</span>    <span class="number">8</span>   <span class="number">10</span></div><div class="line"></div><div class="line">, , <span class="number">2</span></div><div class="line"></div><div class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>] [,<span class="number">4</span>] [,<span class="number">5</span>]</div><div class="line">[<span class="number">1</span>,]   <span class="number">11</span>   <span class="number">13</span>   <span class="number">15</span>   <span class="number">17</span>   <span class="number">19</span></div><div class="line">[<span class="number">2</span>,]   <span class="number">12</span>   <span class="number">14</span>   <span class="number">16</span>   <span class="number">18</span>   <span class="number">20</span></div><div class="line"></div><div class="line">, , <span class="number">3</span></div><div class="line"></div><div class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>] [,<span class="number">4</span>] [,<span class="number">5</span>]</div><div class="line">[<span class="number">1</span>,]   <span class="number">21</span>   <span class="number">23</span>   <span class="number">25</span>   <span class="number">27</span>   <span class="number">29</span></div><div class="line">[<span class="number">2</span>,]   <span class="number">22</span>   <span class="number">24</span>   <span class="number">26</span>   <span class="number">28</span>   <span class="number">30</span></div><div class="line"><span class="comment"># 数组索引</span></div><div class="line">a[<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>]</div><div class="line">[<span class="number">1</span>] <span class="number">3</span></div><div class="line">a[,<span class="number">3</span>,]</div><div class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>]</div><div class="line">[<span class="number">1</span>,]    <span class="number">5</span>   <span class="number">15</span>   <span class="number">25</span></div><div class="line">[<span class="number">2</span>,]    <span class="number">6</span>   <span class="number">16</span>   <span class="number">26</span></div></pre></td></tr></table></figure>
<h2 id="6-列表"><a href="#6-列表" class="headerlink" title="6. 列表"></a>6. 列表</h2><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">data &lt;- list(a=c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>),b=c(<span class="string">"one"</span>,<span class="string">"two"</span>),c=<span class="literal">T</span>,d=c(<span class="number">3i</span>+<span class="number">4</span>,<span class="number">9i</span>-<span class="number">9</span>))</div><div class="line">data</div><div class="line">$a</div><div class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">2</span> <span class="number">3</span></div><div class="line"></div><div class="line">$b</div><div class="line">[<span class="number">1</span>] <span class="string">"one"</span> <span class="string">"two"</span></div><div class="line"></div><div class="line">$c</div><div class="line">[<span class="number">1</span>] <span class="literal">TRUE</span></div><div class="line"></div><div class="line">$d</div><div class="line">[<span class="number">1</span>]  <span class="number">4</span>+<span class="number">3i</span> -<span class="number">9</span>+<span class="number">9i</span></div><div class="line"><span class="comment"># 索引</span></div><div class="line">data[[<span class="number">1</span>]]</div><div class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">2</span> <span class="number">3</span></div><div class="line">data$a</div><div class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">2</span> <span class="number">3</span></div><div class="line">data[<span class="string">"a"</span>]</div><div class="line">$a</div><div class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">2</span> <span class="number">3</span></div><div class="line"><span class="comment"># 合并</span></div><div class="line">data &lt;- c(data, list(e=c(<span class="literal">T</span>,<span class="literal">F</span>,<span class="literal">T</span>,<span class="literal">T</span>)))</div><div class="line">data</div><div class="line">$a</div><div class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">2</span> <span class="number">3</span></div><div class="line"></div><div class="line">$b</div><div class="line">[<span class="number">1</span>] <span class="string">"one"</span> <span class="string">"two"</span></div><div class="line"></div><div class="line">$c</div><div class="line">[<span class="number">1</span>] <span class="literal">TRUE</span></div><div class="line"></div><div class="line">$d</div><div class="line">[<span class="number">1</span>]  <span class="number">4</span>+<span class="number">3i</span> -<span class="number">9</span>+<span class="number">9i</span></div><div class="line"></div><div class="line">$e</div><div class="line">[<span class="number">1</span>]  <span class="literal">TRUE</span> <span class="literal">FALSE</span>  <span class="literal">TRUE</span>  <span class="literal">TRUE</span></div><div class="line"><span class="comment"># 列表转成向量</span></div><div class="line">unlist(list(c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>), c(<span class="string">"one"</span>,<span class="string">"two"</span>), c(<span class="number">3i</span>+<span class="number">4</span>,<span class="number">9i</span>-<span class="number">9</span>)))</div><div class="line">[<span class="number">1</span>] <span class="string">"1"</span>     <span class="string">"2"</span>     <span class="string">"3"</span>     <span class="string">"one"</span>   <span class="string">"two"</span>   <span class="string">"4+3i"</span>  <span class="string">"-9+9i"</span></div></pre></td></tr></table></figure>
<h2 id="7-数据框"><a href="#7-数据框" class="headerlink" title="7. 数据框"></a>7. 数据框</h2><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">n &lt;- c(<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>) </div><div class="line">s &lt;- c(<span class="string">"aa"</span>, <span class="string">"bb"</span>, <span class="string">"cc"</span>) </div><div class="line">b &lt;- c(<span class="literal">TRUE</span>, <span class="literal">FALSE</span>, <span class="literal">TRUE</span>) </div><div class="line">df &lt;- data.frame(n, s, b)</div><div class="line">df</div><div class="line">  n  s     b</div><div class="line"><span class="number">1</span> <span class="number">2</span> aa  <span class="literal">TRUE</span></div><div class="line"><span class="number">2</span> <span class="number">3</span> bb <span class="literal">FALSE</span></div><div class="line"><span class="number">3</span> <span class="number">5</span> cc  <span class="literal">TRUE</span></div><div class="line"><span class="comment"># 矩阵转数据框</span></div><div class="line">data.frame(matrix(<span class="number">1</span>:<span class="number">12</span>, c(<span class="number">3</span>,<span class="number">4</span>)))</div><div class="line">  X1 X2 X3 X4</div><div class="line"><span class="number">1</span>  <span class="number">1</span>  <span class="number">4</span>  <span class="number">7</span> <span class="number">10</span></div><div class="line"><span class="number">2</span>  <span class="number">2</span>  <span class="number">5</span>  <span class="number">8</span> <span class="number">11</span></div><div class="line"><span class="number">3</span>  <span class="number">3</span>  <span class="number">6</span>  <span class="number">9</span> <span class="number">12</span></div><div class="line"><span class="comment"># 数据框名称及修改</span></div><div class="line">names(df)</div><div class="line">[<span class="number">1</span>] <span class="string">"n"</span> <span class="string">"s"</span> <span class="string">"b"</span></div><div class="line">names(df)[<span class="number">1</span>] &lt;- <span class="string">"m"</span></div><div class="line">names(df)</div><div class="line">[<span class="number">1</span>] <span class="string">"m"</span> <span class="string">"s"</span> <span class="string">"b"</span></div><div class="line"><span class="comment"># 索引</span></div><div class="line">df</div><div class="line">  m  s     b</div><div class="line"><span class="number">1</span> <span class="number">2</span> aa  <span class="literal">TRUE</span></div><div class="line"><span class="number">2</span> <span class="number">3</span> bb <span class="literal">FALSE</span></div><div class="line"><span class="number">3</span> <span class="number">5</span> cc  <span class="literal">TRUE</span></div><div class="line"><span class="comment">#</span></div><div class="line">df$m</div><div class="line">[<span class="number">1</span>] <span class="number">2</span> <span class="number">3</span> <span class="number">5</span></div><div class="line"><span class="comment">#</span></div><div class="line">df[[<span class="string">"m"</span>]]</div><div class="line">[<span class="number">1</span>] <span class="number">2</span> <span class="number">3</span> <span class="number">5</span></div><div class="line"><span class="comment">#</span></div><div class="line">df[[<span class="number">1</span>]]</div><div class="line">[<span class="number">1</span>] <span class="number">2</span> <span class="number">3</span> <span class="number">5</span></div><div class="line">df[,<span class="number">1</span>]</div><div class="line">[<span class="number">1</span>] <span class="number">2</span> <span class="number">3</span> <span class="number">5</span></div><div class="line"><span class="comment"># 索引列</span></div><div class="line">df[,<span class="number">1</span>:<span class="number">2</span>]</div><div class="line">  m  s</div><div class="line"><span class="number">1</span> <span class="number">2</span> aa</div><div class="line"><span class="number">2</span> <span class="number">3</span> bb</div><div class="line"><span class="number">3</span> <span class="number">5</span> cc</div><div class="line"><span class="comment"># 索引行</span></div><div class="line">df[<span class="number">1</span>:<span class="number">2</span>, ]</div><div class="line">  m  s     b</div><div class="line"><span class="number">1</span> <span class="number">2</span> aa  <span class="literal">TRUE</span></div><div class="line"><span class="number">2</span> <span class="number">3</span> bb <span class="literal">FALSE</span></div><div class="line"><span class="comment"># 返回向量</span></div><div class="line">as.matrix(df)[<span class="number">1</span>:<span class="number">2</span>,]</div><div class="line">     m   s    b      </div><div class="line">[<span class="number">1</span>,] <span class="string">"2"</span> <span class="string">"aa"</span> <span class="string">" TRUE"</span></div><div class="line">[<span class="number">2</span>,] <span class="string">"3"</span> <span class="string">"bb"</span> <span class="string">"FALSE"</span></div><div class="line"><span class="comment"># 索引元素</span></div><div class="line">df[<span class="number">1</span>,<span class="number">2</span>]</div><div class="line">[<span class="number">1</span>] aa</div><div class="line">Levels: aa bb cc</div><div class="line">df$s[<span class="number">1</span>]</div><div class="line">[<span class="number">1</span>] aa</div><div class="line">Levels: aa bb cc</div><div class="line">df[[<span class="number">2</span>]][<span class="number">1</span>]</div><div class="line">[<span class="number">1</span>] aa</div><div class="line">Levels: aa bb cc</div><div class="line">df[<span class="string">"s"</span>][<span class="number">1</span>,<span class="number">1</span>]</div><div class="line">[<span class="number">1</span>] aa</div><div class="line">Levels: aa bb cc</div><div class="line">df[[<span class="string">"s"</span>]][<span class="number">1</span>]</div><div class="line">[<span class="number">1</span>] aa</div><div class="line">Levels: aa bb cc</div><div class="line"></div><div class="line"><span class="comment"># subset 索引</span></div><div class="line">subset(df, n &gt;<span class="number">2</span> &amp; n &lt; <span class="number">5</span>)</div><div class="line">  n  s     b</div><div class="line"><span class="number">2</span> <span class="number">3</span> bb <span class="literal">FALSE</span></div><div class="line">subset(df, n &gt;<span class="number">2</span> &amp; n &lt; <span class="number">5</span>, s)</div><div class="line">   s</div><div class="line"><span class="number">2</span> bb</div><div class="line"><span class="comment"># 编辑行</span></div><div class="line">rbind(df, data.frame(n = <span class="number">7</span>, s = <span class="string">"dd"</span>, b=<span class="literal">T</span>))</div><div class="line">  n  s     b</div><div class="line"><span class="number">1</span> <span class="number">2</span> aa  <span class="literal">TRUE</span></div><div class="line"><span class="number">2</span> <span class="number">3</span> bb <span class="literal">FALSE</span></div><div class="line"><span class="number">3</span> <span class="number">5</span> cc  <span class="literal">TRUE</span></div><div class="line"><span class="number">4</span> <span class="number">7</span> dd  <span class="literal">TRUE</span></div><div class="line"><span class="comment"># 编辑列</span></div><div class="line">cbind(df, f=c(<span class="string">"ab"</span>,<span class="string">"ac"</span>,<span class="string">"ad"</span>))</div><div class="line">  n  s     b  f</div><div class="line"><span class="number">1</span> <span class="number">2</span> aa  <span class="literal">TRUE</span> ab</div><div class="line"><span class="number">2</span> <span class="number">3</span> bb <span class="literal">FALSE</span> ac</div><div class="line"><span class="number">3</span> <span class="number">5</span> cc  <span class="literal">TRUE</span> ad</div><div class="line"><span class="comment"># 删除</span></div><div class="line">&gt; df</div><div class="line">  n  s     b</div><div class="line"><span class="number">1</span> <span class="number">2</span> aa  <span class="literal">TRUE</span></div><div class="line"><span class="number">2</span> <span class="number">3</span> bb <span class="literal">FALSE</span></div><div class="line"><span class="number">3</span> <span class="number">5</span> cc  <span class="literal">TRUE</span></div><div class="line"><span class="comment"># 删除第一列</span></div><div class="line">df[,-<span class="number">1</span>]</div><div class="line">   s     b</div><div class="line"><span class="number">1</span> aa  <span class="literal">TRUE</span></div><div class="line"><span class="number">2</span> bb <span class="literal">FALSE</span></div><div class="line"><span class="number">3</span> cc  <span class="literal">TRUE</span></div><div class="line"><span class="comment"># 删除第一行</span></div><div class="line">df[-<span class="number">1</span>,]</div><div class="line">  n  s     b</div><div class="line"><span class="number">2</span> <span class="number">3</span> bb <span class="literal">FALSE</span></div><div class="line"><span class="number">3</span> <span class="number">5</span> cc  <span class="literal">TRUE</span></div></pre></td></tr></table></figure>
<h2 id="8-因子"><a href="#8-因子" class="headerlink" title="8. 因子"></a>8. 因子</h2><h3 id="8-1-无序因子和有序因子（分类型数据）"><a href="#8-1-无序因子和有序因子（分类型数据）" class="headerlink" title="8.1 无序因子和有序因子（分类型数据）"></a>8.1 无序因子和有序因子（分类型数据）</h3><figure class="highlight r"><table><tr><td class="code"><pre><div class="line"><span class="comment"># 无序因子</span></div><div class="line">a &lt;- as.factor(c(<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">2</span>))</div><div class="line">a</div><div class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">3</span> <span class="number">5</span> <span class="number">2</span> <span class="number">7</span> <span class="number">2</span></div><div class="line">Levels: <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">5</span> <span class="number">7</span></div><div class="line">a[<span class="number">1</span>] == a[<span class="number">2</span>]</div><div class="line">[<span class="number">1</span>] <span class="literal">FALSE</span></div><div class="line">a[<span class="number">1</span>] != a[<span class="number">2</span>]</div><div class="line">[<span class="number">1</span>] <span class="literal">TRUE</span></div><div class="line"><span class="comment"># 不能进行大于小于比较</span></div><div class="line">a[<span class="number">1</span>] &gt; a[<span class="number">2</span>]</div><div class="line">[<span class="number">1</span>] <span class="literal">NA</span></div><div class="line">Warning message:</div><div class="line">In Ops.factor(a[<span class="number">1</span>], a[<span class="number">2</span>]) : ‘&gt;’ not meaningful <span class="keyword">for</span> factors</div><div class="line"><span class="comment"># 有序因子</span></div><div class="line">b &lt;- as.ordered(c(<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">2</span>))</div><div class="line">b</div><div class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">3</span> <span class="number">5</span> <span class="number">2</span> <span class="number">7</span> <span class="number">2</span></div><div class="line">Levels: <span class="number">1</span> &lt; <span class="number">2</span> &lt; <span class="number">3</span> &lt; <span class="number">5</span> &lt; <span class="number">7</span></div><div class="line">b &lt;- as.ordered(c(<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">2</span>))</div><div class="line">b</div><div class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">3</span> <span class="number">5</span> <span class="number">2</span> <span class="number">7</span> <span class="number">2</span></div><div class="line">Levels: <span class="number">1</span> &lt; <span class="number">2</span> &lt; <span class="number">3</span> &lt; <span class="number">5</span> &lt; <span class="number">7</span></div><div class="line">b[<span class="number">1</span>] &gt; b[<span class="number">2</span>]</div><div class="line">[<span class="number">1</span>] <span class="literal">FALSE</span></div><div class="line">b[<span class="number">1</span>] == b[<span class="number">2</span>]</div><div class="line">[<span class="number">1</span>] <span class="literal">FALSE</span></div><div class="line">b[<span class="number">1</span>] != b[<span class="number">2</span>]</div><div class="line">[<span class="number">1</span>] <span class="literal">TRUE</span></div><div class="line"><span class="comment"># 无序因子判断</span></div><div class="line">is.factor(a)</div><div class="line">[<span class="number">1</span>] <span class="literal">TRUE</span></div><div class="line">is.factor(b) <span class="comment"># ?</span></div><div class="line">[<span class="number">1</span>] <span class="literal">TRUE</span></div><div class="line"><span class="comment"># 有序因子判断</span></div><div class="line">is.ordered(a)</div><div class="line">[<span class="number">1</span>] <span class="literal">FALSE</span></div><div class="line">is.ordered(b)</div><div class="line">[<span class="number">1</span>] <span class="literal">TRUE</span></div><div class="line"></div><div class="line"><span class="comment"># 因子水平</span></div><div class="line">levels(a)</div><div class="line">[<span class="number">1</span>] <span class="string">"1"</span> <span class="string">"2"</span> <span class="string">"3"</span> <span class="string">"5"</span> <span class="string">"7"</span></div><div class="line">levels(a)[<span class="number">2</span>]</div><div class="line">[<span class="number">1</span>] <span class="string">"2"</span></div><div class="line">levels(a)[<span class="number">2</span>] &lt;- <span class="string">"two"</span></div><div class="line">levels(a)</div><div class="line">[<span class="number">1</span>] <span class="string">"1"</span>   <span class="string">"two"</span> <span class="string">"3"</span>   <span class="string">"5"</span>   <span class="string">"7"</span>  </div><div class="line">a</div><div class="line">[<span class="number">1</span>] <span class="number">1</span>   <span class="number">3</span>   <span class="number">5</span>   two <span class="number">7</span>   two</div><div class="line">Levels: <span class="number">1</span> two <span class="number">3</span> <span class="number">5</span> <span class="number">7</span></div></pre></td></tr></table></figure>
<h3 id="8-2-数据离散化（区间）"><a href="#8-2-数据离散化（区间）" class="headerlink" title="8.2 数据离散化（区间）"></a>8.2 数据离散化（区间）</h3><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">d &lt;- c(<span class="number">1</span>:<span class="number">30</span>)</div><div class="line">d</div><div class="line"> [<span class="number">1</span>]  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span> <span class="number">17</span> <span class="number">18</span> <span class="number">19</span> <span class="number">20</span> <span class="number">21</span> <span class="number">22</span> <span class="number">23</span> <span class="number">24</span></div><div class="line">[<span class="number">25</span>] <span class="number">25</span> <span class="number">26</span> <span class="number">27</span> <span class="number">28</span> <span class="number">29</span> <span class="number">30</span></div><div class="line">d.cut &lt;- cut(d, breaks=c(<span class="number">0</span>,<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>))</div><div class="line">d.cut</div><div class="line"> [<span class="number">1</span>] (<span class="number">0</span>,<span class="number">10</span>]  (<span class="number">0</span>,<span class="number">10</span>]  (<span class="number">0</span>,<span class="number">10</span>]  (<span class="number">0</span>,<span class="number">10</span>]  (<span class="number">0</span>,<span class="number">10</span>]  (<span class="number">0</span>,<span class="number">10</span>]  (<span class="number">0</span>,<span class="number">10</span>]  (<span class="number">0</span>,<span class="number">10</span>]  (<span class="number">0</span>,<span class="number">10</span>] </div><div class="line">[<span class="number">10</span>] (<span class="number">0</span>,<span class="number">10</span>]  (<span class="number">10</span>,<span class="number">20</span>] (<span class="number">10</span>,<span class="number">20</span>] (<span class="number">10</span>,<span class="number">20</span>] (<span class="number">10</span>,<span class="number">20</span>] (<span class="number">10</span>,<span class="number">20</span>] (<span class="number">10</span>,<span class="number">20</span>] (<span class="number">10</span>,<span class="number">20</span>] (<span class="number">10</span>,<span class="number">20</span>]</div><div class="line">[<span class="number">19</span>] (<span class="number">10</span>,<span class="number">20</span>] (<span class="number">10</span>,<span class="number">20</span>] (<span class="number">20</span>,<span class="number">30</span>] (<span class="number">20</span>,<span class="number">30</span>] (<span class="number">20</span>,<span class="number">30</span>] (<span class="number">20</span>,<span class="number">30</span>] (<span class="number">20</span>,<span class="number">30</span>] (<span class="number">20</span>,<span class="number">30</span>] (<span class="number">20</span>,<span class="number">30</span>]</div><div class="line">[<span class="number">28</span>] (<span class="number">20</span>,<span class="number">30</span>] (<span class="number">20</span>,<span class="number">30</span>] (<span class="number">20</span>,<span class="number">30</span>]</div><div class="line">Levels: (<span class="number">0</span>,<span class="number">10</span>] (<span class="number">10</span>,<span class="number">20</span>] (<span class="number">20</span>,<span class="number">30</span>]</div><div class="line">d.cut[<span class="number">1</span>] &lt; d.cut[<span class="number">2</span>] <span class="comment"># 无法进行大于小于比较</span></div><div class="line">[<span class="number">1</span>] <span class="literal">NA</span></div><div class="line">Warning message:</div><div class="line">In Ops.factor(d.cut[<span class="number">1</span>], d.cut[<span class="number">2</span>]) : ‘&lt;’ not meaningful <span class="keyword">for</span> factors</div><div class="line">d.cut &lt;- cut(d, breaks=c(<span class="number">0</span>,<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>), ordered_result=<span class="literal">T</span>)</div><div class="line">d.cut</div><div class="line"> [<span class="number">1</span>] (<span class="number">0</span>,<span class="number">10</span>]  (<span class="number">0</span>,<span class="number">10</span>]  (<span class="number">0</span>,<span class="number">10</span>]  (<span class="number">0</span>,<span class="number">10</span>]  (<span class="number">0</span>,<span class="number">10</span>]  (<span class="number">0</span>,<span class="number">10</span>]  (<span class="number">0</span>,<span class="number">10</span>]  (<span class="number">0</span>,<span class="number">10</span>]  (<span class="number">0</span>,<span class="number">10</span>] </div><div class="line">[<span class="number">10</span>] (<span class="number">0</span>,<span class="number">10</span>]  (<span class="number">10</span>,<span class="number">20</span>] (<span class="number">10</span>,<span class="number">20</span>] (<span class="number">10</span>,<span class="number">20</span>] (<span class="number">10</span>,<span class="number">20</span>] (<span class="number">10</span>,<span class="number">20</span>] (<span class="number">10</span>,<span class="number">20</span>] (<span class="number">10</span>,<span class="number">20</span>] (<span class="number">10</span>,<span class="number">20</span>]</div><div class="line">[<span class="number">19</span>] (<span class="number">10</span>,<span class="number">20</span>] (<span class="number">10</span>,<span class="number">20</span>] (<span class="number">20</span>,<span class="number">30</span>] (<span class="number">20</span>,<span class="number">30</span>] (<span class="number">20</span>,<span class="number">30</span>] (<span class="number">20</span>,<span class="number">30</span>] (<span class="number">20</span>,<span class="number">30</span>] (<span class="number">20</span>,<span class="number">30</span>] (<span class="number">20</span>,<span class="number">30</span>]</div><div class="line">[<span class="number">28</span>] (<span class="number">20</span>,<span class="number">30</span>] (<span class="number">20</span>,<span class="number">30</span>] (<span class="number">20</span>,<span class="number">30</span>]</div><div class="line">Levels: (<span class="number">0</span>,<span class="number">10</span>] &lt; (<span class="number">10</span>,<span class="number">20</span>] &lt; (<span class="number">20</span>,<span class="number">30</span>]</div><div class="line">d.cut[<span class="number">1</span>] &lt; d.cut[<span class="number">19</span>]</div><div class="line">[<span class="number">1</span>] <span class="literal">TRUE</span></div><div class="line"><span class="comment"># labels</span></div><div class="line">d.cut &lt;- cut(d, breaks=c(<span class="number">0</span>,<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>), labels=c(<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>))</div><div class="line">d.cut</div><div class="line"> [<span class="number">1</span>] a a a a a a a a a a b b b b b b b b b b c c c c c c c c c c</div><div class="line">Levels: a b c</div></pre></td></tr></table></figure>
<h2 id="9-字符串操作"><a href="#9-字符串操作" class="headerlink" title="9. 字符串操作"></a>9. 字符串操作</h2><h3 id="9-1-字符串长度"><a href="#9-1-字符串长度" class="headerlink" title="9.1 字符串长度"></a>9.1 字符串长度</h3><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">data &lt;- <span class="string">"a bc d"</span></div><div class="line">length(data)</div><div class="line">[<span class="number">1</span>] <span class="number">1</span></div><div class="line">nchar(data)</div><div class="line">[<span class="number">1</span>] <span class="number">6</span></div><div class="line">data &lt;- <span class="string">"abcd"</span></div><div class="line">nchar(data)</div><div class="line">[<span class="number">1</span>] <span class="number">4</span></div></pre></td></tr></table></figure>
<h3 id="9-2-字符串合并与分割"><a href="#9-2-字符串合并与分割" class="headerlink" title="9.2 字符串合并与分割"></a>9.2 字符串合并与分割</h3><figure class="highlight r"><table><tr><td class="code"><pre><div class="line"><span class="comment"># 合并</span></div><div class="line">paste(<span class="string">"a-"</span>,<span class="string">"b:"</span>,<span class="string">"c;"</span>,<span class="string">"d,"</span>, sep = <span class="string">""</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"a-b:c;d,"</span></div><div class="line">paste(<span class="string">"a-"</span>,<span class="string">"b:"</span>,<span class="string">"c;"</span>,<span class="string">"d,"</span>,data, sep = <span class="string">""</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"a-b:c;d,abcd"</span></div><div class="line"><span class="comment"># 分割</span></div><div class="line">data &lt;- <span class="string">"time: 12h50min24s"</span></div><div class="line">data</div><div class="line">[<span class="number">1</span>] <span class="string">"time: 12h50min24s"</span></div><div class="line">strsplit(data, split=<span class="string">": "</span>) <span class="comment"># 返回列表</span></div><div class="line">[[<span class="number">1</span>]]</div><div class="line">[<span class="number">1</span>] <span class="string">"time"</span>        <span class="string">"12h50min24s"</span></div><div class="line"></div><div class="line">unlist(strsplit(data, split=<span class="string">": "</span>)) <span class="comment"># 转成向量</span></div><div class="line">[<span class="number">1</span>] <span class="string">"time"</span>        <span class="string">"12h50min24s"</span></div><div class="line">data &lt;- unlist(strsplit(unlist(strsplit(data, split=<span class="string">": "</span>))[<span class="number">2</span>], split=<span class="string">"h"</span>))</div><div class="line">data</div><div class="line">[<span class="number">1</span>] <span class="string">"12"</span>       <span class="string">"50min24s"</span></div><div class="line"><span class="comment"># 支持正则表达式？</span></div><div class="line">dsplit &lt;- unlist(strsplit(unlist(strsplit(data, split=<span class="string">": "</span>))[<span class="number">2</span>], split=<span class="string">"h|min|s"</span>))</div><div class="line">dsplit</div><div class="line">[<span class="number">1</span>] <span class="string">"12"</span> <span class="string">"50"</span> <span class="string">"24"</span></div><div class="line">as.numeric(dsplit)[<span class="number">1</span>]*<span class="number">3600</span> + as.numeric(dsplit)[<span class="number">2</span>]*<span class="number">60</span> + as.numeric(dsplit)[<span class="number">3</span>]</div><div class="line">[<span class="number">1</span>] <span class="number">46224</span></div></pre></td></tr></table></figure>
<h3 id="9-3-字符串内部字符的读取和替换"><a href="#9-3-字符串内部字符的读取和替换" class="headerlink" title="9.3 字符串内部字符的读取和替换"></a>9.3 字符串内部字符的读取和替换</h3><figure class="highlight r"><table><tr><td class="code"><pre><div class="line"><span class="comment"># substr 读取</span></div><div class="line">a &lt;- <span class="string">"Beijing Forestry University"</span></div><div class="line">substr(a,<span class="number">1</span>,<span class="number">7</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"Beijing"</span></div><div class="line">substr(a,<span class="number">9</span>,<span class="number">16</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"Forestry"</span></div><div class="line">substr(a,<span class="number">18</span>,<span class="number">28</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"University"</span></div><div class="line"><span class="comment"># substr 替换</span></div><div class="line">a &lt;- <span class="string">"abcdefg"</span></div><div class="line">substr(a, <span class="number">2</span>, <span class="number">4</span>) &lt;- <span class="string">"kkk"</span></div><div class="line">a</div><div class="line">[<span class="number">1</span>] <span class="string">"akkkefg"</span></div><div class="line"><span class="comment"># grep 判断 pattern 是否在字符串中</span></div><div class="line">a &lt;- <span class="string">"abckdefk"</span></div><div class="line">a</div><div class="line">[<span class="number">1</span>] <span class="string">"abckdefk"</span></div><div class="line">grep(<span class="string">"k"</span>, a)</div><div class="line">[<span class="number">1</span>] <span class="number">1</span></div><div class="line">a &lt;- list(<span class="string">"abck"</span>, <span class="string">"defk"</span>)</div><div class="line">a</div><div class="line">[[<span class="number">1</span>]]</div><div class="line">[<span class="number">1</span>] <span class="string">"abck"</span></div><div class="line"></div><div class="line">[[<span class="number">2</span>]]</div><div class="line">[<span class="number">1</span>] <span class="string">"defk"</span></div><div class="line"></div><div class="line">grep(<span class="string">"k"</span>, a)</div><div class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">2</span></div><div class="line"><span class="comment"># regexpr 返回位置等信息</span></div><div class="line">&gt; a &lt;- <span class="string">"abckdefk"</span></div><div class="line">&gt; regexpr(<span class="string">"k"</span>, a)</div><div class="line">[<span class="number">1</span>] <span class="number">4</span></div><div class="line">attr(,<span class="string">"match.length"</span>)</div><div class="line">[<span class="number">1</span>] <span class="number">1</span></div><div class="line">attr(,<span class="string">"useBytes"</span>)</div><div class="line">[<span class="number">1</span>] <span class="literal">TRUE</span></div><div class="line"><span class="comment">#</span></div><div class="line">regexpr(<span class="string">"j"</span>, a)</div><div class="line">[<span class="number">1</span>] -<span class="number">1</span></div><div class="line">attr(,<span class="string">"match.length"</span>)</div><div class="line">[<span class="number">1</span>] -<span class="number">1</span></div><div class="line">attr(,<span class="string">"useBytes"</span>)</div><div class="line">[<span class="number">1</span>] <span class="literal">TRUE</span></div><div class="line"><span class="comment">#</span></div><div class="line">a &lt;- list(<span class="string">"abck"</span>, <span class="string">"defk"</span>)</div><div class="line">regexpr(<span class="string">"k"</span>, a)</div><div class="line">[<span class="number">1</span>] <span class="number">4</span> <span class="number">4</span></div><div class="line">attr(,<span class="string">"match.length"</span>)</div><div class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">1</span></div><div class="line">attr(,<span class="string">"useBytes"</span>)</div><div class="line">[<span class="number">1</span>] <span class="literal">TRUE</span></div><div class="line"><span class="comment"># chartr</span></div><div class="line">a</div><div class="line">[<span class="number">1</span>] <span class="string">"abckdefk"</span></div><div class="line">chartr(<span class="string">"k"</span>,<span class="string">"J"</span>, a)</div><div class="line">[<span class="number">1</span>] <span class="string">"abcJdefJ"</span></div><div class="line"><span class="comment"># sub，截取替换</span></div><div class="line">sub(<span class="string">"abc"</span>,<span class="string">"J"</span>, a)</div><div class="line">[<span class="number">1</span>] <span class="string">"Jkdefk"</span></div></pre></td></tr></table></figure>
<h2 id="10-常用数据的创建"><a href="#10-常用数据的创建" class="headerlink" title="10. 常用数据的创建"></a>10. 常用数据的创建</h2><h3 id="10-1-因子序列的创建"><a href="#10-1-因子序列的创建" class="headerlink" title="10.1 因子序列的创建"></a>10.1 因子序列的创建</h3><blockquote>
<p>gl(n, k, length = n*k, labels = seq_len(n), ordered = FALSE)</p>
<p>n：因子水平的数目；k：重复次数；向量长度，默认为 n*k；因子水平的标签，默认 seq_len(n)。</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="code"><pre><div class="line">gl(<span class="number">3</span>,<span class="number">4</span>)</div><div class="line"> [<span class="number">1</span>] <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">2</span> <span class="number">2</span> <span class="number">2</span> <span class="number">2</span> <span class="number">3</span> <span class="number">3</span> <span class="number">3</span> <span class="number">3</span></div><div class="line">Levels: <span class="number">1</span> <span class="number">2</span> <span class="number">3</span></div><div class="line">gl(<span class="number">3</span>,<span class="number">4</span>, labels = c(<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>))</div><div class="line"> [<span class="number">1</span>] A A A A B B B B C C C C</div><div class="line">Levels: A B C</div></pre></td></tr></table></figure>
<h3 id="10-2-等差数列的创建"><a href="#10-2-等差数列的创建" class="headerlink" title="10.2 等差数列的创建"></a>10.2 等差数列的创建</h3><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">seq(<span class="number">10</span>)</div><div class="line"> [<span class="number">1</span>]  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span></div><div class="line">seq(<span class="number">1</span>,<span class="number">10</span>)</div><div class="line"> [<span class="number">1</span>]  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span></div><div class="line">seq(<span class="number">10</span>, by=<span class="number">2</span>)</div><div class="line">Error <span class="keyword">in</span> seq.default(<span class="number">10</span>, by = <span class="number">2</span>) : <span class="string">'by'</span>参数的正負號不对</div><div class="line">seq(<span class="number">1</span>, <span class="number">10</span>, by=<span class="number">2</span>)</div><div class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">3</span> <span class="number">5</span> <span class="number">7</span> <span class="number">9</span></div><div class="line">seq(<span class="number">1</span>, <span class="number">10</span>, length.out=<span class="number">5</span>)</div><div class="line">[<span class="number">1</span>]  <span class="number">1.00</span>  <span class="number">3.25</span>  <span class="number">5.50</span>  <span class="number">7.75</span> <span class="number">10.00</span></div></pre></td></tr></table></figure>
<h3 id="10-3-随机抽样-sample"><a href="#10-3-随机抽样-sample" class="headerlink" title="10.3 随机抽样 sample"></a>10.3 随机抽样 sample</h3><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">sample(c(<span class="number">1</span>:<span class="number">30</span>), <span class="number">10</span>) <span class="comment"># </span></div><div class="line"> [<span class="number">1</span>] <span class="number">13</span> <span class="number">15</span> <span class="number">28</span>  <span class="number">3</span> <span class="number">24</span> <span class="number">22</span>  <span class="number">6</span>  <span class="number">7</span> <span class="number">29</span> <span class="number">23</span></div><div class="line">sample(c(<span class="number">1</span>:<span class="number">30</span>), <span class="number">31</span>)</div><div class="line">Error <span class="keyword">in</span> sample.int(length(x), size, replace, prob) : </div><div class="line">  <span class="string">'replace = FALSE'</span>，因此不能取比总体要大的样本</div><div class="line"> </div><div class="line">sample(c(<span class="number">1</span>:<span class="number">30</span>), <span class="number">31</span>, replace=<span class="literal">T</span>)</div><div class="line"> [<span class="number">1</span>] <span class="number">27</span>  <span class="number">4</span> <span class="number">21</span>  <span class="number">8</span>  <span class="number">6</span> <span class="number">24</span> <span class="number">30</span> <span class="number">12</span> <span class="number">28</span>  <span class="number">9</span>  <span class="number">1</span>  <span class="number">9</span> <span class="number">29</span> <span class="number">29</span> <span class="number">24</span> <span class="number">22</span> <span class="number">29</span>  <span class="number">9</span> <span class="number">12</span> <span class="number">28</span>  <span class="number">5</span>  <span class="number">4</span> <span class="number">29</span> <span class="number">19</span></div><div class="line">[<span class="number">25</span>] <span class="number">22</span> <span class="number">29</span> <span class="number">18</span> <span class="number">18</span> <span class="number">18</span>  <span class="number">6</span>  <span class="number">9</span></div></pre></td></tr></table></figure>
<h3 id="10-4-重复序列-rep"><a href="#10-4-重复序列-rep" class="headerlink" title="10.4 重复序列 rep"></a>10.4 重复序列 rep</h3><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">rep(<span class="number">1</span>, <span class="number">9</span>)</div><div class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span></div><div class="line">rep(<span class="number">1</span>:<span class="number">3</span>, <span class="number">9</span>)</div><div class="line"> [<span class="number">1</span>] <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span></div><div class="line">rep(<span class="number">1</span>:<span class="number">3</span>, <span class="number">3</span>)</div><div class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span></div><div class="line">rep(c(<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>), <span class="number">3</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"a"</span> <span class="string">"b"</span> <span class="string">"c"</span> <span class="string">"a"</span> <span class="string">"b"</span> <span class="string">"c"</span> <span class="string">"a"</span> <span class="string">"b"</span> <span class="string">"c"</span></div><div class="line">rep(as.factor(c(<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>)), <span class="number">3</span>)</div><div class="line">[<span class="number">1</span>] a b c a b c a b c</div><div class="line">Levels: a b c</div></pre></td></tr></table></figure>
<h3 id="10-5-正态分布-norm"><a href="#10-5-正态分布-norm" class="headerlink" title="10.5 正态分布 norm"></a>10.5 正态分布 norm</h3><p><img src="/blog/R笔记/1.png" alt="1"></p>
<h2 id="11-控制流"><a href="#11-控制流" class="headerlink" title="11. 控制流"></a>11. 控制流</h2><h3 id="11-1-分支语句"><a href="#11-1-分支语句" class="headerlink" title="11.1 分支语句"></a>11.1 分支语句</h3><h4 id="if-语句"><a href="#if-语句" class="headerlink" title="if 语句"></a>if 语句</h4><ul>
<li>if 语句后可有 0 或 1 个 else 语句，它必须出现在 else if 语句之后；</li>
<li>一个 if 语句可有 0 到多个 else if 语句，它们一定在 else 语句之前；</li>
<li>一旦 if 匹配成功，将不再测试 else if 或是 else 语句；</li>
<li>一旦 else if 匹配成功，剩余的 else if 或是 else 将不会被测试（执行）。</li>
</ul>
<figure class="highlight r"><table><tr><td class="code"><pre><div class="line"><span class="comment"># (1)</span></div><div class="line">a &lt;- <span class="number">200</span></div><div class="line">b &lt;- <span class="literal">NULL</span></div><div class="line">c &lt;- <span class="literal">NULL</span></div><div class="line"><span class="keyword">if</span> (a &gt; <span class="number">100</span>) &#123;</div><div class="line">  b &lt;- <span class="number">10</span></div><div class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (a &gt; <span class="number">50</span>)&#123;</div><div class="line">  b &lt;- <span class="number">20</span></div><div class="line">  c &lt;- <span class="number">30</span></div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">  b &lt;- <span class="number">40</span></div><div class="line">  c &lt;- <span class="number">50</span></div><div class="line">&#125;</div><div class="line">print(b);print(c)</div><div class="line">[<span class="number">1</span>] <span class="number">10</span></div><div class="line"><span class="literal">NULL</span></div><div class="line"><span class="comment"># (2)</span></div><div class="line">a &lt;- <span class="number">70</span></div><div class="line">b &lt;- <span class="literal">NULL</span></div><div class="line">c &lt;- <span class="literal">NULL</span></div><div class="line"><span class="keyword">if</span> (a &gt; <span class="number">100</span>) &#123;</div><div class="line">  b &lt;- <span class="number">10</span></div><div class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (a &gt; <span class="number">50</span>)&#123;</div><div class="line">  b &lt;- <span class="number">20</span></div><div class="line">  c &lt;- <span class="number">30</span></div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">  b &lt;- <span class="number">40</span></div><div class="line">  c &lt;- <span class="number">50</span></div><div class="line">&#125;</div><div class="line">print(b);print(c)</div><div class="line">[<span class="number">1</span>] <span class="number">20</span></div><div class="line">[<span class="number">1</span>] <span class="number">30</span></div><div class="line"><span class="comment"># (3)</span></div><div class="line">a &lt;- <span class="number">20</span></div><div class="line">b &lt;- <span class="literal">NULL</span></div><div class="line">c &lt;- <span class="literal">NULL</span></div><div class="line"><span class="keyword">if</span> (a &gt; <span class="number">100</span>) &#123;</div><div class="line">  b &lt;- <span class="number">10</span></div><div class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (a &gt; <span class="number">50</span>)&#123;</div><div class="line">  b &lt;- <span class="number">20</span></div><div class="line">  c &lt;- <span class="number">30</span></div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">  b &lt;- <span class="number">40</span></div><div class="line">  c &lt;- <span class="number">50</span></div><div class="line">&#125;</div><div class="line">print(b);print(c)</div><div class="line">[<span class="number">1</span>] <span class="number">40</span></div><div class="line">[<span class="number">1</span>] <span class="number">50</span></div></pre></td></tr></table></figure>
<h4 id="switch-语句"><a href="#switch-语句" class="headerlink" title="switch 语句"></a>switch 语句</h4><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">n &lt;- <span class="number">5</span></div><div class="line"><span class="keyword">switch</span>(n, <span class="string">"我是 case1"</span>, <span class="string">"我是 case2"</span>, <span class="string">"我是 case3"</span>, <span class="string">"我是 case4"</span>, <span class="string">"我是 case5"</span>, <span class="string">"我是 case6"</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"我是 case5"</span></div><div class="line">n &lt;- <span class="number">7</span></div><div class="line"><span class="keyword">switch</span>(n, <span class="string">"我是 case1"</span>, <span class="string">"我是 case2"</span>, <span class="string">"我是 case3"</span>, <span class="string">"我是 case4"</span>, <span class="string">"我是 case5"</span>, <span class="string">"我是 case6"</span>)</div><div class="line"><span class="comment"># 不返回结果</span></div></pre></td></tr></table></figure>
<h3 id="11-2-循环语句"><a href="#11-2-循环语句" class="headerlink" title="11.2 循环语句"></a>11.2 循环语句</h3><h4 id="for-循环"><a href="#for-循环" class="headerlink" title="for 循环"></a>for 循环</h4><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">x &lt;- c(<span class="number">5</span>, <span class="number">12</span>, <span class="number">13</span>)</div><div class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> x)&#123;</div><div class="line">  print(i^<span class="number">2</span>)</div><div class="line">&#125;</div><div class="line"></div><div class="line">[<span class="number">1</span>] <span class="number">25</span></div><div class="line">[<span class="number">1</span>] <span class="number">144</span></div><div class="line">[<span class="number">1</span>] <span class="number">169</span></div></pre></td></tr></table></figure>
<h4 id="while-循环"><a href="#while-循环" class="headerlink" title="while 循环"></a>while 循环</h4><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">i &lt;- <span class="number">1</span></div><div class="line"><span class="keyword">while</span> (i &lt;= <span class="number">10</span>) &#123;</div><div class="line">  i &lt;- i + <span class="number">4</span></div><div class="line">  print(i)</div><div class="line">&#125;</div><div class="line">[<span class="number">1</span>] <span class="number">5</span></div><div class="line">[<span class="number">1</span>] <span class="number">9</span></div><div class="line">[<span class="number">1</span>] <span class="number">13</span></div></pre></td></tr></table></figure>
<h4 id="repeat-break-循环"><a href="#repeat-break-循环" class="headerlink" title="repeat-break 循环"></a>repeat-break 循环</h4><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">i &lt;- <span class="number">1</span></div><div class="line"><span class="keyword">repeat</span> &#123;</div><div class="line">  i &lt;- i + <span class="number">4</span></div><div class="line">  print(i)</div><div class="line">  <span class="keyword">if</span> (i &gt; <span class="number">10</span>) <span class="keyword">break</span> <span class="comment"># 当 i 大于 10 时，结束循环。</span></div><div class="line">&#125;</div><div class="line">[<span class="number">1</span>] <span class="number">5</span></div><div class="line">[<span class="number">1</span>] <span class="number">9</span></div><div class="line">[<span class="number">1</span>] <span class="number">13</span></div><div class="line"><span class="comment">#</span></div><div class="line">i &lt;- <span class="number">1</span></div><div class="line"><span class="keyword">repeat</span> &#123;</div><div class="line">  i &lt;- i + <span class="number">4</span></div><div class="line">  <span class="keyword">if</span> (i == <span class="number">5</span>) <span class="keyword">next</span> <span class="comment"># 当 i 等于 5 时，忽略该语句以下的部分，进入下一轮循环。</span></div><div class="line">  print(i)</div><div class="line">  <span class="keyword">if</span> (i &gt; <span class="number">10</span>) <span class="keyword">break</span></div><div class="line">&#125;</div><div class="line">[<span class="number">1</span>] <span class="number">9</span></div><div class="line">[<span class="number">1</span>] <span class="number">13</span></div></pre></td></tr></table></figure>
<h2 id="12-运算符"><a href="#12-运算符" class="headerlink" title="12. 运算符"></a>12. 运算符</h2><h4 id="12-1-算术运算符"><a href="#12-1-算术运算符" class="headerlink" title="12.1 算术运算符"></a>12.1 算术运算符</h4><table>
<thead>
<tr>
<th>运算符</th>
<th>说明</th>
<th>运算符</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>+</td>
<td>加</td>
<td>^ 或 **</td>
<td>幂运算</td>
</tr>
<tr>
<td>-</td>
<td>减</td>
<td>x %% y</td>
<td>求除法运算后的余数</td>
</tr>
<tr>
<td>*</td>
<td>乘</td>
<td>x %/% y</td>
<td>求除法运算后的整数</td>
</tr>
<tr>
<td>/</td>
<td>除</td>
<td></td>
</tr>
</tbody>
</table>
<figure class="highlight r"><table><tr><td class="code"><pre><div class="line">a &lt;- <span class="number">0.314159</span></div><div class="line">(a * <span class="number">1000</span>) %/% <span class="number">1</span> <span class="comment"># %/% 的优先级较高</span></div><div class="line">[<span class="number">1</span>] <span class="number">314</span></div><div class="line">a &lt;- ((a * <span class="number">10000</span>) %/% <span class="number">1</span>) / <span class="number">100</span></div><div class="line">a</div><div class="line">[<span class="number">1</span>] <span class="number">31.41</span></div><div class="line">paste(a, <span class="string">"%"</span>, sep = <span class="string">""</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"31.41%"</span></div></pre></td></tr></table></figure>
<p><img src="/blog/R笔记/2.png" alt="2"></p>
<figure class="highlight r"><table><tr><td class="code"><pre><div class="line">a &lt;- c(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="literal">NA</span>, <span class="literal">NA</span>, <span class="number">4</span>, <span class="literal">NA</span>, <span class="number">5</span>)</div><div class="line">!is.na(a)</div><div class="line">[<span class="number">1</span>]  <span class="literal">TRUE</span>  <span class="literal">TRUE</span>  <span class="literal">TRUE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span>  <span class="literal">TRUE</span> <span class="literal">FALSE</span>  <span class="literal">TRUE</span></div><div class="line">a[!is.na(a)]</div><div class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></div></pre></td></tr></table></figure>
<h2 id="13-函数"><a href="#13-函数" class="headerlink" title="13. 函数"></a>13. 函数</h2><p>编写一个函数表达如下数学模型：</p>
<p><img src="/blog/R笔记/3.png" alt="3"></p>
<figure class="highlight r"><table><tr><td class="code"><pre><div class="line">demo.fun &lt;- <span class="keyword">function</span> (x1, x2=<span class="number">0</span>)&#123;</div><div class="line">  tmp &lt;- x1 + <span class="number">2</span>*x2</div><div class="line">  <span class="keyword">if</span> ( (x1 + x2) &gt;= <span class="number">100</span> )&#123;</div><div class="line">    <span class="number">300</span> * tmp - <span class="number">90</span></div><div class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> ( (x1 + x2) &gt; -<span class="number">90</span> ) &#123;</div><div class="line">    <span class="number">9</span> - tmp</div><div class="line">  &#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="literal">NA</span></div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"><span class="comment">#</span></div><div class="line">demo.fun(<span class="number">100</span>)</div><div class="line">[<span class="number">1</span>] <span class="number">29910</span></div><div class="line">demo.fun(<span class="number">10</span>)</div><div class="line">[<span class="number">1</span>] -<span class="number">1</span></div><div class="line">demo.fun(<span class="number">10</span>, <span class="number">20</span>)</div><div class="line">[<span class="number">1</span>] -<span class="number">41</span></div><div class="line">demo.fun(-<span class="number">100</span>)</div><div class="line">[<span class="number">1</span>] <span class="literal">NA</span></div><div class="line"></div><div class="line"><span class="comment">###</span></div><div class="line"><span class="comment"># 上述函数省略了 return() 函数</span></div><div class="line">demo.fun &lt;- <span class="keyword">function</span> (x1, x2=<span class="number">0</span>)&#123;</div><div class="line">  tmp &lt;- x1 + <span class="number">2</span>*x2</div><div class="line">  <span class="keyword">if</span> ( (x1 + x2) &gt;= <span class="number">100</span> )&#123;</div><div class="line">    <span class="keyword">return</span>(<span class="number">300</span> * tmp - <span class="number">90</span>)</div><div class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> ( (x1 + x2) &gt; -<span class="number">90</span> ) &#123;</div><div class="line">    <span class="keyword">return</span>(<span class="number">9</span> - tmp)</div><div class="line">  &#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="keyword">return</span>(<span class="literal">NA</span>)</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"><span class="comment">##</span></div><div class="line"><span class="comment"># 也可以这样写</span></div><div class="line"><span class="comment"># result 作为统一的返回值</span></div><div class="line">demo.fun &lt;- <span class="keyword">function</span> (x1, x2=<span class="number">0</span>)&#123;</div><div class="line">  tmp &lt;- x1 + <span class="number">2</span>*x2</div><div class="line">  <span class="keyword">if</span> ( (x1 + x2) &gt;= <span class="number">100</span> )&#123;</div><div class="line">    result &lt;- <span class="number">300</span> * tmp - <span class="number">90</span></div><div class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> ( (x1 + x2) &gt; -<span class="number">90</span> ) &#123;</div><div class="line">    result &lt;- <span class="number">9</span> - tmp</div><div class="line">  &#125; <span class="keyword">else</span> &#123;</div><div class="line">    result &lt;- <span class="literal">NA</span></div><div class="line">  &#125;</div><div class="line">  result</div><div class="line">&#125;</div><div class="line"><span class="comment"># 局部变量</span></div><div class="line">tmp &lt;- <span class="number">300</span></div><div class="line">demo.fun(<span class="number">100</span>)</div><div class="line">[<span class="number">1</span>] <span class="number">29910</span></div><div class="line">tmp</div><div class="line">[<span class="number">1</span>] <span class="number">300</span></div></pre></td></tr></table></figure>
<h2 id="14-读取数据"><a href="#14-读取数据" class="headerlink" title="14 读取数据"></a>14 读取数据</h2><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">read.table(file, header = <span class="literal">FALSE</span>, sep = <span class="string">""</span>, quote = <span class="string">"\"'"</span>,<span class="keyword">...</span>)</div><div class="line">read.csv(file,<span class="keyword">...</span>)</div><div class="line">scan(file,<span class="keyword">...</span>)</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;R-语言数据操作基础&quot;&gt;&lt;a href=&quot;#R-语言数据操作基础&quot; class=&quot;headerlink&quot; title=&quot;R 语言数据操作基础&quot;&gt;&lt;/a&gt;R 语言数据操作基础&lt;/h1&gt;&lt;h2 id=&quot;1-数据类型&quot;&gt;&lt;a href=&quot;#1-数据类型&quot; class=&quot;
    
    </summary>
    
      <category term="notes" scheme="https://hui-liu.github.io/categories/notes/"/>
    
    
      <category term="R" scheme="https://hui-liu.github.io/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>aspera使用</title>
    <link href="https://hui-liu.github.io/blog/aspera%E4%BD%BF%E7%94%A8/"/>
    <id>https://hui-liu.github.io/blog/aspera使用/</id>
    <published>2017-09-24T07:20:50.000Z</published>
    <updated>2017-09-24T07:42:54.270Z</updated>
    
    <content type="html"><![CDATA[<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>wget <a href="http://download.asperasoft.com/download/sw/connect/3.7.4/aspera-connect-3.7.4.147727-linux-64.tar.gz" target="_blank" rel="external">http://download.asperasoft.com/download/sw/connect/3.7.4/aspera-connect-3.7.4.147727-linux-64.tar.gz</a></p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight css"><table><tr><td class="code"><pre><div class="line"><span class="selector-tag">tar</span> <span class="selector-tag">-zxvf</span> <span class="selector-tag">aspera-connect-3</span><span class="selector-class">.7</span><span class="selector-class">.4</span><span class="selector-class">.147727-linux-64</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></div><div class="line"><span class="selector-tag">sh</span> <span class="selector-tag">aspera-connect-3</span><span class="selector-class">.7</span><span class="selector-class">.4</span><span class="selector-class">.147727-linux-64</span><span class="selector-class">.sh</span></div></pre></td></tr></table></figure>
<h3 id="环境变量："><a href="#环境变量：" class="headerlink" title="环境变量："></a>环境变量：</h3><p>其中，<strong>username</strong> 改为服务器上的你自己用户名</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><div class="line">export PATH=<span class="variable">$PATH</span><span class="symbol">:/home/username/</span>.aspera/connect/bin</div></pre></td></tr></table></figure>
<h3 id="单个sra下载示例"><a href="#单个sra下载示例" class="headerlink" title="单个sra下载示例"></a>单个sra下载示例</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><div class="line">ascp -QT -l <span class="number">100</span>M -<span class="selector-tag">i</span> /home/liuhui/.aspera/connect/etc/asperaweb_id_dsa<span class="selector-class">.openssh</span> \</div><div class="line">anonftp@ftp<span class="selector-class">.ncbi</span><span class="selector-class">.nlm</span><span class="selector-class">.nih</span><span class="selector-class">.gov</span>:/sra/sra-instant/reads/ByRun/sra/SRR/SRR292/SRR292241/SRR292241<span class="selector-class">.sra</span> .</div></pre></td></tr></table></figure>
<h3 id="批量下载示例"><a href="#批量下载示例" class="headerlink" title="批量下载示例"></a>批量下载示例</h3><figure class="highlight dns"><table><tr><td class="code"><pre><div class="line">$ head accession</div><div class="line">SRR<span class="number">3089510</span></div><div class="line">SRR<span class="number">3089511</span></div><div class="line">SRR<span class="number">3089512</span></div><div class="line">SRR<span class="number">3089513</span></div><div class="line">SRR<span class="number">2163235</span></div><div class="line">SRR<span class="number">2163234</span></div><div class="line">SRR<span class="number">2163233</span></div><div class="line">SRR<span class="number">2163232</span></div><div class="line">SRR<span class="number">1734725</span></div><div class="line">SRR<span class="number">1734724</span></div></pre></td></tr></table></figure>
<figure class="highlight awk"><table><tr><td class="code"><pre><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `cat accession`</div><div class="line"><span class="keyword">do</span></div><div class="line">x=$(echo <span class="variable">$i</span> | cut -b1-<span class="number">6</span>)</div><div class="line">y=$(echo <span class="variable">$i</span> | cut -b1-<span class="number">3</span>)</div><div class="line">ascp -QT -l <span class="number">100</span>M -i <span class="regexp">/home/</span>liuhui<span class="regexp">/bin/</span>aspera<span class="regexp">/connect/</span>etc<span class="regexp">/asperaweb_id_dsa.openssh anonftp@ftp.ncbi.nlm.nih.gov:/</span>sra<span class="regexp">/sra-instant/</span>reads<span class="regexp">/ByRun/</span>sra<span class="regexp">/$y/</span><span class="variable">$x</span><span class="regexp">/$i/</span><span class="variable">$i</span>.sra .</div><div class="line">done</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h3&gt;&lt;p&gt;wget &lt;a href=&quot;http://download.asperasoft.com/download/sw/connect/3.7.4
    
    </summary>
    
      <category term="生信" scheme="https://hui-liu.github.io/categories/%E7%94%9F%E4%BF%A1/"/>
    
    
      <category term="linux" scheme="https://hui-liu.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>绘制误差线</title>
    <link href="https://hui-liu.github.io/blog/%E7%BB%98%E5%88%B6%E8%AF%AF%E5%B7%AE%E7%BA%BF/"/>
    <id>https://hui-liu.github.io/blog/绘制误差线/</id>
    <published>2017-09-16T06:09:06.000Z</published>
    <updated>2017-09-16T06:26:58.860Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight haskell"><table><tr><td class="code"><pre><div class="line"><span class="meta"># 生成随机数</span></div><div class="line"><span class="title">set</span>.seed(<span class="number">20170916</span>)</div><div class="line"><span class="title">a</span> &lt;- runif(<span class="number">30</span>, <span class="number">0</span>, <span class="number">20</span>)</div><div class="line"><span class="title">b</span> &lt;- runif(<span class="number">30</span>, <span class="number">0</span>, <span class="number">20</span>)</div><div class="line"><span class="title">c</span> &lt;- runif(<span class="number">30</span>, <span class="number">0</span>, <span class="number">20</span>)</div><div class="line"> </div><div class="line"><span class="meta"># 生成数据框</span></div><div class="line"><span class="title">df</span> &lt;- <span class="class"><span class="keyword">data</span>.frame(<span class="title">a</span>=<span class="title">a</span>, <span class="title">b</span>=<span class="title">b</span>, <span class="title">c</span>=<span class="title">c</span>)</span></div><div class="line"> </div><div class="line"><span class="meta"># 标准误差公式</span></div><div class="line"><span class="title">se</span> &lt;- function(x)&#123;</div><div class="line">  sd(x)/sqrt(length(x))</div><div class="line">&#125;</div><div class="line"> </div><div class="line"><span class="meta"># 计算平均值</span></div><div class="line"><span class="title">my_mean</span> &lt;- apply(df, <span class="number">2</span>, mean)</div><div class="line"> </div><div class="line"><span class="meta"># 计算标准误差</span></div><div class="line"><span class="title">my_se</span> &lt;- apply(df, <span class="number">2</span>, se)</div><div class="line"> </div><div class="line"><span class="meta"># 绘制柱状图</span></div><div class="line"><span class="title">barx</span> &lt;- barplot(my_mean,</div><div class="line">                names.arg=names(df),</div><div class="line">                ylim=c(<span class="number">0</span>,ceiling(max(df))),</div><div class="line">                xlab='<span class="type">Class'</span>,</div><div class="line">                ylab=<span class="string">"Mean +/- SE"</span>)</div><div class="line">                </div><div class="line"><span class="meta"># 添加误差线</span></div><div class="line"><span class="title">arrows</span>(barx, my_mean+my_se, barx, my_mean-my_se, angle=<span class="number">90</span>, code=<span class="number">3</span>, length=<span class="number">0.1</span>)</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight haskell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# 生成随机数&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line
    
    </summary>
    
      <category term="统计" scheme="https://hui-liu.github.io/categories/%E7%BB%9F%E8%AE%A1/"/>
    
    
      <category term="R" scheme="https://hui-liu.github.io/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>fasta2phylip</title>
    <link href="https://hui-liu.github.io/blog/fasta2phylip/"/>
    <id>https://hui-liu.github.io/blog/fasta2phylip/</id>
    <published>2017-08-21T07:30:50.000Z</published>
    <updated>2017-08-21T08:19:02.387Z</updated>
    
    <content type="html"><![CDATA[<p>phylip 格式如下图所示，第一行的两个数字分别表示序列条数和序列长度（包括 gap，“-”）。</p>
<p><img src="/blog/fasta2phylip/1.png" alt="1"></p>
<p>不少进化分析相关的软件要求输入是 phylip 格式，这里提供一个脚本，可迅速便捷地将 fasta 格式的 MSA 转化为 phylip 格式。</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><div class="line">import sys</div><div class="line"></div><div class="line"># usage</div><div class="line">USAGE = <span class="string">"\nusage: python convert_fasta2phylip.py [input fasta file] [output phy file]\n"</span></div><div class="line"></div><div class="line">def parseFasta(filename):</div><div class="line">    fas = &#123;&#125;</div><div class="line">    id = None</div><div class="line">    with <span class="keyword">open</span>(filename, <span class="string">'r'</span>) <span class="keyword">as</span> fh:</div><div class="line">        <span class="keyword">for</span> <span class="built_in">line</span> in fh:</div><div class="line">            <span class="keyword">if</span> <span class="built_in">line</span>[<span class="number">0</span>] == <span class="string">'&gt;'</span>:</div><div class="line">                header = <span class="built_in">line</span>[<span class="number">1</span>:].rstrip()</div><div class="line">                id = header.<span class="keyword">split</span>()[<span class="number">0</span>]</div><div class="line">                fas[id] = []</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                fas[id].<span class="keyword">append</span>(<span class="built_in">line</span>.rstrip())</div><div class="line">        <span class="keyword">for</span> id, seq in fas.iteritems():</div><div class="line">            fas[id] = <span class="string">''</span>.<span class="keyword">join</span>(seq)</div><div class="line">    <span class="keyword">return</span> fas</div><div class="line"></div><div class="line"><span class="keyword">if</span> <span class="built_in">len</span>(sys.<span class="built_in">argv</span>) !=<span class="number">3</span>:</div><div class="line">    <span class="keyword">print</span> USAGE</div><div class="line">    sys.<span class="keyword">exit</span>()</div><div class="line"></div><div class="line">fas = parseFasta(sys.<span class="built_in">argv</span>[<span class="number">1</span>])</div><div class="line">outfile = sys.<span class="built_in">argv</span>[<span class="number">2</span>]</div><div class="line"></div><div class="line">sequence_list = [] # To keep order of sequence</div><div class="line"></div><div class="line">sequence_dict = &#123;&#125;</div><div class="line"><span class="keyword">for</span> <span class="keyword">rec</span> in fa<span class="variable">s:</span></div><div class="line">    sequence_list.<span class="keyword">append</span>(<span class="keyword">rec</span>)</div><div class="line">    sequence_dict[<span class="keyword">rec</span>] = fas[<span class="keyword">rec</span>]</div><div class="line"></div><div class="line"># Test length of the alignmen<span class="variable">t:</span></div><div class="line">alignment_length = <span class="number">0</span></div><div class="line"><span class="keyword">for</span> gene in sequence_dic<span class="variable">t:</span></div><div class="line">    <span class="keyword">if</span> (alignment_length != <span class="number">0</span>) <span class="built_in">and</span> (<span class="built_in">len</span>(sequence_dict[gene]) != alignment_length):</div><div class="line">        <span class="keyword">print</span> <span class="string">"Error in alignment length, exit on error !!!"</span></div><div class="line">        sys.<span class="keyword">exit</span>()</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        alignment_length = <span class="built_in">len</span>(sequence_dict[gene])</div><div class="line"></div><div class="line">number_of_seq = <span class="built_in">len</span>(sequence_dict)</div><div class="line">longest_id = sorted(sequence_dict.<span class="built_in">keys</span>(), key = lambda <span class="keyword">k</span>: <span class="built_in">len</span>(<span class="keyword">k</span>))[-<span class="number">1</span>]</div><div class="line"></div><div class="line"># Write alignment in Phylip format</div><div class="line">phyfile = <span class="keyword">open</span>(outfile, <span class="string">"w"</span>)</div><div class="line">phyfile.<span class="keyword">write</span>(str(number_of_seq)+<span class="string">" "</span>+str(alignment_length)+<span class="string">"\n"</span>)</div><div class="line"></div><div class="line"><span class="keyword">for</span> gene in sequence_lis<span class="variable">t:</span></div><div class="line">    phyfile.<span class="keyword">write</span>(gene.ljust(<span class="built_in">len</span>(longest_id), <span class="string">' '</span>) + <span class="string">"   "</span> + sequence_dict[gene] + <span class="string">"\n"</span>)</div><div class="line">phyfile.<span class="keyword">close</span>()</div></pre></td></tr></table></figure>
<p>运行方法：</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><div class="line"><span class="keyword">python</span> convert_fasta2phylip.<span class="keyword">py</span> [<span class="built_in">input</span> fasta <span class="keyword">file</span>] [output phy <span class="keyword">file</span>]</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;phylip 格式如下图所示，第一行的两个数字分别表示序列条数和序列长度（包括 gap，“-”）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/fasta2phylip/1.png&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;不少进化分析相关的软件要求输入是 phylip 格式，这
    
    </summary>
    
      <category term="生信" scheme="https://hui-liu.github.io/categories/%E7%94%9F%E4%BF%A1/"/>
    
    
      <category term="evolution" scheme="https://hui-liu.github.io/tags/evolution/"/>
    
  </entry>
  
  <entry>
    <title>适合度与选择系数</title>
    <link href="https://hui-liu.github.io/blog/%E9%80%82%E5%90%88%E5%BA%A6%E4%B8%8E%E9%80%89%E6%8B%A9%E7%B3%BB%E6%95%B0/"/>
    <id>https://hui-liu.github.io/blog/适合度与选择系数/</id>
    <published>2017-08-15T09:08:45.000Z</published>
    <updated>2017-08-21T07:43:30.259Z</updated>
    
    <content type="html"><![CDATA[<p>适合度（fitness，<em>f</em>）：某个基因型产生后代的<strong>相对生存和繁殖能力</strong>，即被自然所“选留”的程度，<em>f</em> = 1 ~ 0。</p>
<p>选择系数（selection coefficient，<em>s</em>）：与适合度相反，用来衡量自然选择对某种基因型的后代的淘汰的作用，<em>s</em> = 0 ~ 1。</p>
<p>适合度（<em>f</em>） = 1 - 选择系数（<em>s</em>）</p>
<p>例如：</p>
<p><strong>Nigeria 携带正常红细胞以及镰刀型红细胞基因的人数统计</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center">Genotype</th>
<th style="text-align:center">Observed Adult Frequency (O)</th>
<th style="text-align:center">Expected Hardy-Weinberg Frequency (E)</th>
<th style="text-align:center">Ratio O/E</th>
<th style="text-align:center">Fitness</th>
<th>selection coefficient</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">SS</td>
<td style="text-align:center">29</td>
<td style="text-align:center">187.4</td>
<td style="text-align:center">0.155</td>
<td style="text-align:center">0.155/1.12 = 0.14</td>
<td>0.86</td>
</tr>
<tr>
<td style="text-align:center">SA</td>
<td style="text-align:center">2993</td>
<td style="text-align:center">2672.4</td>
<td style="text-align:center">1.12</td>
<td style="text-align:center">1.22/1.12 = 1.00</td>
<td>0</td>
</tr>
<tr>
<td style="text-align:center">AA</td>
<td style="text-align:center">9365</td>
<td style="text-align:center">9527.2</td>
<td style="text-align:center">0.983</td>
<td style="text-align:center">0.983/1.12 = 0.88</td>
<td>0.12</td>
</tr>
<tr>
<td style="text-align:center">Total</td>
<td style="text-align:center">12,387</td>
<td style="text-align:center">12,378</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
</tbody>
</table>
<p>S 基因的频率 = (29 + 2993/2)/12387 = 0.123</p>
<p>A 基因的频率 = 1 - 0.123 = 0.877</p>
<p>SS = 0.123^2 * 12387 = 187.4</p>
<p>SA = 2 <em> 0.123 </em> 0.877 * 12387 = 2672.4</p>
<p>AA = 0.877^2 * 12387 = 9527.2</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;适合度（fitness，&lt;em&gt;f&lt;/em&gt;）：某个基因型产生后代的&lt;strong&gt;相对生存和繁殖能力&lt;/strong&gt;，即被自然所“选留”的程度，&lt;em&gt;f&lt;/em&gt; = 1 ~ 0。&lt;/p&gt;
&lt;p&gt;选择系数（selection coefficient，&lt;em&gt;s&lt;/em
    
    </summary>
    
      <category term="notes" scheme="https://hui-liu.github.io/categories/notes/"/>
    
    
      <category term="群体遗传学" scheme="https://hui-liu.github.io/tags/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>fasta文件分割</title>
    <link href="https://hui-liu.github.io/blog/fasta%E6%96%87%E4%BB%B6%E5%88%86%E5%89%B2/"/>
    <id>https://hui-liu.github.io/blog/fasta文件分割/</id>
    <published>2017-08-13T12:17:05.000Z</published>
    <updated>2017-08-13T14:29:53.483Z</updated>
    
    <content type="html"><![CDATA[<p>FASTA 格式是一种用于记录序列的文本格式，在生信分析中经常会用到。 fasta 文件中往往储存成千上万条序列，而在某些时候，需要对文件进行分割，如分割成每个序列一个文件，或分割成较小的 fasta文件。</p>
<p>假如有如下数据：</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><div class="line"><span class="variable">$ </span>ls -lh</div><div class="line">total <span class="number">4.0</span>K</div><div class="line">-rw-rw-r-- <span class="number">1</span> liuhui liuhui <span class="number">2.1</span>K Aug <span class="number">13</span> <span class="number">20</span><span class="symbol">:</span><span class="number">58</span> example.fasta</div><div class="line">liuhui<span class="variable">@ginkgo</span><span class="symbol">:~/temp/data</span><span class="variable">$ </span>grep <span class="string">"&gt;"</span> example.fasta</div><div class="line">&gt;AT1G5092<span class="number">0</span>.<span class="number">1</span></div><div class="line">&gt;AT1G3696<span class="number">0</span>.<span class="number">1</span></div><div class="line">&gt;AT1G4402<span class="number">0</span>.<span class="number">1</span></div><div class="line">&gt;AT1G1597<span class="number">0</span>.<span class="number">1</span></div><div class="line">&gt;AT1G7344<span class="number">0</span>.<span class="number">1</span></div><div class="line"></div><div class="line"><span class="variable">$ </span>head example.fasta</div><div class="line">&gt;AT1G5092<span class="number">0</span>.<span class="number">1</span></div><div class="line">MVQYNFKRITVVPNGKEFVDIILSRTQRQTPTVVHKGYKINRLRQFYMRKVKYTQTNFHAKLSAIIDEFPRLEQIHPFYG</div><div class="line">DLLHVLYNKDHYKLALGQVNTARNLISKISKDYVKLLKYGDSLYRCKCLKVAALGRMCTVLKRITPSLAYLEQIRQHMAR</div><div class="line">LPSIDPNTRTVLICGYPNVGKSSFMNKVTRADVDVQPYAFTTKSLFVGHTDYKYLRYQVIDTPGILDRPFEDRNIIEMCS</div><div class="line">ITALAHLRAAVLFFLDISGSCGYTIAQQAALFHSIKSLFMNKPLVIVCNKTDLMPMENISEEDRKLIEEMKSEAMKTAMG</div><div class="line">ASEEQVLLKMSTLTDEGVMSVKNAACERLLDQRVEAKMKSKKINDHLNRFHVAIPKPRDSIERLPCIPQVVLEAKAKEAA</div><div class="line">AMEKRKTEKDLEEENGGAGVYSASLKKNYILQHDEWKEDIMPEILDGHNVADFIDPDILQRLAELEREEGIREAGVEEAD</div><div class="line">MEMDIEKLSDEQLKQLSEIRKKKAILIKNHRLKKTVAQNRSTVPRKFDKDKKYTTKRMGRELSAMGLDPSSAMDRARSKS</div><div class="line">RGRKRDRSEDAGNDAMDVDDEQQSNKKQRVRSKSRAMSISRSQSRPPAHEVVPGEGFKDSTQKLSAIKISNKSHKKRDKN</div><div class="line">ARRGEADRVIPTLRPKHLFSGKRGKGKTDRR</div></pre></td></tr></table></figure>
<p>这里介绍三种方法对fasta文件进行分割。</p>
<h3 id="方法一：awk"><a href="#方法一：awk" class="headerlink" title="方法一：awk"></a>方法一：awk</h3><p>这个方法将文件分割为每条序列一个文件</p>
<figure class="highlight maxima"><table><tr><td class="code"><pre><div class="line">awk '/^&gt;/&#123;s=++<span class="built_in">num</span>&#125;&#123;<span class="built_in">print</span> &gt; <span class="string">"example_"</span>s<span class="string">".fa"</span>&#125;' <span class="built_in">example</span>.fasta</div></pre></td></tr></table></figure>
<p>结果如下：</p>
<figure class="highlight tap"><table><tr><td class="code"><pre><div class="line">$ ls -lh</div><div class="line">total 24K</div><div class="line">-rw-rw-r--<span class="number"> 1 </span>liuhui liuhui <span class="number"> 693 </span>Aug<span class="number"> 13 </span>21:09 example_1.fa</div><div class="line">-rw-rw-r--<span class="number"> 1 </span>liuhui liuhui <span class="number"> 197 </span>Aug<span class="number"> 13 </span>21:09 example_2.fa</div><div class="line">-rw-rw-r--<span class="number"> 1 </span>liuhui liuhui <span class="number"> 598 </span>Aug<span class="number"> 13 </span>21:09 example_3.fa</div><div class="line">-rw-rw-r--<span class="number"> 1 </span>liuhui liuhui <span class="number"> 370 </span>Aug<span class="number"> 13 </span>21:09 example_4.fa</div><div class="line">-rw-rw-r--<span class="number"> 1 </span>liuhui liuhui <span class="number"> 271 </span>Aug<span class="number"> 13 </span>21:09 example_5.fa</div><div class="line">-rw-rw-r--<span class="number"> 1 </span>liuhui liuhui 2.1K Aug<span class="number"> 13 </span>20:58 example.fasta</div></pre></td></tr></table></figure>
<p>解析：</p>
<p>awk 依次对文件的每一行进行处理，当遇到 <code>&gt;</code> 开头的行时，执行 <code>++num</code>（即 <code>num = num + 1</code>），并将结果赋值给 <code>s</code>，然后将结果重定向给 <code>example_s.fa</code>（其中，在第一条序列时，s 为 1）；当处理的行为序列时，语句 <code>/^&gt;/{s=++num}</code> 不执行，直接执行 <code>{print &gt; &quot;example_&quot;s&quot;.fa&quot;}</code>（和 <code>{print $0 &gt; &quot;example_&quot;s&quot;.fa&quot;}</code> 一样）。</p>
<p>基于以上原理，实现了 fasta 文件的分割。</p>
<h3 id="方法二：python-脚本"><a href="#方法二：python-脚本" class="headerlink" title="方法二：python 脚本"></a>方法二：python 脚本</h3><p>结果和<strong>方法一</strong>类似，只是这种方法以序列名作为文件名。</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><div class="line">import sys</div><div class="line"></div><div class="line">def parseFasta(filename):</div><div class="line">    fas = &#123;&#125;</div><div class="line">    id = None</div><div class="line">    with <span class="keyword">open</span>(filename, <span class="string">'r'</span>) <span class="keyword">as</span> fh:</div><div class="line">        <span class="keyword">for</span> <span class="built_in">line</span> in fh:</div><div class="line">            <span class="keyword">if</span> <span class="built_in">line</span>[<span class="number">0</span>] == <span class="string">'&gt;'</span>:</div><div class="line">                header = <span class="built_in">line</span>[<span class="number">1</span>:].rstrip()</div><div class="line">                id = header.<span class="keyword">split</span>()[<span class="number">0</span>]</div><div class="line">                fas[id] = []</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                fas[id].<span class="keyword">append</span>(<span class="built_in">line</span>.rstrip())</div><div class="line">        <span class="keyword">for</span> id, seq in fas.iteritems():</div><div class="line">            fas[id] = <span class="string">''</span>.<span class="keyword">join</span>(seq)</div><div class="line">    <span class="keyword">return</span> fas</div><div class="line"></div><div class="line">fas = parseFasta(sys.<span class="built_in">argv</span>[<span class="number">1</span>])</div><div class="line"></div><div class="line"><span class="keyword">for</span> i in fa<span class="variable">s:</span></div><div class="line">    with <span class="keyword">open</span>(i + <span class="string">".fa"</span>, <span class="string">'w'</span>) <span class="keyword">as</span> <span class="keyword">f</span>:</div><div class="line">        <span class="keyword">f</span>.<span class="keyword">write</span>(<span class="string">"&gt;"</span> + i + <span class="string">"\n"</span> + fas[i] + <span class="string">"\n"</span>)</div></pre></td></tr></table></figure>
<p>运行方法和结果：</p>
<figure class="highlight tap"><table><tr><td class="code"><pre><div class="line">$ python splitFasta.py example.fasta</div><div class="line"></div><div class="line">liuhui@ginkgo:~/temp/data$ ls -lh</div><div class="line">total 24K</div><div class="line">-rw-rw-r--<span class="number"> 1 </span>liuhui liuhui <span class="number"> 366 </span>Aug<span class="number"> 13 </span>21:27 AT1G15970.1.fa</div><div class="line">-rw-rw-r--<span class="number"> 1 </span>liuhui liuhui <span class="number"> 195 </span>Aug<span class="number"> 13 </span>21:27 AT1G36960.1.fa</div><div class="line">-rw-rw-r--<span class="number"> 1 </span>liuhui liuhui <span class="number"> 591 </span>Aug<span class="number"> 13 </span>21:27 AT1G44020.1.fa</div><div class="line">-rw-rw-r--<span class="number"> 1 </span>liuhui liuhui <span class="number"> 685 </span>Aug<span class="number"> 13 </span>21:27 AT1G50920.1.fa</div><div class="line">-rw-rw-r--<span class="number"> 1 </span>liuhui liuhui <span class="number"> 268 </span>Aug<span class="number"> 13 </span>21:27 AT1G73440.1.fa</div><div class="line">-rw-rw-r--<span class="number"> 1 </span>liuhui liuhui 2.1K Aug<span class="number"> 13 </span>20:58 example.fasta</div></pre></td></tr></table></figure>
<h3 id="方法三：Perl"><a href="#方法三：Perl" class="headerlink" title="方法三：Perl"></a>方法三：Perl</h3><p>程序下载地址：<a href="http://kirill-kryukov.com/study/tools/fasta-splitter/files/fasta-splitter-0.2.6.zip" target="_blank" rel="external">http://kirill-kryukov.com/study/tools/fasta-splitter/files/fasta-splitter-0.2.6.zip</a></p>
<p>解压即可使用：<code>unzip fasta-splitter-0.2.6.zip</code></p>
<p>该程序可以通过参数 <code>--n-parts num</code> 设定需要将文件设定为 <code>num</code>份，如下面的示例将文件分为两份（使得序列数目尽量相同）；当将<code>num</code> 设置成序列的总数时，其效果与<strong>方法一</strong>和<strong>方法二</strong>相同。 </p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><div class="line">$ perl fasta-splitter<span class="selector-class">.pl</span> --n-parts <span class="number">2</span> example<span class="selector-class">.fasta</span></div><div class="line">example<span class="selector-class">.fasta</span>: <span class="number">5</span> sequences, <span class="number">2035</span> bp =&gt; dividing into <span class="number">2</span> parts .. OK</div><div class="line">All done, <span class="number">0</span> seconds elapsed</div><div class="line">liuhui@ginkgo:~/temp/data$ ls -lh</div><div class="line">total <span class="number">12</span>K</div><div class="line">-rw-rw-r-- <span class="number">1</span> liuhui liuhui <span class="number">2.1</span>K Aug <span class="number">13</span> <span class="number">20</span>:<span class="number">58</span> example<span class="selector-class">.fasta</span></div><div class="line">-rw-rw-r-- <span class="number">1</span> liuhui liuhui  <span class="number">894</span> Aug <span class="number">13</span> <span class="number">21</span>:<span class="number">58</span> example<span class="selector-class">.part-1</span><span class="selector-class">.fasta</span></div><div class="line">-rw-rw-r-- <span class="number">1</span> liuhui liuhui <span class="number">1.3</span>K Aug <span class="number">13</span> <span class="number">21</span>:<span class="number">58</span> example<span class="selector-class">.part-2</span><span class="selector-class">.fasta</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;FASTA 格式是一种用于记录序列的文本格式，在生信分析中经常会用到。 fasta 文件中往往储存成千上万条序列，而在某些时候，需要对文件进行分割，如分割成每个序列一个文件，或分割成较小的 fasta文件。&lt;/p&gt;
&lt;p&gt;假如有如下数据：&lt;/p&gt;
&lt;figure class
    
    </summary>
    
      <category term="生信" scheme="https://hui-liu.github.io/categories/%E7%94%9F%E4%BF%A1/"/>
    
    
      <category term="生信" scheme="https://hui-liu.github.io/tags/%E7%94%9F%E4%BF%A1/"/>
    
  </entry>
  
  <entry>
    <title>TE对基因组的影响</title>
    <link href="https://hui-liu.github.io/blog/TE%E5%AF%B9%E5%9F%BA%E5%9B%A0%E7%BB%84%E7%9A%84%E5%BD%B1%E5%93%8D/"/>
    <id>https://hui-liu.github.io/blog/TE对基因组的影响/</id>
    <published>2017-08-12T12:44:51.000Z</published>
    <updated>2017-08-12T13:17:19.601Z</updated>
    
    <content type="html"><![CDATA[<p>TE 对基因组的影响有以下几个方面（Kazazian 2004）：</p>
<ul>
<li><p>插入编码区时，它们通常会引起移码突变或改变简介模式，从而改变（大多数情况下是破坏）蛋白质功能。</p>
</li>
<li><p>插入或靠近调控区时，它们可以改变基因表达（如转录时序或转录量），或充当增强子或其它调控因子的角色。</p>
</li>
<li><p>它们会增加宿主基因的突变率。</p>
</li>
<li><p>位于不同位点的同一 TE 的两个拷贝之间的重组能够导致宿主基因组内的重排。正如两个重复序列之间的不等交换可产生重复和缺失一样，位于非同源位置的同一 TE 的两个拷贝之间的重组也具有类似的效应。具有相同序列极性的两个 TE 拷贝的重组可导致它们之间的区段缺失，而极性相反的两个 TE 拷贝的重组则会导致它们之间的区段反转。（Lewin 1985）</p>
</li>
<li><p>编码反转录酶的 TE 有时不仅能将它们自己 RNA 的 DNA 拷贝（cDNA）插入到宿主基因组内，还能将其它基因的 RNA 转录物也插入到宿主基因组内，这些 RNA 的 cDNA 拷贝（反转录序列，retrosequence）类似于基因组内其它位置的祖先基因的外显子，只是它们没有调控区和内含子。大部分反转录序列是已加工假基因，并不产生有功能的基因产物。</p>
</li>
<li><p>通过转录和不等交换，TE 数量可增加或减少，从而改变基因组大小。约 10% 的人类基因组由超过 100 万个反转录因子 <em>Alu</em> 的拷贝组成，它们可能经过约 6,000 万年才逐渐形成（Petrov and Wendel 2006）。</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;TE 对基因组的影响有以下几个方面（Kazazian 2004）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;插入编码区时，它们通常会引起移码突变或改变简介模式，从而改变（大多数情况下是破坏）蛋白质功能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;插入或靠近调控区时，它们可以改变基因表达（如
    
    </summary>
    
      <category term="notes" scheme="https://hui-liu.github.io/categories/notes/"/>
    
    
      <category term="其它" scheme="https://hui-liu.github.io/tags/%E5%85%B6%E5%AE%83/"/>
    
  </entry>
  
  <entry>
    <title>植物的体细胞到生殖细胞</title>
    <link href="https://hui-liu.github.io/blog/%E6%A4%8D%E7%89%A9%E7%9A%84%E4%BD%93%E7%BB%86%E8%83%9E%E5%88%B0%E7%94%9F%E6%AE%96%E7%BB%86%E8%83%9E/"/>
    <id>https://hui-liu.github.io/blog/植物的体细胞到生殖细胞/</id>
    <published>2017-08-12T06:33:44.000Z</published>
    <updated>2017-08-12T06:45:45.264Z</updated>
    
    <content type="html"><![CDATA[<p>与人类和动物不同，植物的生殖细胞是在花的生殖器官（雌蕊和雄蕊）中从体细胞重新演变的。植物的早期胚胎发育，并没有为将来的配子（生殖细胞）产生预留专门的细胞系。</p>
<p>被选中的体细胞的细胞分裂模式从有丝分裂转变为减数分裂，以减少染色体的数量，方便基因重组。在恰当的部位，恰当的时间，将体细胞变为生殖细胞，这就是植物的进化策略。</p>
<p>Freiburg大学的植物生物学家Thomas Laux教授和其同事们在模式生物拟南芥中鉴定了多个控制细胞从有丝分裂（mitose）转换到减数分裂（meiose）的基因。</p>
<p>开花植物的种子通常只携带一个单胚（single embryo），周围其他细胞都属于营养组织，胚乳的功能类似于哺乳动物的胎盘。因此每个种子的发育单位只有一个。文章的出发点是想让每个胚珠（ovule）中多发育出几个生殖细胞。</p>
<p>其中一项比较关键发现是，科学家们找到了一个能限制WUSCHEL转录因子活性的通路。WUSCHEL转录因子是Laux实验室几年前鉴定出的，多能干细胞（pluripotent stem cells）的重要调节因子。</p>
<p>在制造生殖细胞的过程中，发现WUSCHEL的参与是“生殖胚珠和茎分生组织是由古老植物的同一前体器官进化而来”分子水平证据。这项调节机制新发现解释了植物如何控制生殖细胞生产程序，只允许每个胚珠只发育出一个生殖细胞，让周围的其他细胞承担其他任务。（是WUSCHEL开启了减数分裂的阀门，并且控制植物产生有限数量的生殖细胞）。</p>
<p>随后，科学家们还检测到了减数分裂启动的一系列级联调控分子，始于KIP相关蛋白（KIP-RELATED PROTEIN，KRP）类细胞周期蛋白依赖激酶（cyclin-dependent kinase，CDK）抑制剂。限制CDKA，依赖性失活拟南芥的同源RBR1，因此突变rbr1基因和三个krp基因都可以使原本减数分裂的细胞进行有丝分裂。不过，种子发育受阻，会导致不育突变株。RBR1的其中一个功能是直接抑制干细胞因子WUSCHEL，从而造成突变株WUSCHEL的异位积累。人为消耗WUSCHEL，可以恢复rbr1突变株单个性母细胞的形成。但是，异位表达WUSCHEL无法诱导减数分裂转为有丝分裂。这表示，RBR1是性母细胞分化的核心。</p>
<p>文献：RETINOBLASTOMA RELATED1 mediates germline entry in Arabidopsis</p>
<p>原文：<a href="http://www.ebiotrade.com/newsf/2017-6/201769110059740.htm" target="_blank" rel="external">植物的体细胞到生殖细胞</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;与人类和动物不同，植物的生殖细胞是在花的生殖器官（雌蕊和雄蕊）中从体细胞重新演变的。植物的早期胚胎发育，并没有为将来的配子（生殖细胞）产生预留专门的细胞系。&lt;/p&gt;
&lt;p&gt;被选中的体细胞的细胞分裂模式从有丝分裂转变为减数分裂，以减少染色体的数量，方便基因重组。在恰当的部位，
    
    </summary>
    
      <category term="notes" scheme="https://hui-liu.github.io/categories/notes/"/>
    
    
      <category term="其它" scheme="https://hui-liu.github.io/tags/%E5%85%B6%E5%AE%83/"/>
    
  </entry>
  
  <entry>
    <title>awk使用技巧</title>
    <link href="https://hui-liu.github.io/blog/awk%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <id>https://hui-liu.github.io/blog/awk使用技巧/</id>
    <published>2017-08-05T05:38:24.000Z</published>
    <updated>2017-08-06T02:33:01.540Z</updated>
    
    <content type="html"><![CDATA[<h3 id="按照指定的列去除重复"><a href="#按照指定的列去除重复" class="headerlink" title="按照指定的列去除重复"></a>按照指定的列去除重复</h3><figure class="highlight nginx"><table><tr><td class="code"><pre><div class="line"><span class="attribute">awk</span> <span class="string">'!a[<span class="variable">$1</span>]++'</span> file</div></pre></td></tr></table></figure>
<p>上述命令的意思是，如果第一列有重复，则保留最先出现的值；如果没有重复，则保留该值。（<code>$1</code>表示第一列，如果想对第二列进行处理，则<code>$2</code>，以此类推）如：</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><div class="line">$ cat example.txt</div><div class="line">MA_100472g0010  MA_100472       <span class="number">91.67</span>   <span class="number">492</span>     <span class="number">0</span>       <span class="number">1</span>       <span class="number">1</span>       <span class="number">451</span>     <span class="number">19718</span>   <span class="number">21193</span>   <span class="number">0.0</span>     <span class="number">813</span></div><div class="line">MA_100472g0010  MA_100472       <span class="number">82.84</span>   <span class="number">134</span>     <span class="number">14</span>      <span class="number">2</span>       <span class="number">446</span>     <span class="number">572</span>     <span class="number">22465</span>   <span class="number">22860</span>   <span class="number">6e-59</span>   <span class="number">226</span></div><div class="line">MA_8348g0030    MA_10059887     <span class="number">38.44</span>   <span class="number">666</span>     <span class="number">369</span>     <span class="number">16</span>      <span class="number">20</span>      <span class="number">655</span>     <span class="number">4782</span>    <span class="number">2818</span>    <span class="number">1e-101</span>  <span class="number">350</span></div><div class="line">MA_99999g0010   MA_10430467     <span class="number">51.37</span>   <span class="number">146</span>     <span class="number">69</span>      <span class="number">1</span>       <span class="number">1</span>       <span class="number">146</span>     <span class="number">20468</span>   <span class="number">20899</span>   <span class="number">3e-30</span>   <span class="number">125</span></div><div class="line">MA_99999g0010   MA_36290        <span class="number">47.06</span>   <span class="number">136</span>     <span class="number">72</span>      <span class="number">0</span>       <span class="number">1</span>       <span class="number">136</span>     <span class="number">8905</span>    <span class="number">8498</span>    <span class="number">3e-23</span>   <span class="number">10</span></div></pre></td></tr></table></figure>
<p>去除重复后：</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><div class="line">$ awk '!a[$<span class="number">1</span>]++' example.txt</div><div class="line">MA_100472g0010  MA_100472       <span class="number">91.67</span>   <span class="number">492</span>     <span class="number">0</span>       <span class="number">1</span>       <span class="number">1</span>       <span class="number">451</span>     <span class="number">19718</span>   <span class="number">21193</span>   <span class="number">0.0</span>     <span class="number">813</span></div><div class="line">MA_8348g0030    MA_10059887     <span class="number">38.44</span>   <span class="number">666</span>     <span class="number">369</span>     <span class="number">16</span>      <span class="number">20</span>      <span class="number">655</span>     <span class="number">4782</span>    <span class="number">2818</span>    <span class="number">1e-101</span>  <span class="number">350</span></div><div class="line">MA_99999g0010   MA_10430467     <span class="number">51.37</span>   <span class="number">146</span>     <span class="number">69</span>      <span class="number">1</span>       <span class="number">1</span>       <span class="number">146</span>     <span class="number">20468</span>   <span class="number">20899</span>   <span class="number">3e-30</span>   <span class="number">125</span></div></pre></td></tr></table></figure>
<p>如果事先通过排序，将想要的最优值排在前面，则去除重后，得到的即为最优值。</p>
<h3 id="拆分文件"><a href="#拆分文件" class="headerlink" title="拆分文件"></a>拆分文件</h3><p>如有以下文件：</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><div class="line">$ head TAIR10_GFF3.gff</div><div class="line"><span class="number">1</span>       TAIR10  gene    <span class="number">3631</span>    <span class="number">5899</span>    .       +       .       ID=AT1G01010;Note=protein_coding_gene;Name=AT1G01010</div><div class="line"><span class="number">1</span>       TAIR10  mRNA    <span class="number">3631</span>    <span class="number">5899</span>    .       +       .       ID=AT1G01010<span class="number">.1</span>;Parent=AT1G01010;Name=AT1G01010<span class="number">.1</span>;Index=<span class="number">1</span></div><div class="line"><span class="number">1</span>       TAIR10  exon    <span class="number">3631</span>    <span class="number">3913</span>    .       +       .       Parent=AT1G01010<span class="number">.1</span></div><div class="line"><span class="number">1</span>       TAIR10  five_prime_UTR  <span class="number">3631</span>    <span class="number">3759</span>    .       +       .       Parent=AT1G01010<span class="number">.1</span></div><div class="line"><span class="number">1</span>       TAIR10  CDS     <span class="number">3760</span>    <span class="number">3913</span>    .       +       <span class="number">0</span>       Parent=AT1G01010<span class="number">.1</span>,AT1G01010<span class="number">.1</span>-Protein;</div><div class="line"><span class="number">1</span>       TAIR10  exon    <span class="number">3996</span>    <span class="number">4276</span>    .       +       .       Parent=AT1G01010<span class="number">.1</span></div><div class="line"><span class="number">1</span>       TAIR10  CDS     <span class="number">3996</span>    <span class="number">4276</span>    .       +       <span class="number">2</span>       Parent=AT1G01010<span class="number">.1</span>,AT1G01010<span class="number">.1</span>-Protein;</div><div class="line"><span class="number">1</span>       TAIR10  exon    <span class="number">4486</span>    <span class="number">4605</span>    .       +       .       Parent=AT1G01010<span class="number">.1</span></div><div class="line"><span class="number">1</span>       TAIR10  CDS     <span class="number">4486</span>    <span class="number">4605</span>    .       +       <span class="number">0</span>       Parent=AT1G01010<span class="number">.1</span>,AT1G01010<span class="number">.1</span>-Protein;</div><div class="line"><span class="number">1</span>       TAIR10  exon    <span class="number">4706</span>    <span class="number">5095</span>    .       +       .       Parent=AT1G01010<span class="number">.1</span></div></pre></td></tr></table></figure>
<p>按第三列进行拆分：</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><div class="line"><span class="attribute">awk</span> <span class="string">'&#123;print &gt; <span class="variable">$3</span>&#125;'</span> TAIR10_GFF3.gff</div></pre></td></tr></table></figure>
<p>得到：</p>
<figure class="highlight tap"><table><tr><td class="code"><pre><div class="line">$ ls -lh</div><div class="line">total 72M</div><div class="line">-rw-rw-r--<span class="number"> 1 </span>liuhui liuhui  15M Aug <span class="number"> 5 </span>13:58 CDS</div><div class="line">-rw-rw-r--<span class="number"> 1 </span>liuhui liuhui  12M Aug <span class="number"> 5 </span>13:58 exon</div><div class="line">-rw-rw-r--<span class="number"> 1 </span>liuhui liuhui 2.2M Aug <span class="number"> 5 </span>13:58 five_prime_UTR</div><div class="line">-rw-rw-r--<span class="number"> 1 </span>liuhui liuhui 2.5M Aug <span class="number"> 5 </span>13:58 gene</div><div class="line">-rw-rw-r--<span class="number"> 1 </span>liuhui liuhui 3.2M Aug <span class="number"> 5 </span>13:58 mRNA</div><div class="line">-rw-rw-r--<span class="number"> 1 </span>liuhui liuhui  36M Aug <span class="number"> 5 </span>13:58 TAIR10_GFF3.gff</div><div class="line">-rw-rw-r--<span class="number"> 1 </span>liuhui liuhui 2.0M Aug <span class="number"> 5 </span>13:58 three_prime_UTR</div><div class="line"></div><div class="line">$ head -n<span class="number"> 3 </span>CDS</div><div class="line">1       TAIR10  CDS    <span class="number"> 3760 </span>  <span class="number"> 3913 </span>   .       +      <span class="number"> 0 </span>      Parent=AT1G01010.1,AT1G01010.1-Protein;</div><div class="line">1       TAIR10  CDS    <span class="number"> 3996 </span>  <span class="number"> 4276 </span>   .       +      <span class="number"> 2 </span>      Parent=AT1G01010.1,AT1G01010.1-Protein;</div><div class="line">1       TAIR10  CDS    <span class="number"> 4486 </span>  <span class="number"> 4605 </span>   .       +      <span class="number"> 0 </span>      Parent=AT1G01010.1,AT1G01010.1-Protein;</div><div class="line">$ head -n<span class="number"> 3 </span>exon</div><div class="line">1       TAIR10  exon   <span class="number"> 3631 </span>  <span class="number"> 3913 </span>   .       +       .       Parent=AT1G01010.1</div><div class="line">1       TAIR10  exon   <span class="number"> 3996 </span>  <span class="number"> 4276 </span>   .       +       .       Parent=AT1G01010.1</div><div class="line">1       TAIR10  exon   <span class="number"> 4486 </span>  <span class="number"> 4605 </span>   .       +       .       Parent=AT1G01010.1</div></pre></td></tr></table></figure>
<h3 id="行-列转化"><a href="#行-列转化" class="headerlink" title="行-列转化"></a>行-列转化</h3><h4 id="1-一行变多行"><a href="#1-一行变多行" class="headerlink" title="1. 一行变多行"></a>1. 一行变多行</h4><p>需要将如下格式转换成“一个基因好对应一个 GO 号”</p>
<figure class="highlight dns"><table><tr><td class="code"><pre><div class="line">$ cat pta_go.txt</div><div class="line">PITA_<span class="number">000018514</span>-RA GO:<span class="number">0003700</span>,GO:<span class="number">0005634</span>,GO:<span class="number">0006355</span>,GO:<span class="number">0043565</span></div><div class="line">PITA_<span class="number">000094612</span>-RA GO:<span class="number">0005618</span>,GO:<span class="number">0006073</span>,GO:<span class="number">0016762</span>,GO:<span class="number">0048046</span></div><div class="line">PITA_<span class="number">000087838</span>-RA GO:<span class="number">0008762</span>,GO:<span class="number">0016491</span>,GO:<span class="number">0050660</span>,GO:<span class="number">0055114</span></div><div class="line">PITA_<span class="number">000082501</span>-RA       GO:<span class="number">0003824</span>,GO:<span class="number">0008152</span></div><div class="line">PITA_<span class="number">000063616</span>-RA       GO:<span class="number">0030247</span></div></pre></td></tr></table></figure>
<p>可以这样：</p>
<figure class="highlight dns"><table><tr><td class="code"><pre><div class="line">$ awk '&#123;gsub(/,/, "\n"$<span class="number">1</span>"\t")<span class="comment">;print&#125;' pta_go.txt &gt; pta_go.annot</span></div><div class="line">$ cat pta_go.annot</div><div class="line">PITA_<span class="number">000018514</span>-RA GO:<span class="number">0003700</span></div><div class="line">PITA_<span class="number">000018514</span>-RA       GO:<span class="number">0005634</span></div><div class="line">PITA_<span class="number">000018514</span>-RA       GO:<span class="number">0006355</span></div><div class="line">PITA_<span class="number">000018514</span>-RA       GO:<span class="number">0043565</span></div><div class="line">PITA_<span class="number">000094612</span>-RA GO:<span class="number">0005618</span></div><div class="line">PITA_<span class="number">000094612</span>-RA       GO:<span class="number">0006073</span></div><div class="line">PITA_<span class="number">000094612</span>-RA       GO:<span class="number">0016762</span></div><div class="line">PITA_<span class="number">000094612</span>-RA       GO:<span class="number">0048046</span></div><div class="line">PITA_<span class="number">000087838</span>-RA GO:<span class="number">0008762</span></div><div class="line">PITA_<span class="number">000087838</span>-RA       GO:<span class="number">0016491</span></div><div class="line">PITA_<span class="number">000087838</span>-RA       GO:<span class="number">0050660</span></div><div class="line">PITA_<span class="number">000087838</span>-RA       GO:<span class="number">0055114</span></div><div class="line">PITA_<span class="number">000082501</span>-RA       GO:<span class="number">0003824</span></div><div class="line">PITA_<span class="number">000082501</span>-RA       GO:<span class="number">0008152</span></div><div class="line">PITA_<span class="number">000063616</span>-RA       GO:<span class="number">0030247</span></div></pre></td></tr></table></figure>
<p>原理就是将所有的逗号 <code>,</code> 依次替换成 <code>&quot;\n&quot;$1&quot;\t&quot;</code>；而不含有逗号的则照常打印出来。</p>
<h4 id="2-多行变一行"><a href="#2-多行变一行" class="headerlink" title="2. 多行变一行"></a>2. 多行变一行</h4><figure class="highlight dns"><table><tr><td class="code"><pre><div class="line">$ awk '&#123;a[$<span class="number">1</span>]=($<span class="number">1</span> in a ? a[$<span class="number">1</span>]","$<span class="number">2</span> : $<span class="number">0</span>)&#125; END&#123;for (k in a) print a[k]&#125;' pta_go.annot</div><div class="line">PITA_<span class="number">000018514</span>-RA GO:<span class="number">0003700</span>,GO:<span class="number">0005634</span>,GO:<span class="number">0006355</span>,GO:<span class="number">0043565</span></div><div class="line">PITA_<span class="number">000082501</span>-RA       GO:<span class="number">0003824</span>,GO:<span class="number">0008152</span></div><div class="line">PITA_<span class="number">000094612</span>-RA GO:<span class="number">0005618</span>,GO:<span class="number">0006073</span>,GO:<span class="number">0016762</span>,GO:<span class="number">0048046</span></div><div class="line">PITA_<span class="number">000063616</span>-RA       GO:<span class="number">0030247</span></div><div class="line">PITA_<span class="number">000087838</span>-RA GO:<span class="number">0008762</span>,GO:<span class="number">0016491</span>,GO:<span class="number">0050660</span>,GO:<span class="number">0055114</span></div></pre></td></tr></table></figure>
<p>即将文件 <code>pta_go.annot</code> 的格式转成文件 <code>pta_go.txt</code> 的格式</p>
<p>这里用到了三目运算符<code>?:</code>，<code>?</code> 代表<code>是</code>，而<code>:</code> 代表<code>否</code>。如：</p>
<figure class="highlight golo"><table><tr><td class="code"><pre><div class="line">$ awk 'BEGIN&#123;a=<span class="string">"b"</span>;<span class="keyword">print</span> a==<span class="string">"b"</span> ? <span class="string">"ok"</span> : <span class="string">"err"</span>&#125;' <span class="comment"># 变量 a 与字符“b”相同</span></div><div class="line">ok</div><div class="line">$ awk 'BEGIN&#123;a=<span class="string">"b"</span>;<span class="keyword">print</span> a==<span class="string">"c"</span> ? <span class="string">"ok"</span> : <span class="string">"err"</span>&#125;' <span class="comment"># 变量 a 与字符“c”不相同</span></div><div class="line">err</div></pre></td></tr></table></figure>
<p>所以，语句</p>
<figure class="highlight autoit"><table><tr><td class="code"><pre><div class="line">a[$1]=($1 <span class="keyword">in</span> a ? a[$1]<span class="string">","</span>$2 : $0)</div></pre></td></tr></table></figure>
<p>的含义是：<code>$1</code> 如果是第一次出现，将<code>$0</code>存入数组<code>a</code>中，数组的下标是<code>$1</code>；如果<code>$1</code>在数组 <code>a</code> 中，表明其出现两次或以上时，则将<code>a[$1]</code>（代表之前的 <code>$0</code>）和 <code>$2</code> 存入数组 <code>a</code> 中（即更新数组）。</p>
<p>当该语句执行完毕后，执行 <code>END</code> 语句块，将数组<code>a</code>的结果打印出来。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;按照指定的列去除重复&quot;&gt;&lt;a href=&quot;#按照指定的列去除重复&quot; class=&quot;headerlink&quot; title=&quot;按照指定的列去除重复&quot;&gt;&lt;/a&gt;按照指定的列去除重复&lt;/h3&gt;&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;t
    
    </summary>
    
      <category term="生信" scheme="https://hui-liu.github.io/categories/%E7%94%9F%E4%BF%A1/"/>
    
    
      <category term="linux" scheme="https://hui-liu.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>生信资料</title>
    <link href="https://hui-liu.github.io/blog/%E7%94%9F%E4%BF%A1%E8%B5%84%E6%96%99/"/>
    <id>https://hui-liu.github.io/blog/生信资料/</id>
    <published>2017-07-27T14:05:57.000Z</published>
    <updated>2017-07-27T14:24:12.859Z</updated>
    
    <content type="html"><![CDATA[<p>小伙伴们，福利来了！</p>
<p>还在为手中没有合适的资料发愁吗？公众号内容复杂无从下手？信息量太大不知如何学习？好啦，福利来啦，今天我们赠送系统的生信学习资料给大家，附赠珍藏版生信学习方法！</p>
<p>是不是心动了！稍等，我们有个小小要求，也希望大家能够积极为公众号的发展壮大贡献自己的一份力量，因为我们都是生信小圈的一份子。</p>
<p>怎么获得资料呢，分享公众号任何文章（非本条消息）到朋友圈，手机截图，到生信百科QQ群 575383226 发给管理员，即可获得相应学习资料。</p>
<p>10个赞以上附赠以下基础版资料：</p>
<ul>
<li>Perl语言入门</li>
<li>Python基础教程</li>
<li>Linux 教程</li>
<li>华大内部生信培训教程一份</li>
<li>Perl脚本示例</li>
<li>Python 脚本示例</li>
<li>生信学习方法精华</li>
<li>生信组学数据库及在线工具整理</li>
</ul>
<p>20个赞以上赠送基础版 + R语言学习资料 + python 视频资料：</p>
<ul>
<li><p>R绘图学习（附赠各章练习题以及绘图脚本）</p>
</li>
<li><p>R视频教程</p>
</li>
<li><p>R在生态学、生物多样性中的应用（附赠全套课件以及学习资料，做多样性的童鞋有福了）</p>
</li>
<li><p>R统计建模（附赠10章内容、脚本及练习题）</p>
</li>
<li><p>R语言基础及绘图</p>
</li>
<li><p>python学习视频资料</p>
<p>​</p>
</li>
</ul>
<p>先来饱饱眼福：</p>
<p><img src="/blog/生信资料/1.png" alt="1"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;小伙伴们，福利来了！&lt;/p&gt;
&lt;p&gt;还在为手中没有合适的资料发愁吗？公众号内容复杂无从下手？信息量太大不知如何学习？好啦，福利来啦，今天我们赠送系统的生信学习资料给大家，附赠珍藏版生信学习方法！&lt;/p&gt;
&lt;p&gt;是不是心动了！稍等，我们有个小小要求，也希望大家能够积极为公众号
    
    </summary>
    
      <category term="生信" scheme="https://hui-liu.github.io/categories/%E7%94%9F%E4%BF%A1/"/>
    
    
      <category term="生信" scheme="https://hui-liu.github.io/tags/%E7%94%9F%E4%BF%A1/"/>
    
  </entry>
  
  <entry>
    <title>MSA 格式转换：protein MSA to codon-based DNA MSA</title>
    <link href="https://hui-liu.github.io/blog/MSA-%E6%A0%BC%E5%BC%8F%E8%BD%AC%E6%8D%A2%EF%BC%9Aprotein-MSAs-to-codon-based-DNA-MSA/"/>
    <id>https://hui-liu.github.io/blog/MSA-格式转换：protein-MSAs-to-codon-based-DNA-MSA/</id>
    <published>2017-07-17T02:57:04.000Z</published>
    <updated>2017-07-17T03:26:24.906Z</updated>
    
    <content type="html"><![CDATA[<h3 id="下载与安装"><a href="#下载与安装" class="headerlink" title="下载与安装"></a>下载与安装</h3><figure class="highlight nginx"><table><tr><td class="code"><pre><div class="line"><span class="attribute">wget</span> http://www.bork.embl-heidelberg.de/pal2nal/distribution/pal2nal.v14.tar.gz</div><div class="line"></div><div class="line">tar -zxvf pal2nal.v14.tar.gz</div><div class="line"></div><div class="line">export PATH=<span class="variable">$PATH</span>:<span class="string">'/home/liuhui/bin/pal2nal.v14'</span> <span class="comment"># 按实际情况改成自己计算机上的路径</span></div></pre></td></tr></table></figure>
<h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><ul>
<li><p>MSA</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><div class="line">mafft-linsi HLA_DQB1<span class="selector-class">.aa</span><span class="selector-class">.fasta</span> &gt; HLA_DQB1<span class="selector-class">.aa</span><span class="selector-class">.mafft</span><span class="selector-class">.fasta</span></div></pre></td></tr></table></figure>
</li>
<li><p>protein MSA to codon-based MSA</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><div class="line">perl pal2nal<span class="selector-class">.pl</span> HLA_DQB1<span class="selector-class">.aa</span><span class="selector-class">.mafft</span><span class="selector-class">.fasta</span> HLA_DQB1<span class="selector-class">.cds</span><span class="selector-class">.fasta</span> -output fasta &gt; HLA_DQB1<span class="selector-class">.cds</span><span class="selector-class">.mafft</span><span class="selector-class">.fasta</span></div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;下载与安装&quot;&gt;&lt;a href=&quot;#下载与安装&quot; class=&quot;headerlink&quot; title=&quot;下载与安装&quot;&gt;&lt;/a&gt;下载与安装&lt;/h3&gt;&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;
    
    </summary>
    
      <category term="生信" scheme="https://hui-liu.github.io/categories/%E7%94%9F%E4%BF%A1/"/>
    
    
      <category term="evolution" scheme="https://hui-liu.github.io/tags/evolution/"/>
    
  </entry>
  
  <entry>
    <title>多序列比对</title>
    <link href="https://hui-liu.github.io/blog/%E5%A4%9A%E5%BA%8F%E5%88%97%E6%AF%94%E5%AF%B9/"/>
    <id>https://hui-liu.github.io/blog/多序列比对/</id>
    <published>2017-07-10T12:03:46.000Z</published>
    <updated>2017-07-10T14:01:29.822Z</updated>
    
    <content type="html"><![CDATA[<p><strong>多序列比对（或多序列联配，multiple sequence alignment，MSA）</strong>，是指把多条（3 条或以上）有系统进化关系的蛋白质或核酸序列进行比对，尽可能地把相同的碱基或氨基酸残基排在同一列上。这样做的意义是，对齐的碱基或氨基酸残基在进化上是同源的，即来自共同祖先（common ancestor）。下图是一个 MSA 的例子。</p>
<p><img src="/blog/多序列比对/msa-example.png" alt="msa-example"></p>
<p>MSA 有许多用途，如构建<a href="https://mp.weixin.qq.com/s?__biz=MzI4NjMxOTA3OA==&amp;mid=2247484326&amp;idx=1&amp;sn=3caa6da27f980cf5d74bf7d7a7103cba&amp;chksm=ebdf8b2fdca802395e83dcacc080a76909f6f56533e2193ed78382882eb041fd7538dabd732e#rd" target="_blank" rel="external">系统发育树</a>，选择压分析，基因家族的保守结构域分析，<a href="https://mp.weixin.qq.com/s?__biz=MzI4NjMxOTA3OA==&amp;mid=2247484297&amp;idx=1&amp;sn=956c9821ee1477c1b474185d74b3d80d&amp;chksm=ebdf8b00dca80216721bb4cfe38b00fe325d35e3639d533d27e0bef86369a6cca0cf54a5e7a1#rd" target="_blank" rel="external">motif 分析</a>等。</p>
<p>MSA 分析的软件有很多，如 mafft（<a href="http://mafft.cbrc.jp/alignment/software/），muscle（http://www.drive5.com/muscle/downloads.htm），probcons（http://probcons.stanford.edu/），T-coffee（http://tcoffee.crg.cat/），clustalw（http://clustalw.ddbj.nig.ac.jp/）等。" target="_blank" rel="external">http://mafft.cbrc.jp/alignment/software/），muscle（http://www.drive5.com/muscle/downloads.htm），probcons（http://probcons.stanford.edu/），T-coffee（http://tcoffee.crg.cat/），clustalw（http://clustalw.ddbj.nig.ac.jp/）等。</a></p>
<p>从软件的速度和准确性出发，mafft 和 muscle 是不错的选择。这里介绍 mafft 的使用方法。</p>
<h3 id="mafft-安装（非-root）"><a href="#mafft-安装（非-root）" class="headerlink" title="mafft 安装（非 root）"></a>mafft 安装（非 root）</h3><ul>
<li><p>下载</p>
<figure class="highlight crystal"><table><tr><td class="code"><pre><div class="line">wget <span class="symbol">http:</span>/<span class="regexp">/mafft.cbrc.jp/alignment</span><span class="regexp">/software/mafft</span>-<span class="number">7.310</span>-<span class="keyword">with</span>-extensions-src.tgz</div></pre></td></tr></table></figure>
</li>
<li><p>解压</p>
<figure class="highlight css"><table><tr><td class="code"><pre><div class="line"><span class="selector-tag">tar</span> <span class="selector-tag">-zxvf</span> <span class="selector-tag">mafft-7</span><span class="selector-class">.310-with-extensions-src</span><span class="selector-class">.tgz</span></div></pre></td></tr></table></figure>
</li>
<li><p>编辑 <strong>Makefile</strong> 文件的第一行</p>
<figure class="highlight crystal"><table><tr><td class="code"><pre><div class="line">cd mafft-<span class="number">7.310</span>-<span class="keyword">with</span>-extensions/core/</div><div class="line">vim Makefile (或用 nano 等进行编辑)</div><div class="line"></div><div class="line">编辑：</div><div class="line">PREFIX = <span class="regexp">/usr/local</span></div><div class="line">为:</div><div class="line">PREFIX = <span class="regexp">/home/your</span>_home/somewhere</div><div class="line">（如：PREFIX = <span class="regexp">/home/liuhui</span><span class="regexp">/bin/mafft</span>-<span class="number">7.310</span>）</div></pre></td></tr></table></figure>
</li>
<li><p>编译和安装</p>
<figure class="highlight gauss"><table><tr><td class="code"><pre><div class="line"><span class="built_in">make</span></div><div class="line"><span class="built_in">make</span> install</div></pre></td></tr></table></figure>
</li>
</ul>
<p>安装最后安装在 <code>/home/liuhui/bin/mafft-7.310/bin</code> 下，将这个路径放到 <code>.bashrc</code> 中即可。</p>
<h3 id="mafft-使用方法"><a href="#mafft-使用方法" class="headerlink" title="mafft 使用方法"></a>mafft 使用方法</h3><p>mafft 的一般用法为：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><div class="line">mafft [arguments] <span class="selector-tag">input</span> &gt; output</div></pre></td></tr></table></figure>
<p>input 可以是 fasta 格式的蛋白质或核苷酸序列。</p>
<p>对于 200 条序列以内且序列长度小于 2,000 bp 或 aa 的文件，可以使用 <code>mafft-linsi</code></p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><div class="line">mafft-linsi <span class="selector-tag">input</span> &gt; output</div></pre></td></tr></table></figure>
<p>文件较小时，也可以使用在线版：<a href="http://mafft.cbrc.jp/alignment/server/" target="_blank" rel="external">http://mafft.cbrc.jp/alignment/server/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;多序列比对（或多序列联配，multiple sequence alignment，MSA）&lt;/strong&gt;，是指把多条（3 条或以上）有系统进化关系的蛋白质或核酸序列进行比对，尽可能地把相同的碱基或氨基酸残基排在同一列上。这样做的意义是，对齐的碱基或氨基酸
    
    </summary>
    
      <category term="生信" scheme="https://hui-liu.github.io/categories/%E7%94%9F%E4%BF%A1/"/>
    
    
      <category term="evolution" scheme="https://hui-liu.github.io/tags/evolution/"/>
    
  </entry>
  
  <entry>
    <title>GO富集分析</title>
    <link href="https://hui-liu.github.io/blog/GO%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/"/>
    <id>https://hui-liu.github.io/blog/GO富集分析/</id>
    <published>2017-07-10T02:34:52.000Z</published>
    <updated>2017-07-10T02:34:52.514Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>meme本地版的使用</title>
    <link href="https://hui-liu.github.io/blog/meme%E6%9C%AC%E5%9C%B0%E7%89%88%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://hui-liu.github.io/blog/meme本地版的使用/</id>
    <published>2017-07-01T07:44:56.000Z</published>
    <updated>2017-07-03T02:21:02.116Z</updated>
    
    <content type="html"><![CDATA[<p>序列 motif 就是一段有功能的、特定模式的序列，它之所以可以具有生物学功能，是因为它可以和调控蛋白结合，如转录因子、核糖体等。</p>
<p>软件 meme（<a href="http://meme-suite.org/tools/meme）" target="_blank" rel="external">http://meme-suite.org/tools/meme）</a> 可以从序列中找到新的、没有 gap 的 motifs，其输入文件可以是 DNA、RNA 或蛋白质序列。该软件的在线版限制序列大小为 <strong>60,000 bp</strong> ，在使用上有一定的局限性，这里介绍其本地版的用法。</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>meme 的安装方法如下：</p>
<ul>
<li>下载 <a href="http://meme-suite.org/doc/download.html" target="_blank" rel="external">http://meme-suite.org/doc/download.html/</a></li>
<li>安装命令</li>
</ul>
<figure class="highlight brainfuck"><table><tr><td class="code"><pre><div class="line"><span class="comment">tar</span> <span class="comment">zxf</span> <span class="comment">meme_4</span><span class="string">.</span><span class="comment">12</span><span class="string">.</span><span class="comment">0</span><span class="string">.</span><span class="comment">tar</span><span class="string">.</span><span class="comment">gz</span></div><div class="line"><span class="comment">cd</span> <span class="comment">meme_4</span><span class="string">.</span><span class="comment">12</span><span class="string">.</span><span class="comment">0</span></div><div class="line"><span class="comment">#</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">prefix</span> <span class="comment">指定</span> <span class="comment">meme</span> <span class="comment">的安装路径，路径可自行修改</span></div><div class="line"><span class="string">.</span><span class="comment">/configure</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">prefix=$HOME/meme</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">with</span><span class="literal">-</span><span class="comment">url=http://meme</span><span class="literal">-</span><span class="comment">suite</span><span class="string">.</span><span class="comment">org</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">enable</span><span class="literal">-</span><span class="comment">build</span><span class="literal">-</span><span class="comment">libxml2</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">enable</span><span class="literal">-</span><span class="comment">build</span><span class="literal">-</span><span class="comment">libxslt</span></div><div class="line"><span class="comment">make</span></div><div class="line"><span class="comment">make</span> <span class="comment">test</span></div><div class="line"><span class="comment">make</span> <span class="comment">install</span></div></pre></td></tr></table></figure>
<ul>
<li>添加环境变量到 <code>.bashrc</code> 中</li>
</ul>
<figure class="highlight awk"><table><tr><td class="code"><pre><div class="line">export PATH=<span class="variable">$HOME</span><span class="regexp">/meme/</span>bin:<span class="variable">$PATH</span></div></pre></td></tr></table></figure>
<p>更具体的细节请查看安装文档：<a href="http://meme-suite.org/doc/install.html?man_type=web#prereq_commonutils。" target="_blank" rel="external">http://meme-suite.org/doc/install.html?man_type=web#prereq_commonutils。</a></p>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><div class="line">meme <span class="selector-tag">input</span><span class="selector-class">.fasta</span> -protein -oc . -mod zoops -nmotifs <span class="number">3</span> -minw <span class="number">6</span> -maxw <span class="number">50</span></div></pre></td></tr></table></figure>
<p>其中，</p>
<ul>
<li><code>input.fasta</code> 可以是 DNA、RNA 或 蛋白质序列。</li>
<li><code>-protein</code> 指定 <code>input.fasta</code> 的类型。</li>
<li><code>-oc</code> 指定输出文件路径，<code>.</code> 即为当前目录。</li>
<li><code>-mod</code> 假定 motif 的分布模式，详见 <a href="http://meme-suite.org/doc/meme.html。" target="_blank" rel="external">http://meme-suite.org/doc/meme.html。</a></li>
<li><code>-minw</code> motif 的最小宽度。</li>
<li><code>-maxw</code> motif 的最大宽度。</li>
</ul>
<h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p>有两个图，一个图是 <strong>Motif Locations</strong>，用于描述 motif 在序列上的分布情况。在这个例子中，找到三个 motif。</p>
<p><img src="/blog/meme本地版的使用/1.png" alt="1"></p>
<p>另一个图称为 <strong>Discovered Motifs</strong>，用于描述碱基或氨基酸的频率和保守性。</p>
<p><img src="/blog/meme本地版的使用/2.png" alt="2"></p>
<p>该图依次描述  <strong>Motif Locations</strong> 中，每个 motif 的每个位点氨基酸的频率和保守性，字母越大，说明该位点这个氨基酸出现次数越多，同时，也更加保守。</p>
<p>可能图  <strong>Discovered Motifs</strong> 不太好理解，下面举例说明。</p>
<ul>
<li><p>假如有以下 8 条序列，认为这 8 条序列为同一个 motif：</p>
<p><img src="/blog/meme本地版的使用/3.png" alt="3"></p>
</li>
</ul>
<ul>
<li><p>显然，该 motif 共有 12 个位点，每个位点碱基的频数如下表：</p>
<p><img src="/blog/meme本地版的使用/4.png" alt="4"></p>
</li>
<li><p>将上面的表格绘制成图，如下：</p>
<p><img src="/blog/meme本地版的使用/5.png" alt="5"></p>
</li>
<li><p>显然，字母越大，其频数越大；但有一个缺点是，每个位点的保守性不能很好的凸显出来。如第 1 个位点和第 3 个位点的 <strong>C</strong> 虽然均出现了 <strong>4</strong> 次，但是由于第 3 个位点有三种碱基，而第 1 个 位点有两种碱基，显然，第一个位点较第三个位点更加保守。所以，再进一步计算，得到下图。</p>
<p><img src="/blog/meme本地版的使用/6.png" alt="6"></p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;序列 motif 就是一段有功能的、特定模式的序列，它之所以可以具有生物学功能，是因为它可以和调控蛋白结合，如转录因子、核糖体等。&lt;/p&gt;
&lt;p&gt;软件 meme（&lt;a href=&quot;http://meme-suite.org/tools/meme）&quot; target=&quot;_bla
    
    </summary>
    
      <category term="生信" scheme="https://hui-liu.github.io/categories/%E7%94%9F%E4%BF%A1/"/>
    
    
      <category term="功能注释" scheme="https://hui-liu.github.io/tags/%E5%8A%9F%E8%83%BD%E6%B3%A8%E9%87%8A/"/>
    
  </entry>
  
  <entry>
    <title>KEGG注释</title>
    <link href="https://hui-liu.github.io/blog/KEGG%E6%B3%A8%E9%87%8A/"/>
    <id>https://hui-liu.github.io/blog/KEGG注释/</id>
    <published>2017-06-17T11:53:33.000Z</published>
    <updated>2017-06-19T02:18:47.635Z</updated>
    
    <content type="html"><![CDATA[<p>在 KEGG 数据库中，把功能相似的蛋白质归为同一组，然后标上 KO 号。通过相似性比对，可以为未知功能的蛋白序列注释上 KO 号。</p>
<p>截止到 2015 年 6 月 12 日，KEGG 数据库中共收录了 3,904 个完整的基因组。其中 304 个为真核生物，3,600 个为原核生物。在真核生物中，共有 299 个物种（一个物种可能不止一个基因组），分为 172 科，227 属；在原核生物中，共有 1,858 个物种，分为 809 属。</p>
<p>KEGG 对这些物种的基因序列构成了一个非冗余的 <a href="http://www.kegg.jp/kegg/genes.html" target="_blank" rel="external"><strong>KEGG GENES</strong></a> 数据库；通过 <a href="http://www.kegg.jp/blastkoala/" target="_blank" rel="external"><strong>BlastKOALA</strong></a> 和 <a href="http://www.kegg.jp/ghostkoala/" target="_blank" rel="external"><strong>GhostKOALA</strong></a>， 可对用户提交的<strong>蛋白质序列</strong>，与 KEGG GENES 数据库分别进行 BLAST 或 GHOSTX 相似性比对，为蛋白质序列注释上 K number，即 KO 号。其中，GHOSTX 比对和 BLAST 比对类似，能够检测到分歧度较大的同源序列（remote homologues），在速度上比 BLAST 大约快 100 倍，两者的区别是：</p>
<ul>
<li>BlastKOALA：用于注释高质量基因组，只能提交 5,000 - 10,000 条蛋白质序列。</li>
<li>GhostKOALA：用于注释宏基因组，文件大小为 300 M 以内。</li>
</ul>
<p>有了 KO 号，就可以重构 KEGG 数据库中的 KEGG pathways 及其他分子网络，然后进行其他分析。</p>
<p>这里以 BlastKOALA 为例，对蛋白质序列进行 KO 注释。</p>
<p>分析步骤如下：</p>
<ul>
<li>到这个网页：<a href="http://www.kegg.jp/blastkoala/" target="_blank" rel="external">http://www.kegg.jp/blastkoala/</a></li>
<li>上传 fasta 格式的蛋白质序列</li>
</ul>
<p><img src="/blog/KEGG注释/1.png" alt="1"></p>
<ul>
<li><p>选择物种所属的分类单元，如这里选择植物“plant”</p>
<p><img src="/blog/KEGG注释/2.png" alt="2"></p>
</li>
<li><p>选择一个数据库进行比对。这些数据库由 KEGG GENES 分别在种、属、科水平去冗余后生成。这里选“属”水平的真核生物，如下图右表所示，上传的蛋白质序列限制为 7,500 条序列。</p>
<p><img src="/blog/KEGG注释/3.png" alt="3"></p>
</li>
<li><p>填写自己的邮箱地址，并提交任务，开始分析。</p>
<p><img src="/blog/KEGG注释/4.png" alt="4"></p>
</li>
<li><p>回跳转到这个界面，耐心等待即可。<img src="/blog/KEGG注释/5.png" alt="5"></p>
</li>
<li><p>分析完成后，会收到邮件通知。</p>
<p><img src="/blog/KEGG注释/6.png" alt="6"></p>
</li>
<li><p>点击链接，返回如下结果。</p>
<p><img src="/blog/KEGG注释/7.png" alt="7"></p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在 KEGG 数据库中，把功能相似的蛋白质归为同一组，然后标上 KO 号。通过相似性比对，可以为未知功能的蛋白序列注释上 KO 号。&lt;/p&gt;
&lt;p&gt;截止到 2015 年 6 月 12 日，KEGG 数据库中共收录了 3,904 个完整的基因组。其中 304 个为真核生物，3
    
    </summary>
    
      <category term="生信" scheme="https://hui-liu.github.io/categories/%E7%94%9F%E4%BF%A1/"/>
    
    
      <category term="功能注释" scheme="https://hui-liu.github.io/tags/%E5%8A%9F%E8%83%BD%E6%B3%A8%E9%87%8A/"/>
    
  </entry>
  
  <entry>
    <title>Gene Ontology (GO) 注释</title>
    <link href="https://hui-liu.github.io/blog/Gene-Ontology-GO-%E6%B3%A8%E9%87%8A/"/>
    <id>https://hui-liu.github.io/blog/Gene-Ontology-GO-注释/</id>
    <published>2017-06-11T03:26:36.000Z</published>
    <updated>2017-06-12T02:24:49.128Z</updated>
    
    <content type="html"><![CDATA[<p>相似的基因在不同物种中，其功能往往保守的。显然，需要一个<strong>统一的术语</strong>用于描述这些跨物种的同源基因及其基因产物的功能，否则，不同的实验室对相同的基因的功能的描述不同，将极大限制学术的交流。而 Gene Ontology (GO) 项目正是为了能够使对各种数据库中基因获基因产物功能描述相一致的努力结果。</p>
<p>所谓的 GO，是生物学功能注释的一个标准词汇表术语（GO term），将基因的功能分为三部分：</p>
<ul>
<li>基因执行的<strong>分子功能（Molecular Function）</strong></li>
<li>基因所处的<strong>细胞组分（Cellular Component）</strong></li>
<li>基因参与的<strong>生物学过程（Biological Process）</strong></li>
</ul>
<p>不同的 GO term 通过有向无环图关联起来，如下图所示：</p>
<p><img src="/blog/Gene-Ontology-GO-注释/1.png" alt="1"></p>
<p>可以看出，不同的 GO term 间的关系由三类：<code>is_a</code>、<code>part_of</code> 和 <code>regulates</code>。</p>
<p>如 <code>regulation of cell projection assembly</code> 是一种生物学过程，是 <code>regulation of cell projection organization</code> 中的一类（<code>is_a</code>），还调节（<code>regulates</code>）<code>cell projection assembly</code>；又如 <code>cellular component assembly</code> 是 <code>celluar component biogenesis</code> 的一部分（<code>part_of</code>）。值得注意的是，这些关系都是有方向的，即反过来不成了，因而叫做有向无环图。</p>
<p>目前，GO 注释主要有两种方法：</p>
<ul>
<li>（1）<strong>序列相似性比对（BLAST）</strong></li>
<li>（2）<strong>结构域相似性比对（InterProScan）</strong></li>
</ul>
<p>这里以<strong>序列相似性比对</strong>为例，简单介绍 GO 注释的步骤：</p>
<ul>
<li><p>将基因序列与 <a href="http://web.expasy.org/docs/swiss-prot_guideline.html" target="_blank" rel="external">swiss-prot</a> 蛋白质数据库进行 BLAST （blastp 或者 blastx）比对，得到如下结果：</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><div class="line">c49_g1_i1       RNF13_MOUSE     <span class="number">52.00</span>   <span class="number">50</span>      <span class="number">23</span>      <span class="number">1</span>       <span class="number">17</span>      <span class="number">166</span>     <span class="number">240</span>     <span class="number">288</span>     <span class="number">2e-11</span>   <span class="number">65.5</span></div><div class="line">c72_g1_i1       RS25_NEUCR      <span class="number">78.72</span>   <span class="number">94</span>      <span class="number">20</span>      <span class="number">0</span>       <span class="number">375</span>     <span class="number">94</span>      <span class="number">1</span>       <span class="number">94</span>      <span class="number">1e-32</span>   <span class="number">116</span></div><div class="line">c75_g1_i1       POLX_TOBAC      <span class="number">45.28</span>   <span class="number">53</span>      <span class="number">29</span>      <span class="number">0</span>       <span class="number">162</span>     <span class="number">4</span>       <span class="number">457</span>     <span class="number">509</span>     <span class="number">1e-08</span>   <span class="number">55.1</span></div><div class="line">c86_g2_i1       POLX_TOBAC      <span class="number">46.43</span>   <span class="number">112</span>     <span class="number">60</span>      <span class="number">0</span>       <span class="number">339</span>     <span class="number">4</span>       <span class="number">879</span>     <span class="number">990</span>     <span class="number">2e-30</span>   <span class="number">120</span></div><div class="line">c91_g1_i1       BUB1_ARATH      <span class="number">55.71</span>   <span class="number">70</span>      <span class="number">28</span>      <span class="number">2</span>       <span class="number">61</span>      <span class="number">264</span>     <span class="number">289</span>     <span class="number">357</span>     <span class="number">1e-14</span>   <span class="number">73.6</span></div><div class="line">c143_g1_i1      STL1_YEAST      <span class="number">31.98</span>   <span class="number">172</span>     <span class="number">85</span>      <span class="number">4</span>       <span class="number">6</span>       <span class="number">518</span>     <span class="number">407</span>     <span class="number">547</span>     <span class="number">6e-17</span>   <span class="number">82.8</span></div><div class="line">c150_g1_i1      CST26_YEAST     <span class="number">37.63</span>   <span class="number">93</span>      <span class="number">38</span>      <span class="number">3</span>       <span class="number">223</span>     <span class="number">5</span>       <span class="number">142</span>     <span class="number">234</span>     <span class="number">6e-10</span>   <span class="number">58.2</span></div><div class="line">c150_g2_i1      YHOE_SCHPO      <span class="number">42.67</span>   <span class="number">75</span>      <span class="number">41</span>      <span class="number">1</span>       <span class="number">227</span>     <span class="number">3</span>       <span class="number">54</span>      <span class="number">126</span>     <span class="number">5e-16</span>   <span class="number">74.7</span></div><div class="line">c156_g2_i1      EXOL2_ARATH     <span class="number">47.17</span>   <span class="number">53</span>      <span class="number">28</span>      <span class="number">0</span>       <span class="number">299</span>     <span class="number">141</span>     <span class="number">229</span>     <span class="number">281</span>     <span class="number">6e-06</span>   <span class="number">47.0</span></div><div class="line">c169_g1_i1      SPT5_ASPFU      <span class="number">60.98</span>   <span class="number">82</span>      <span class="number">31</span>      <span class="number">1</span>       <span class="number">20</span>      <span class="number">262</span>     <span class="number">725</span>     <span class="number">806</span>     <span class="number">2e-18</span>   <span class="number">84.0</span></div></pre></td></tr></table></figure>
<blockquote>
<p>其中，第二列 <a href="http://web.expasy.org/docs/swiss-prot_guideline.html" target="_blank" rel="external">swiss-prot</a> 蛋白质数据库序列的 ID（UniProtKB ID）。</p>
</blockquote>
</li>
<li><p>从 ftp://ftp.pir.georgetown.edu/databases/idmapping 下载 <code>idmapping.tb.gz</code>，该文件共有 22 列（tab 键分割）：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><div class="line"><span class="selector-tag">Q6GZX4</span>  001<span class="selector-tag">R_FRG3G</span>      2947773 <span class="selector-tag">YP_031579</span><span class="selector-class">.1</span>     81941549; 49237298              <span class="selector-tag">PF04947</span> <span class="selector-tag">GO</span><span class="selector-pseudo">:0006355</span>; <span class="selector-tag">GO</span><span class="selector-pseudo">:0046782</span>; <span class="selector-tag">GO</span><span class="selector-pseudo">:0006351</span>                      <span class="selector-tag">UniRef100_Q6GZX4</span>  <span class="selector-tag">UniRef90_Q6GZX4</span> <span class="selector-tag">UniRef50_Q6GZX4</span> <span class="selector-tag">UPI00003B0FD4</span>           654924                          15165820        <span class="selector-tag">AY548484</span>        <span class="selector-tag">AAT09660</span><span class="selector-class">.1</span></div></pre></td></tr></table></figure>
<blockquote>
<p>每一列的含义分别为 （可以看出，许多数据库已经和GO关联了）：</p>
</blockquote>
<figure class="highlight markdown"><table><tr><td class="code"><pre><div class="line"><span class="bullet">1. </span>UniProtKB accession</div><div class="line"><span class="bullet">2. </span>UniProtKB ID</div><div class="line"><span class="bullet">3. </span>EntrezGene</div><div class="line"><span class="bullet">4. </span>RefSeq</div><div class="line"><span class="bullet">5. </span>NCBI GI number</div><div class="line"><span class="bullet">6. </span>PDB</div><div class="line"><span class="bullet">7. </span>Pfam</div><div class="line"><span class="bullet">8. </span>GO</div><div class="line"><span class="bullet">9. </span>PIRSF</div><div class="line"><span class="bullet">10. </span>IPI</div><div class="line"><span class="bullet">11. </span>UniRef100</div><div class="line"><span class="bullet">12. </span>UniRef90</div><div class="line"><span class="bullet">13. </span>UniRef50</div><div class="line"><span class="bullet">14. </span>UniParc</div><div class="line"><span class="bullet">15. </span>PIR-PSD accession</div><div class="line"><span class="bullet">16. </span>NCBI taxonomy</div><div class="line"><span class="bullet">17. </span>MIM</div><div class="line"><span class="bullet">18. </span>UniGene</div><div class="line"><span class="bullet">19. </span>Ensembl</div><div class="line"><span class="bullet">20. </span>PubMed ID</div><div class="line"><span class="bullet">21. </span>EMBL/GenBank/DDBJ</div><div class="line"><span class="bullet">22. </span>EMBL protein_id</div></pre></td></tr></table></figure>
</li>
<li><p>根据文件 <code>idmapping.tb.gz</code>，将 blast 的结果，通过 <code>UniProtKB ID</code>，将第八列的 GO 号注释到对应的基因上。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">python UniProt2GO_annotate.py idmapping.tb.gz blastout outputfile</div></pre></td></tr></table></figure>
<p>结果如下：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><div class="line"><span class="selector-tag">c93619_g2_i1</span>    <span class="selector-tag">GO</span><span class="selector-pseudo">:0005506</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0016705</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0016021</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0004497</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0020037</span></div><div class="line"><span class="selector-tag">c93619_g2_i3</span>    <span class="selector-tag">GO</span><span class="selector-pseudo">:0009733</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0020037</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0044550</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0016021</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0016020</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0016711</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0009813</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0005789</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0005506</span></div><div class="line"><span class="selector-tag">c70056_g1_i1</span>    <span class="selector-tag">GO</span><span class="selector-pseudo">:0005737</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0019722</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0071889</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0005829</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0001077</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0006357</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0097720</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0000978</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0046872</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0005634</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0006874</span></div><div class="line"><span class="selector-tag">c93748_g1_i1</span>    <span class="selector-tag">GO</span><span class="selector-pseudo">:0006729</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0008124</span></div><div class="line"><span class="selector-tag">c107639_g1_i1</span>   <span class="selector-tag">GO</span><span class="selector-pseudo">:0009737</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0009738</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0005623</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0006970</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0009651</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0045454</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0009789</span></div><div class="line"><span class="selector-tag">c106424_g1_i1</span>   <span class="selector-tag">GO</span><span class="selector-pseudo">:0043565</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0009555</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0003700</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0005634</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0009793</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0006351</span></div><div class="line"><span class="selector-tag">c66585_g1_i1</span>    <span class="selector-tag">GO</span><span class="selector-pseudo">:0005737</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0003746</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0003924</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0005525</span></div><div class="line"><span class="selector-tag">c110618_g1_i8</span>   <span class="selector-tag">GO</span><span class="selector-pseudo">:0015297</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0016021</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0015238</span></div><div class="line"><span class="selector-tag">c105249_g1_i5</span>   <span class="selector-tag">GO</span><span class="selector-pseudo">:0046872</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0043161</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0005829</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0006915</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0032648</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0050691</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0005654</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0070936</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0061630</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0005634</span></div><div class="line"><span class="selector-tag">c134727_g1_i1</span>   <span class="selector-tag">GO</span><span class="selector-pseudo">:0072546</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0030246</span>,<span class="selector-tag">GO</span><span class="selector-pseudo">:0005783</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>拓展阅读：</p>
<ul>
<li><a href="http://geneontology.org/page/ontology-relations#basics" target="_blank" rel="external">Ontology Relations</a></li>
<li><a href="http://geneontology.org/faq-page" target="_blank" rel="external">Frequently Asked Questions (FAQ)</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;相似的基因在不同物种中，其功能往往保守的。显然，需要一个&lt;strong&gt;统一的术语&lt;/strong&gt;用于描述这些跨物种的同源基因及其基因产物的功能，否则，不同的实验室对相同的基因的功能的描述不同，将极大限制学术的交流。而 Gene Ontology (GO) 项目正是为了能
    
    </summary>
    
      <category term="生信" scheme="https://hui-liu.github.io/categories/%E7%94%9F%E4%BF%A1/"/>
    
    
      <category term="功能注释" scheme="https://hui-liu.github.io/tags/%E5%8A%9F%E8%83%BD%E6%B3%A8%E9%87%8A/"/>
    
  </entry>
  
  <entry>
    <title>blast知多少</title>
    <link href="https://hui-liu.github.io/blog/blast%E7%9F%A5%E5%A4%9A%E5%B0%91/"/>
    <id>https://hui-liu.github.io/blog/blast知多少/</id>
    <published>2017-06-04T08:17:00.000Z</published>
    <updated>2017-06-08T13:27:05.341Z</updated>
    
    <content type="html"><![CDATA[<h2 id="BLAST-的简单介绍"><a href="#BLAST-的简单介绍" class="headerlink" title="BLAST 的简单介绍"></a>BLAST 的简单介绍</h2><p>BLAST 是 NCBI 开发的一个基于序列相似性的数据库搜索程序。BLAST 是 <strong>Basic Local Alignment Search Tool</strong> 的缩写。而 BLAST+ 可以说是 BLAST 的升级版，核心算法是一样的，但在运行速度上有了较大的提升。<strong>由于 BLAST 和 BLAST+ 核心算法一样，为了方便，文章统一用 BLAST</strong>。</p>
<p>BLAST+ 的下载地址为：ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/2.2.31/，有 linux 版和 windows 版。对于 linux 版，解压即可使用，对于 windows，双击，按默认设置安装即可。 </p>
<p>BLAST 比对，所需要的数据分为两部分：</p>
<ul>
<li>query sequence，自己感兴趣的序列，一般以 fasta 格式存储。</li>
<li>database，一般也是 fasta 格式，可以是某个物种的基因组，也可以是其它数据库，如 Nr 数据库，Swiss-Prot 数据库等。</li>
</ul>
<h2 id="BLAST-比对基于生物学原理"><a href="#BLAST-比对基于生物学原理" class="headerlink" title="BLAST 比对基于生物学原理"></a>BLAST 比对基于生物学原理</h2><p>需要了解的两个概念：</p>
<ul>
<li><p>同源基因：指基因来自一个共同祖先。可分为<strong>直系同源基因</strong>（ortholog）和<strong>旁系同源基因</strong>（paralog）。直系同源基因指基因通过物种形成事件而产生的物种间的拷贝；而旁系同源基因指同一个物种中，基因通过基因复制事件，产生一份新的拷贝。</p>
<blockquote>
<p>下图是一个简单的例子，<em>species w</em> 中的基因 A 进过复制事件，产生一个新的拷贝；为了区分，原基因 A 命名为 A1，新产生的拷贝命名为 A2，则 A1 和 A2 互为旁系同源基因。随后，<em>species w</em> 经过物种形成事件，产生 <em>species x</em> 和 <em>species y</em>；则 A1 和 A2 分别在 <em>species x</em>  中记为 A1x 和 A2x，在 <em>species y</em> 中记为  A1y 和 A2y。那么，A1x 和 A1y 为直系同源基因；A2x 和 A2y 也是直系同源基因。</p>
<p><img src="/blog/blast知多少/1.png" alt="1"></p>
</blockquote>
</li>
<li><p>相似性：指序列之间的相似度。无论是直系同源基因还是旁系同源基因产生后，经过漫长的演化历程，这些基因会通过突变产生分化，使得不同物种间的直系同源基因或同一物种中的旁系同源基因不再一致，但具有很高的相似性；如过演化时间足够长或这个基因的保守性不高，那么，同源基因的相似性就会很低；还有可能由于<strong>趋同进化</strong>，使得两个基因具有相似性，但这在序列水平上，发生的可能性较低。</p>
</li>
</ul>
<p>BLAST （或其它相似性比对软件）的生物学原理就是基于序列的相似性，推断该序列的同源基因，又根据同源基因具有相同功能，从而达到给 query sequence 进行功能注释的目的，这个方法往往是有效的。尽管方法会误判（假阳性）或漏判（假阴性），但目前还没有能替代相似性推断同源性的方法，只能通过设置合理的阈值，尽量减少假阳性和假阴性的发生。</p>
<h2 id="BLAST-算法的简单介绍"><a href="#BLAST-算法的简单介绍" class="headerlink" title="BLAST 算法的简单介绍"></a>BLAST 算法的简单介绍</h2><p>从名字可以看出，BLAST 是基于局部比对的，其算法的主要分以下两步：</p>
<p><strong>第一步</strong>：</p>
<p>将 query sequence 和 database 中的序列打碎成小片段，在 BLAST 中，称之为 words；然后将 query 中的每个 word 比对到 database 中相似的 words，并为联配（alignment）的结果打分；打分的依据是核苷酸或氨基酸替换矩阵，这个矩阵可以根据核苷酸的替换或颠换的特点，或氨基疏水性或正负电等特点，规定核苷酸间替换或氨基酸间替换的得分。如果得分超过设置的阈值，则认为 query word 和 database word 间具有相似性，进而形成 query words 和 database words 的列表。然后，BLAST 会根据 database words，扫描整个数据库，找出这些 database words 来自 database 的哪些序列。</p>
<p>把序列打断成 words 并找出这些 words 与 database 中的哪些序列相似，这个策略可以实现蛋白质序列和氨基酸序列之间的相似性比对。如 query sequence 是一条蛋白质序列，想知道这条序列是 DNA database 中的哪条 DNA 序列编码形成的，BLAST 中的子程序 <strong>tblastn</strong> 可以实现这个工作。tblastn 按照 six reading frames 的原则，将 DNA database   翻译成氨基酸数据库。然后，将 query sequence 打断成 words，与氨基酸数据做比对。</p>
<p><strong>第二步</strong>：</p>
<p>这一步的目的是 words 的延伸和结果得分排序。BLAST 的算法，尽可能的延伸 words，使得 words 形成更长的片段，同时，计算延伸后的得分，当得分小于指定的阈值，停止延伸。延伸过程中的打分方式一般和第一步中的方法一样。由于 query sequence 会形成很多个 words，这样，就有可能产生多个匹配结果；所以，通过某种方式，如总的比对得分或 E-value，进行排序，将最好的几个结果保留下来（通过参数指定阈值）。</p>
<h2 id="BLAST-的分类"><a href="#BLAST-的分类" class="headerlink" title="BLAST 的分类"></a>BLAST 的分类</h2><table>
<thead>
<tr>
<th>程序</th>
<th>query</th>
<th>database</th>
</tr>
</thead>
<tbody>
<tr>
<td>blastn</td>
<td>核酸</td>
<td>核酸</td>
</tr>
<tr>
<td>blastp</td>
<td>蛋白质</td>
<td>蛋白质</td>
</tr>
<tr>
<td>blastx</td>
<td>核酸</td>
<td>蛋白质</td>
</tr>
<tr>
<td>tblastn</td>
<td>蛋白质</td>
<td>核酸</td>
</tr>
<tr>
<td>tblastx</td>
<td>核酸</td>
<td>核酸</td>
</tr>
</tbody>
</table>
<p><strong>blastx 、tblastn 和 tblastx 中的核酸序列按 six reading frames 的原则翻译成蛋白质序列，然后进行比对</strong></p>
<h2 id="BLAST-的简单使用"><a href="#BLAST-的简单使用" class="headerlink" title="BLAST 的简单使用"></a>BLAST 的简单使用</h2><p>这里讲 BLAST+ 的用法，分两步，第一步是建库：</p>
<figure class="highlight elm"><table><tr><td class="code"><pre><div class="line"><span class="title">makeblastdb</span> -<span class="keyword">in</span> genome.fasta -db<span class="keyword">type</span> nucl</div></pre></td></tr></table></figure>
<p>这里的 genome.fasta 就是上面说的 datatase；参数 <code>-dbtype</code>：指定数据库的类型，<strong>nucl</strong> 指的是核苷酸序列，如果是蛋白质序列，则用 <strong>prot</strong> 代替。</p>
<p>第二步是比对：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><div class="line">tblastn -query query_pep<span class="selector-class">.fasta</span> -db genome<span class="selector-class">.fasta</span> -evalue <span class="number">1</span>e-<span class="number">5</span> -num_threads <span class="number">20</span> -max_target_seqs <span class="number">5</span> -out query_pep<span class="selector-class">.outfmt6</span> -outfmt <span class="string">"6 qseqid sseqid pident qcovs mismatch gapopen qstart qend sstart send evalue bitscore"</span></div></pre></td></tr></table></figure>
<ul>
<li><code>-evalue</code> 指定 E-value的值，E-value 用于评价 bitscore （输出文件 query_pep.outfmt6 的第12列）的可靠性，该值越小可靠性越高。</li>
<li><code>-num_threads</code> 指定线程数，根据自己的计算机资源调整。</li>
<li><code>-max_target_seqs</code> 指定保留多少个结果，例子表示保留最好的 5 个比对结果。</li>
<li><code>-outfmt</code> 指定输出格式，如下</li>
</ul>
<figure class="highlight lsl"><table><tr><td class="code"><pre><div class="line"> <span class="number">0</span> = pairwise,</div><div class="line"> <span class="number">1</span> = query-anchored showing identities,</div><div class="line"> <span class="number">2</span> = query-anchored no identities,</div><div class="line"> <span class="number">3</span> = flat query-anchored, show identities,</div><div class="line"> <span class="number">4</span> = flat query-anchored, no identities,</div><div class="line"> <span class="number">5</span> = XML Blast output,</div><div class="line"> <span class="number">6</span> = tabular,</div><div class="line"> <span class="number">7</span> = tabular with comment lines,</div><div class="line"> <span class="number">8</span> = Text ASN<span class="number">.1</span>,</div><div class="line"> <span class="number">9</span> = Binary ASN<span class="number">.1</span>,</div><div class="line"><span class="number">10</span> = Comma-separated values,</div><div class="line"><span class="number">11</span> = BLAST archive format (ASN<span class="number">.1</span>)</div></pre></td></tr></table></figure>
<p>6 表示以列表的方式输出，而每一列的含义，按引号中的字符指定：</p>
<figure class="highlight autoit"><table><tr><td class="code"><pre><div class="line">qseqid sseqid pident qcovs mismatch gapopen qstart qend sstart <span class="built_in">send</span> evalue bitscore</div></pre></td></tr></table></figure>
<p>依次表示：</p>
<table>
<thead>
<tr>
<th>列名</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>qseqid</td>
<td>query sequence  的 id</td>
</tr>
<tr>
<td>sseqid</td>
<td>database sequence 的 id</td>
</tr>
<tr>
<td>pident</td>
<td>相似度</td>
</tr>
<tr>
<td>qcovs</td>
<td>覆盖度（比对上的片段占query sequence长度的百分比），</td>
</tr>
<tr>
<td>mismatch</td>
<td>错配数</td>
</tr>
<tr>
<td>gapopen</td>
<td>gap 数</td>
</tr>
<tr>
<td>qstart</td>
<td>query sequence 比对的起始位置</td>
</tr>
<tr>
<td>qend</td>
<td>query sequence 比对的终止位置</td>
</tr>
<tr>
<td>sstart</td>
<td>database sequence 比对的起始位置</td>
</tr>
<tr>
<td>send</td>
<td>database sequence 比对的终止位置</td>
</tr>
<tr>
<td>evalue</td>
<td>评价 bitscore 的可靠性，值越小越好</td>
</tr>
<tr>
<td>bitscore</td>
<td>比对得分，越高越好</td>
</tr>
</tbody>
</table>
<p>格式  6, 7, 和 10 支持输出的列及含义如下：</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><div class="line">  qseqid <span class="keyword">means</span> <span class="keyword">Query</span> Seq-id</div><div class="line">       qgi <span class="keyword">means</span> <span class="keyword">Query</span> GI</div><div class="line">      qacc <span class="keyword">means</span> <span class="keyword">Query</span> accesion</div><div class="line">   qaccver <span class="keyword">means</span> <span class="keyword">Query</span> accesion.<span class="keyword">version</span></div><div class="line">      qlen <span class="keyword">means</span> <span class="keyword">Query</span> sequence <span class="built_in">length</span></div><div class="line">    sseqid <span class="keyword">means</span> Subject Seq-id</div><div class="line"> sallseqid <span class="keyword">means</span> All subject Seq-id(s), separated <span class="keyword">by</span> a ';'</div><div class="line">       sgi <span class="keyword">means</span> Subject GI</div><div class="line">    sallgi <span class="keyword">means</span> All subject GIs</div><div class="line">      sacc <span class="keyword">means</span> Subject accession</div><div class="line">   saccver <span class="keyword">means</span> Subject accession.<span class="keyword">version</span></div><div class="line">   sallacc <span class="keyword">means</span> All subject accessions</div><div class="line">      slen <span class="keyword">means</span> Subject sequence <span class="built_in">length</span></div><div class="line">    qstart <span class="keyword">means</span> Start of alignment <span class="keyword">in</span> <span class="keyword">query</span></div><div class="line">      qend <span class="keyword">means</span> End of alignment <span class="keyword">in</span> <span class="keyword">query</span></div><div class="line">    sstart <span class="keyword">means</span> Start of alignment <span class="keyword">in</span> subject</div><div class="line">      send <span class="keyword">means</span> End of alignment <span class="keyword">in</span> subject</div><div class="line">      qseq <span class="keyword">means</span> Aligned part of <span class="keyword">query</span> sequence</div><div class="line">      sseq <span class="keyword">means</span> Aligned part of subject sequence</div><div class="line">    evalue <span class="keyword">means</span> Expect value</div><div class="line">  bitscore <span class="keyword">means</span> Bit <span class="keyword">score</span></div><div class="line">     <span class="keyword">score</span> <span class="keyword">means</span> Raw <span class="keyword">score</span></div><div class="line">    length <span class="keyword">means</span> Alignment <span class="built_in">length</span></div><div class="line">    pident <span class="keyword">means</span> Percentage of identical matches</div><div class="line">    nident <span class="keyword">means</span> Number of identical matches</div><div class="line">  mismatch <span class="keyword">means</span> Number of mismatches</div><div class="line">  positive <span class="keyword">means</span> Number of positive-scoring matches</div><div class="line">   gapopen <span class="keyword">means</span> Number of gap openings</div><div class="line">      gaps <span class="keyword">means</span> <span class="keyword">Total</span> number of gaps</div><div class="line">      ppos <span class="keyword">means</span> Percentage of positive-scoring matches</div><div class="line">    frames <span class="keyword">means</span> <span class="keyword">Query</span> and subject frames separated <span class="keyword">by</span> a '/'</div><div class="line">    qframe <span class="keyword">means</span> <span class="keyword">Query</span> frame</div><div class="line">    sframe <span class="keyword">means</span> Subject frame</div><div class="line">      btop <span class="keyword">means</span> Blast traceback operations (BTOP)</div><div class="line">   staxids <span class="keyword">means</span> unique Subject Taxonomy ID(s), separated <span class="keyword">by</span> a ';'</div><div class="line">                 (<span class="keyword">in</span> numerical <span class="keyword">order</span>)</div><div class="line"> sscinames <span class="keyword">means</span> unique Subject Scientific Name(s), separated <span class="keyword">by</span> a ';'</div><div class="line"> scomnames <span class="keyword">means</span> unique Subject Common Name(s), separated <span class="keyword">by</span> a ';'</div><div class="line">sblastnames <span class="keyword">means</span> unique Subject Blast Name(s), separated <span class="keyword">by</span> a ';'</div><div class="line">                 (<span class="keyword">in</span> alphabetical <span class="keyword">order</span>)</div><div class="line">sskingdoms <span class="keyword">means</span> unique Subject Super Kingdom(s), separated <span class="keyword">by</span> a ';'</div><div class="line">                 (<span class="keyword">in</span> alphabetical <span class="keyword">order</span>)</div><div class="line">    stitle <span class="keyword">means</span> Subject Title</div><div class="line">salltitles <span class="keyword">means</span> All Subject Title(s), separated <span class="keyword">by</span> a '&lt;&gt;'</div><div class="line">   sstrand <span class="keyword">means</span> Subject Strand</div><div class="line">     qcovs <span class="keyword">means</span> <span class="keyword">Query</span> Coverage Per Subject</div><div class="line">   qcovhsp <span class="keyword">means</span> <span class="keyword">Query</span> Coverage Per HSP</div></pre></td></tr></table></figure>
<p>可以运行：</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><div class="line">tblastn -<span class="built_in">help</span></div></pre></td></tr></table></figure>
<p>查看 tblastn 的所有参数。</p>
<h2 id="如何设定阈值"><a href="#如何设定阈值" class="headerlink" title="如何设定阈值"></a>如何设定阈值</h2><p>需要考虑的值有三个</p>
<ul>
<li><p>E-value：做功能注释时，通常将序列比对到 swiss-prot 数据库和 NCBI 的 Nr 数据库，这时，设置 E-value 为 1e-5（10的-5次幂）就可以了；如果是其他较小的数据库，如拟南芥基因组，建议将 E-value 设置为 1e-10。因为 E-value 的大小与数据库的大小有关（公式如下），其中 n 代表数据库大小，S 为 bitscore 值。当然 E-value 值设置的大小应按不同的研究，设置不同的大小，可以按特定研究的文献进行设置。</p>
<p><img src="/blog/blast知多少/2.png" alt="2"></p>
</li>
<li><p>相似度：即 pident。在氨基酸水平上，相似度可以设置为 30，严格一些可以设置为 70；在核苷酸水上，可以设置 70 或 90。没有统一的标准，还是以特定研究的参考文献为准。</p>
</li>
<li><p>覆盖度：即 qcovs。由于 BLAST 是局部相似性比对，即考虑 query sequence 中的某个片段与 database sequence 中的某个片段的相似性，而 <strong>E-value和相似度都是评价这些片段的相似性，是一个局部评价体系</strong>，所以，还要有一个全局的评价体系，如覆盖度。因此，想要查找某个基因在 database 中的相似序列，还需要做一个全局覆盖度不能太低；可以按特定要求，设置为 50，70 或 90。</p>
</li>
</ul>
<p><strong>无论如何，需要记住的一点是，相似性并不能证明同源性。</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;BLAST-的简单介绍&quot;&gt;&lt;a href=&quot;#BLAST-的简单介绍&quot; class=&quot;headerlink&quot; title=&quot;BLAST 的简单介绍&quot;&gt;&lt;/a&gt;BLAST 的简单介绍&lt;/h2&gt;&lt;p&gt;BLAST 是 NCBI 开发的一个基于序列相似性的数据库搜索程序。
    
    </summary>
    
      <category term="生信" scheme="https://hui-liu.github.io/categories/%E7%94%9F%E4%BF%A1/"/>
    
    
      <category term="software" scheme="https://hui-liu.github.io/tags/software/"/>
    
  </entry>
  
  <entry>
    <title>笔记本上的生信分析：根据区间批量提取序列</title>
    <link href="https://hui-liu.github.io/blog/%E7%AC%94%E8%AE%B0%E6%9C%AC%E4%B8%8A%E7%9A%84%E7%94%9F%E4%BF%A1%E5%88%86%E6%9E%90%EF%BC%9A%E6%A0%B9%E6%8D%AE%E5%8C%BA%E9%97%B4%E6%89%B9%E9%87%8F%E6%8F%90%E5%8F%96%E5%BA%8F%E5%88%97/"/>
    <id>https://hui-liu.github.io/blog/笔记本上的生信分析：根据区间批量提取序列/</id>
    <published>2017-05-27T08:56:14.000Z</published>
    <updated>2017-06-07T03:51:48.092Z</updated>
    
    <content type="html"><![CDATA[<p>给定 chromosome 或 scaffold 的坐标（起始和终止位置），如何将对应序列提取出来？</p>
<p>这个问题需要分类讨论，以下面的数据为例：</p>
<figure class="highlight basic"><table><tr><td class="code"><pre><div class="line"><span class="symbol">1 </span><span class="number">18870555</span> <span class="number">18872567</span></div><div class="line"><span class="symbol">1 </span><span class="number">14014796</span> <span class="number">14015029</span></div><div class="line"><span class="symbol">1 </span><span class="number">14015227</span> <span class="number">14015505</span></div><div class="line"><span class="symbol">1 </span><span class="number">27611499</span> <span class="number">27612179</span></div><div class="line"><span class="symbol">1 </span><span class="number">6053214</span> <span class="number">6053029</span></div></pre></td></tr></table></figure>
<p><strong>a. 如果起始坐标小于终止位置，则直接提取</strong></p>
<p>如 <code>1 18870555 18872567</code> 表示 <code>1</code> 号染色体的 <code>18870555</code> 到 <code>18872567</code> 这个区间的序列（包括起始）。</p>
<p>提取方法是应用 <code>python</code> 的序列切片语法；用 <code>chr1</code> 表示一号染色体的序列，则这样提取这个区间的序列：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><div class="line">chr1[<span class="number">18870555</span><span class="number">-1</span>: <span class="number">18872567</span>]</div></pre></td></tr></table></figure>
<p>起始坐标减 1，是因为 <code>python</code> 的计数是从 0 开始的；终止位置不减 1，是因为 <code>python</code> 的序列切片语法遵循<strong>左闭右开</strong>的原则，即切片时包括起始坐标，但不包括终止坐标。</p>
<p><strong>b. 如果起始位置大于终止位置，则提取其反向互补序列</strong> </p>
<p>以<code>1 6053214 6053029</code> 为例。</p>
<p>这个情况，实现方法分两步：</p>
<p><strong>b1. 首先互换起始和终止坐标，并提取这个区间的序列</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><div class="line">seq = chr1[<span class="number">6053029</span><span class="number">-1</span>: <span class="number">6053214</span>]</div></pre></td></tr></table></figure>
<p><strong>b2. 然后， 用一个函数，将 seq 转成其反向互补的序列</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><div class="line">revcomp(seq)</div></pre></td></tr></table></figure>
<p>那么，应该如何写这个函数呢？看下边例子</p>
<figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">revcomp</span><span class="params">(dna)</span>:</span></div><div class="line">    bases = <span class="string">'ATGCTACG'</span></div><div class="line">    complement_dict = &#123;bases[i]:bases[i+<span class="number">4</span>] <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>)&#125;</div><div class="line">    dna = reversed(dna)</div><div class="line">    result = [complement_dict[base] <span class="keyword">for</span> base <span class="keyword">in</span> dna]</div><div class="line">    <span class="keyword">return</span> <span class="string">''</span>.join(result)</div><div class="line"></div><div class="line">my_dna = <span class="string">'AAATTTCGCGCG'</span></div><div class="line"><span class="keyword">print</span> revcomp(my_dna)</div></pre></td></tr></table></figure>
<p>结果是：</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><div class="line"><span class="attribute">CGCGCGAAATTT</span></div></pre></td></tr></table></figure>
<p>其实现步骤分两步：</p>
<p><strong>第一步：反向</strong></p>
<p>这步直接用 <code>python</code> 的内置函数：<code>reversed</code>。可以将 <code>AAATTTCGCGCG</code> 的顺序反过来：<code>GCGCGCTTTAAA</code>。</p>
<p><strong>第二步：互补</strong></p>
<p>这一步的思路是，首先构建一个互补的字典，如 <code>{&quot;A&quot; : &quot;T&quot;}</code> ，而 <code>complement_dict</code> 则内容如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><div class="line">&#123;<span class="string">'A'</span>: <span class="string">'T'</span>, <span class="string">'C'</span>: <span class="string">'G'</span>, <span class="string">'T'</span>: <span class="string">'A'</span>, <span class="string">'G'</span>: <span class="string">'C'</span>&#125;</div></pre></td></tr></table></figure>
<p>所以，当对序列 <code>GCGCGCTTTAAA</code> 进行遍历时，可以通过 <code>complement_dict</code>，转换成相应的互补碱基，如 <code>G</code> 转换成 <code>C</code>。</p>
<hr>
<p>好了，上面讲的是思路，下面的程序的实现了上面思路。运行方法是：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><div class="line">python extract_seqs_by_coordinates.py sequences.fasta regions.txt out.fasta</div></pre></td></tr></table></figure>
<p>其中，</p>
<ul>
<li><code>extract_seqs_by_coordinates.py</code> 为 <code>python</code> 程序，其中的的代码在后面贴出来；</li>
<li><code>sequences.fasta</code> 是啥，大家应该知道了；<code>regions.txt</code> 的数据格式前面已经给出来了，通过 <code>awk</code> 等 linux 命令，可以很容易地从 <code>blast</code> 等软件的结果中提取出来，这里不再赘述（如果软件跑出来的数据格式比较复杂，那就是另外一个问题了）；</li>
<li><code>out.fasta</code> 是输出文件，自己定义。</li>
</ul>
<p><strong><code>extract_seqs_by_coordinates.py</code>  程序的代码如下：</strong></p>
<p>其中，<code>coortoDict</code> 函数将 <code>regions.txt</code> 文件内容转换成 <code>python</code> 的字典，如 </p>
<p><code>{&#39;2&#39;: [[9025486, 9025542, &#39;-&#39;], [180481, 180543, &#39;-&#39;]]}</code></p>
<hr>
<figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> sys</div><div class="line"></div><div class="line">USAGE = <span class="string">"\nusage: python  %s sequences.fasta regions.txt out.fasta\n"</span> % sys.argv[<span class="number">0</span>]</div><div class="line"></div><div class="line"><span class="keyword">if</span> len(sys.argv) != <span class="number">4</span>:</div><div class="line">    <span class="keyword">print</span> USAGE</div><div class="line">    sys.exit()</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">parseFasta</span><span class="params">(filename)</span>:</span></div><div class="line">    fas = &#123;&#125;</div><div class="line">    id = <span class="keyword">None</span></div><div class="line">    <span class="keyword">with</span> open(filename, <span class="string">'r'</span>) <span class="keyword">as</span> fh:</div><div class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> fh:</div><div class="line">            <span class="keyword">if</span> line[<span class="number">0</span>] == <span class="string">'&gt;'</span>:</div><div class="line">                header = line[<span class="number">1</span>:].rstrip()</div><div class="line">                id = header.split()[<span class="number">0</span>]</div><div class="line">                fas[id] = []</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                fas[id].append(line.rstrip())</div><div class="line">        <span class="keyword">for</span> id, seq <span class="keyword">in</span> fas.iteritems():</div><div class="line">            fas[id] = <span class="string">''</span>.join(seq)</div><div class="line">    <span class="keyword">return</span> fas</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">coortoDict</span><span class="params">(filename)</span>:</span></div><div class="line">    coor = &#123;&#125;</div><div class="line">    <span class="keyword">with</span> open(filename, <span class="string">'r'</span>) <span class="keyword">as</span> f:</div><div class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> f:</div><div class="line">            lsplit = line.split()</div><div class="line">            strand = <span class="string">"+"</span></div><div class="line">            <span class="keyword">if</span> int(lsplit[<span class="number">1</span>]) &gt; int(lsplit[<span class="number">2</span>]):</div><div class="line">                lsplit[<span class="number">1</span>], lsplit[<span class="number">2</span>] = lsplit[<span class="number">2</span>], lsplit[<span class="number">1</span>]</div><div class="line">                strand = <span class="string">"-"</span></div><div class="line">            coor.setdefault(lsplit[<span class="number">0</span>],[]).append([int(lsplit[<span class="number">1</span>]), int(lsplit[<span class="number">2</span>]), strand])</div><div class="line">    <span class="keyword">return</span> coor            </div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">revcomp</span><span class="params">(seq)</span>:</span></div><div class="line">    bases = <span class="string">'ABCDGHKMNRSTUVWXYabcdghkmnrstuvwxyTVGHCDMKNYSAABWXRtvghcdmknysaabwxr'</span></div><div class="line">    complement_dict = &#123;bases[i]:bases[i+<span class="number">34</span>] <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">34</span>)&#125;</div><div class="line">    seq = reversed(seq)</div><div class="line">    result = [complement_dict[base] <span class="keyword">for</span> base <span class="keyword">in</span> seq]</div><div class="line">    <span class="keyword">return</span> <span class="string">''</span>.join(result)</div><div class="line"></div><div class="line"></div><div class="line">fas = parseFasta(sys.argv[<span class="number">1</span>])</div><div class="line">coors = coortoDict(sys.argv[<span class="number">2</span>])</div><div class="line">OUT = open(sys.argv[<span class="number">3</span>], <span class="string">'w'</span>)</div><div class="line"></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> coors:</div><div class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> coors[i]:</div><div class="line">        <span class="keyword">if</span> j[<span class="number">2</span>] ==<span class="string">"-"</span>:</div><div class="line">            seq = revcomp(fas[i][j[<span class="number">0</span>]<span class="number">-1</span>: j[<span class="number">1</span>]])</div><div class="line">            OUT.write(<span class="string">"&gt;"</span> + i + <span class="string">":"</span> + str(j[<span class="number">0</span>]) + <span class="string">"-"</span> + str(j[<span class="number">1</span>]) + <span class="string">"\n"</span> + seq + <span class="string">"\n"</span>)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            seq = fas[i][j[<span class="number">0</span>]<span class="number">-1</span>: j[<span class="number">1</span>]]</div><div class="line">            OUT.write(<span class="string">"&gt;"</span> + i + <span class="string">":"</span> + str(j[<span class="number">0</span>]) + <span class="string">"-"</span> + str(j[<span class="number">1</span>]) + <span class="string">"\n"</span> + seq + <span class="string">"\n"</span>)</div><div class="line">OUT.close()</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;给定 chromosome 或 scaffold 的坐标（起始和终止位置），如何将对应序列提取出来？&lt;/p&gt;
&lt;p&gt;这个问题需要分类讨论，以下面的数据为例：&lt;/p&gt;
&lt;figure class=&quot;highlight basic&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;
    
    </summary>
    
      <category term="生信" scheme="https://hui-liu.github.io/categories/%E7%94%9F%E4%BF%A1/"/>
    
    
      <category term="python" scheme="https://hui-liu.github.io/tags/python/"/>
    
  </entry>
  
</feed>
